
TrustZone_challengeResponse_NonSecure.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000238  08100000  08100000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004868  08100238  08100238  00001238  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000380  08104aa0  08104aa0  00005aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 CMOX_CTA_PROTECTED_DATA 00000394  08104e20  08104e20  00005e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  081051b4  081051b4  000061b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000004  081051b8  081051b8  000061b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         00000015  20040000  081051bc  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000000a4  20040018  081051d1  00007018  2**2
                  ALLOC
  8 ._user_heap_stack 00000604  200400bc  081051d1  000070bc  2**0
                  ALLOC
  9 .ARM.attributes 0000003a  00000000  00000000  00007015  2**0
                  CONTENTS, READONLY
 10 .debug_info   00006126  00000000  00000000  0000704f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 0000126a  00000000  00000000  0000d175  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 000006b0  00000000  00000000  0000e3e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 000004e7  00000000  00000000  0000ea90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  00031f8a  00000000  00000000  0000ef77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   00007f70  00000000  00000000  00040f01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00137e3a  00000000  00000000  00048e71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000043  00000000  00000000  00180cab  2**0
                  CONTENTS, READONLY
 18 .iar_vfe_header 00000030  00000000  00000000  00180cf0  2**2
                  CONTENTS, READONLY
 19 .debug_frame  00001930  00000000  00000000  00180d20  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line_str 00000080  00000000  00000000  00182650  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08100238 <__do_global_dtors_aux>:
 8100238:	b510      	push	{r4, lr}
 810023a:	4c05      	ldr	r4, [pc, #20]	@ (8100250 <__do_global_dtors_aux+0x18>)
 810023c:	7823      	ldrb	r3, [r4, #0]
 810023e:	b933      	cbnz	r3, 810024e <__do_global_dtors_aux+0x16>
 8100240:	4b04      	ldr	r3, [pc, #16]	@ (8100254 <__do_global_dtors_aux+0x1c>)
 8100242:	b113      	cbz	r3, 810024a <__do_global_dtors_aux+0x12>
 8100244:	4804      	ldr	r0, [pc, #16]	@ (8100258 <__do_global_dtors_aux+0x20>)
 8100246:	f3af 8000 	nop.w
 810024a:	2301      	movs	r3, #1
 810024c:	7023      	strb	r3, [r4, #0]
 810024e:	bd10      	pop	{r4, pc}
 8100250:	20040018 	.word	0x20040018
 8100254:	00000000 	.word	0x00000000
 8100258:	08104a80 	.word	0x08104a80

0810025c <frame_dummy>:
 810025c:	b508      	push	{r3, lr}
 810025e:	4b03      	ldr	r3, [pc, #12]	@ (810026c <frame_dummy+0x10>)
 8100260:	b11b      	cbz	r3, 810026a <frame_dummy+0xe>
 8100262:	4903      	ldr	r1, [pc, #12]	@ (8100270 <frame_dummy+0x14>)
 8100264:	4803      	ldr	r0, [pc, #12]	@ (8100274 <frame_dummy+0x18>)
 8100266:	f3af 8000 	nop.w
 810026a:	bd08      	pop	{r3, pc}
 810026c:	00000000 	.word	0x00000000
 8100270:	2004001c 	.word	0x2004001c
 8100274:	08104a80 	.word	0x08104a80

08100278 <cmox_ecdsa_verify>:
 8100278:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810027c:	b092      	sub	sp, #72	@ 0x48
 810027e:	2400      	movs	r4, #0
 8100280:	460d      	mov	r5, r1
 8100282:	9405      	str	r4, [sp, #20]
 8100284:	9404      	str	r4, [sp, #16]
 8100286:	9408      	str	r4, [sp, #32]
 8100288:	9407      	str	r4, [sp, #28]
 810028a:	9406      	str	r4, [sp, #24]
 810028c:	b3a5      	cbz	r5, 81002f8 <cmox_ecdsa_verify+0x80>
 810028e:	0016      	movs	r6, r2
 8100290:	bf1f      	itttt	ne
 8100292:	9f1c      	ldrne	r7, [sp, #112]	@ 0x70
 8100294:	2f00      	cmpne	r7, #0
 8100296:	f8dd 8078 	ldrne.w	r8, [sp, #120]	@ 0x78
 810029a:	f1b8 0f00 	cmpne.w	r8, #0
 810029e:	d02b      	beq.n	81002f8 <cmox_ecdsa_verify+0x80>
 81002a0:	0004      	movs	r4, r0
 81002a2:	d029      	beq.n	81002f8 <cmox_ecdsa_verify+0x80>
 81002a4:	6960      	ldr	r0, [r4, #20]
 81002a6:	49a4      	ldr	r1, [pc, #656]	@ (8100538 <cmox_ecdsa_verify+0x2c0>)
 81002a8:	4288      	cmp	r0, r1
 81002aa:	d125      	bne.n	81002f8 <cmox_ecdsa_verify+0x80>
 81002ac:	6920      	ldr	r0, [r4, #16]
 81002ae:	69c1      	ldr	r1, [r0, #28]
 81002b0:	6a68      	ldr	r0, [r5, #36]	@ 0x24
 81002b2:	4201      	tst	r1, r0
 81002b4:	bf08      	it	eq
 81002b6:	4ea1      	ldreq	r6, [pc, #644]	@ (810053c <cmox_ecdsa_verify+0x2c4>)
 81002b8:	d01f      	beq.n	81002fa <cmox_ecdsa_verify+0x82>
 81002ba:	f895 0028 	ldrb.w	r0, [r5, #40]	@ 0x28
 81002be:	07c1      	lsls	r1, r0, #31
 81002c0:	bf58      	it	pl
 81002c2:	4e9f      	ldrpl	r6, [pc, #636]	@ (8100540 <cmox_ecdsa_verify+0x2c8>)
 81002c4:	d57a      	bpl.n	81003bc <cmox_ecdsa_verify+0x144>
 81002c6:	9300      	str	r3, [sp, #0]
 81002c8:	6829      	ldr	r1, [r5, #0]
 81002ca:	6888      	ldr	r0, [r1, #8]
 81002cc:	f001 ff5c 	bl	8102188 <cmox_bn_countBits>
 81002d0:	4681      	mov	r9, r0
 81002d2:	f109 0007 	add.w	r0, r9, #7
 81002d6:	ea4f 0ad0 	mov.w	sl, r0, lsr #3
 81002da:	6828      	ldr	r0, [r5, #0]
 81002dc:	6800      	ldr	r0, [r0, #0]
 81002de:	f001 ff53 	bl	8102188 <cmox_bn_countBits>
 81002e2:	1dc0      	adds	r0, r0, #7
 81002e4:	ea4f 0bd0 	mov.w	fp, r0, lsr #3
 81002e8:	9800      	ldr	r0, [sp, #0]
 81002ea:	ebb0 0f4b 	cmp.w	r0, fp, lsl #1
 81002ee:	bf04      	itt	eq
 81002f0:	981f      	ldreq	r0, [sp, #124]	@ 0x7c
 81002f2:	ebb0 0f4a 	cmpeq.w	r0, sl, lsl #1
 81002f6:	d001      	beq.n	81002fc <cmox_ecdsa_verify+0x84>
 81002f8:	4e92      	ldr	r6, [pc, #584]	@ (8100544 <cmox_ecdsa_verify+0x2cc>)
 81002fa:	e05f      	b.n	81003bc <cmox_ecdsa_verify+0x144>
 81002fc:	6923      	ldr	r3, [r4, #16]
 81002fe:	4622      	mov	r2, r4
 8100300:	4629      	mov	r1, r5
 8100302:	a809      	add	r0, sp, #36	@ 0x24
 8100304:	f002 f885 	bl	8102412 <cmox_ECC_InitCurve>
 8100308:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 810030a:	4d8f      	ldr	r5, [pc, #572]	@ (8100548 <cmox_ecdsa_verify+0x2d0>)
 810030c:	6801      	ldr	r1, [r0, #0]
 810030e:	4620      	mov	r0, r4
 8100310:	688a      	ldr	r2, [r1, #8]
 8100312:	a905      	add	r1, sp, #20
 8100314:	6812      	ldr	r2, [r2, #0]
 8100316:	f001 fe5d 	bl	8101fd4 <cmox_bn_alloc>
 810031a:	b108      	cbz	r0, 8100320 <cmox_ecdsa_verify+0xa8>
 810031c:	462e      	mov	r6, r5
 810031e:	e04d      	b.n	81003bc <cmox_ecdsa_verify+0x144>
 8100320:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8100322:	6801      	ldr	r1, [r0, #0]
 8100324:	4620      	mov	r0, r4
 8100326:	688a      	ldr	r2, [r1, #8]
 8100328:	a904      	add	r1, sp, #16
 810032a:	6812      	ldr	r2, [r2, #0]
 810032c:	f001 fe52 	bl	8101fd4 <cmox_bn_alloc>
 8100330:	b108      	cbz	r0, 8100336 <cmox_ecdsa_verify+0xbe>
 8100332:	462e      	mov	r6, r5
 8100334:	e03e      	b.n	81003b4 <cmox_ecdsa_verify+0x13c>
 8100336:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8100338:	6801      	ldr	r1, [r0, #0]
 810033a:	4620      	mov	r0, r4
 810033c:	688a      	ldr	r2, [r1, #8]
 810033e:	a908      	add	r1, sp, #32
 8100340:	6812      	ldr	r2, [r2, #0]
 8100342:	f001 fe47 	bl	8101fd4 <cmox_bn_alloc>
 8100346:	2800      	cmp	r0, #0
 8100348:	f040 8088 	bne.w	810045c <cmox_ecdsa_verify+0x1e4>
 810034c:	9a05      	ldr	r2, [sp, #20]
 810034e:	4651      	mov	r1, sl
 8100350:	eb08 000a 	add.w	r0, r8, sl
 8100354:	f001 ffa0 	bl	8102298 <cmox_bn_fromU8BE>
 8100358:	9805      	ldr	r0, [sp, #20]
 810035a:	2100      	movs	r1, #0
 810035c:	f001 fefe 	bl	810215c <cmox_bn_cmpUint>
 8100360:	2801      	cmp	r0, #1
 8100362:	d007      	beq.n	8100374 <cmox_ecdsa_verify+0xfc>
 8100364:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8100366:	6801      	ldr	r1, [r0, #0]
 8100368:	9805      	ldr	r0, [sp, #20]
 810036a:	6889      	ldr	r1, [r1, #8]
 810036c:	f001 feb5 	bl	81020da <cmox_bn_cmp>
 8100370:	2800      	cmp	r0, #0
 8100372:	d401      	bmi.n	8100378 <cmox_ecdsa_verify+0x100>
 8100374:	4e75      	ldr	r6, [pc, #468]	@ (810054c <cmox_ecdsa_verify+0x2d4>)
 8100376:	e015      	b.n	81003a4 <cmox_ecdsa_verify+0x12c>
 8100378:	a809      	add	r0, sp, #36	@ 0x24
 810037a:	f002 f860 	bl	810243e <cmox_ECC_InitCurveModDomainN>
 810037e:	b108      	cbz	r0, 8100384 <cmox_ecdsa_verify+0x10c>
 8100380:	462e      	mov	r6, r5
 8100382:	e00f      	b.n	81003a4 <cmox_ecdsa_verify+0x12c>
 8100384:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8100386:	9805      	ldr	r0, [sp, #20]
 8100388:	a909      	add	r1, sp, #36	@ 0x24
 810038a:	f000 fb9d 	bl	8100ac8 <cmox_ModularBN_Enter>
 810038e:	9b04      	ldr	r3, [sp, #16]
 8100390:	9a08      	ldr	r2, [sp, #32]
 8100392:	9905      	ldr	r1, [sp, #20]
 8100394:	a809      	add	r0, sp, #36	@ 0x24
 8100396:	f002 f80e 	bl	81023b6 <cmox_ECC_InvertModN>
 810039a:	b198      	cbz	r0, 81003c4 <cmox_ecdsa_verify+0x14c>
 810039c:	462e      	mov	r6, r5
 810039e:	a809      	add	r0, sp, #36	@ 0x24
 81003a0:	f002 f855 	bl	810244e <cmox_ECC_DeInitCurveModDomain>
 81003a4:	a908      	add	r1, sp, #32
 81003a6:	4620      	mov	r0, r4
 81003a8:	f001 fe1f 	bl	8101fea <cmox_bn_free>
 81003ac:	a904      	add	r1, sp, #16
 81003ae:	4620      	mov	r0, r4
 81003b0:	f001 fe1b 	bl	8101fea <cmox_bn_free>
 81003b4:	a905      	add	r1, sp, #20
 81003b6:	4620      	mov	r0, r4
 81003b8:	f001 fe17 	bl	8101fea <cmox_bn_free>
 81003bc:	4630      	mov	r0, r6
 81003be:	b013      	add	sp, #76	@ 0x4c
 81003c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81003c4:	991d      	ldr	r1, [sp, #116]	@ 0x74
 81003c6:	9a04      	ldr	r2, [sp, #16]
 81003c8:	ebb9 0fc1 	cmp.w	r9, r1, lsl #3
 81003cc:	d20b      	bcs.n	81003e6 <cmox_ecdsa_verify+0x16e>
 81003ce:	4651      	mov	r1, sl
 81003d0:	4638      	mov	r0, r7
 81003d2:	f001 ff61 	bl	8102298 <cmox_bn_fromU8BE>
 81003d6:	9a04      	ldr	r2, [sp, #16]
 81003d8:	ebc9 09ca 	rsb	r9, r9, sl, lsl #3
 81003dc:	4649      	mov	r1, r9
 81003de:	4610      	mov	r0, r2
 81003e0:	f000 f8ec 	bl	81005bc <cmox_RightShiftBN>
 81003e4:	e002      	b.n	81003ec <cmox_ecdsa_verify+0x174>
 81003e6:	4638      	mov	r0, r7
 81003e8:	f001 ff56 	bl	8102298 <cmox_bn_fromU8BE>
 81003ec:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 81003ee:	9b04      	ldr	r3, [sp, #16]
 81003f0:	6801      	ldr	r1, [r0, #0]
 81003f2:	6889      	ldr	r1, [r1, #8]
 81003f4:	4618      	mov	r0, r3
 81003f6:	460a      	mov	r2, r1
 81003f8:	f000 f99c 	bl	8100734 <cmox_ModSubBN>
 81003fc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 81003fe:	9a04      	ldr	r2, [sp, #16]
 8100400:	9908      	ldr	r1, [sp, #32]
 8100402:	9000      	str	r0, [sp, #0]
 8100404:	ab09      	add	r3, sp, #36	@ 0x24
 8100406:	4610      	mov	r0, r2
 8100408:	f000 fb88 	bl	8100b1c <cmox_ModularBN_Mul>
 810040c:	9a05      	ldr	r2, [sp, #20]
 810040e:	4651      	mov	r1, sl
 8100410:	4640      	mov	r0, r8
 8100412:	f001 ff41 	bl	8102298 <cmox_bn_fromU8BE>
 8100416:	9805      	ldr	r0, [sp, #20]
 8100418:	2100      	movs	r1, #0
 810041a:	f001 fe9f 	bl	810215c <cmox_bn_cmpUint>
 810041e:	2801      	cmp	r0, #1
 8100420:	d007      	beq.n	8100432 <cmox_ecdsa_verify+0x1ba>
 8100422:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8100424:	6801      	ldr	r1, [r0, #0]
 8100426:	9805      	ldr	r0, [sp, #20]
 8100428:	6889      	ldr	r1, [r1, #8]
 810042a:	f001 fe56 	bl	81020da <cmox_bn_cmp>
 810042e:	2800      	cmp	r0, #0
 8100430:	d401      	bmi.n	8100436 <cmox_ecdsa_verify+0x1be>
 8100432:	4e46      	ldr	r6, [pc, #280]	@ (810054c <cmox_ecdsa_verify+0x2d4>)
 8100434:	e7b3      	b.n	810039e <cmox_ecdsa_verify+0x126>
 8100436:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8100438:	9a05      	ldr	r2, [sp, #20]
 810043a:	9908      	ldr	r1, [sp, #32]
 810043c:	9000      	str	r0, [sp, #0]
 810043e:	ab09      	add	r3, sp, #36	@ 0x24
 8100440:	4610      	mov	r0, r2
 8100442:	f000 fb6b 	bl	8100b1c <cmox_ModularBN_Mul>
 8100446:	a809      	add	r0, sp, #36	@ 0x24
 8100448:	f002 f801 	bl	810244e <cmox_ECC_DeInitCurveModDomain>
 810044c:	a908      	add	r1, sp, #32
 810044e:	4620      	mov	r0, r4
 8100450:	f001 fdcb 	bl	8101fea <cmox_bn_free>
 8100454:	a809      	add	r0, sp, #36	@ 0x24
 8100456:	f001 ffea 	bl	810242e <cmox_ECC_InitCurveModDomainP>
 810045a:	b108      	cbz	r0, 8100460 <cmox_ecdsa_verify+0x1e8>
 810045c:	462e      	mov	r6, r5
 810045e:	e7a5      	b.n	81003ac <cmox_ecdsa_verify+0x134>
 8100460:	a907      	add	r1, sp, #28
 8100462:	a809      	add	r0, sp, #36	@ 0x24
 8100464:	f001 fff6 	bl	8102454 <cmox_ECC_AllocPoint>
 8100468:	b108      	cbz	r0, 810046e <cmox_ecdsa_verify+0x1f6>
 810046a:	462e      	mov	r6, r5
 810046c:	e05f      	b.n	810052e <cmox_ecdsa_verify+0x2b6>
 810046e:	a906      	add	r1, sp, #24
 8100470:	a809      	add	r0, sp, #36	@ 0x24
 8100472:	f001 ffef 	bl	8102454 <cmox_ECC_AllocPoint>
 8100476:	b108      	cbz	r0, 810047c <cmox_ecdsa_verify+0x204>
 8100478:	462e      	mov	r6, r5
 810047a:	e054      	b.n	8100526 <cmox_ecdsa_verify+0x2ae>
 810047c:	9806      	ldr	r0, [sp, #24]
 810047e:	4659      	mov	r1, fp
 8100480:	6802      	ldr	r2, [r0, #0]
 8100482:	4630      	mov	r0, r6
 8100484:	f001 ff08 	bl	8102298 <cmox_bn_fromU8BE>
 8100488:	9806      	ldr	r0, [sp, #24]
 810048a:	4659      	mov	r1, fp
 810048c:	6842      	ldr	r2, [r0, #4]
 810048e:	eb06 000b 	add.w	r0, r6, fp
 8100492:	f001 ff01 	bl	8102298 <cmox_bn_fromU8BE>
 8100496:	9806      	ldr	r0, [sp, #24]
 8100498:	2101      	movs	r1, #1
 810049a:	6880      	ldr	r0, [r0, #8]
 810049c:	f001 fdd1 	bl	8102042 <cmox_bn_init>
 81004a0:	9806      	ldr	r0, [sp, #24]
 81004a2:	6901      	ldr	r1, [r0, #16]
 81004a4:	f041 0102 	orr.w	r1, r1, #2
 81004a8:	6101      	str	r1, [r0, #16]
 81004aa:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 81004ac:	9907      	ldr	r1, [sp, #28]
 81004ae:	9b04      	ldr	r3, [sp, #16]
 81004b0:	9a06      	ldr	r2, [sp, #24]
 81004b2:	9100      	str	r1, [sp, #0]
 81004b4:	6977      	ldr	r7, [r6, #20]
 81004b6:	9905      	ldr	r1, [sp, #20]
 81004b8:	a809      	add	r0, sp, #36	@ 0x24
 81004ba:	f8d7 c000 	ldr.w	ip, [r7]
 81004be:	47e0      	blx	ip
 81004c0:	b118      	cbz	r0, 81004ca <cmox_ecdsa_verify+0x252>
 81004c2:	2804      	cmp	r0, #4
 81004c4:	d110      	bne.n	81004e8 <cmox_ecdsa_verify+0x270>
 81004c6:	4e22      	ldr	r6, [pc, #136]	@ (8100550 <cmox_ecdsa_verify+0x2d8>)
 81004c8:	e029      	b.n	810051e <cmox_ecdsa_verify+0x2a6>
 81004ca:	9807      	ldr	r0, [sp, #28]
 81004cc:	2100      	movs	r1, #0
 81004ce:	4e21      	ldr	r6, [pc, #132]	@ (8100554 <cmox_ecdsa_verify+0x2dc>)
 81004d0:	7c00      	ldrb	r0, [r0, #16]
 81004d2:	f000 0001 	and.w	r0, r0, #1
 81004d6:	f000 fb79 	bl	8100bcc <cmox_mathUtils_neq>
 81004da:	2801      	cmp	r0, #1
 81004dc:	d01f      	beq.n	810051e <cmox_ecdsa_verify+0x2a6>
 81004de:	9907      	ldr	r1, [sp, #28]
 81004e0:	a809      	add	r0, sp, #36	@ 0x24
 81004e2:	f002 fa67 	bl	81029b4 <cmox_ECC_PointToAffine>
 81004e6:	b108      	cbz	r0, 81004ec <cmox_ecdsa_verify+0x274>
 81004e8:	462e      	mov	r6, r5
 81004ea:	e018      	b.n	810051e <cmox_ecdsa_verify+0x2a6>
 81004ec:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 81004ee:	9b04      	ldr	r3, [sp, #16]
 81004f0:	6801      	ldr	r1, [r0, #0]
 81004f2:	9807      	ldr	r0, [sp, #28]
 81004f4:	6889      	ldr	r1, [r1, #8]
 81004f6:	6800      	ldr	r0, [r0, #0]
 81004f8:	460a      	mov	r2, r1
 81004fa:	f000 f91b 	bl	8100734 <cmox_ModSubBN>
 81004fe:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8100500:	4a15      	ldr	r2, [pc, #84]	@ (8100558 <cmox_ecdsa_verify+0x2e0>)
 8100502:	6813      	ldr	r3, [r2, #0]
 8100504:	9003      	str	r0, [sp, #12]
 8100506:	9804      	ldr	r0, [sp, #16]
 8100508:	4914      	ldr	r1, [pc, #80]	@ (810055c <cmox_ecdsa_verify+0x2e4>)
 810050a:	9602      	str	r6, [sp, #8]
 810050c:	9101      	str	r1, [sp, #4]
 810050e:	9300      	str	r3, [sp, #0]
 8100510:	6803      	ldr	r3, [r0, #0]
 8100512:	1d02      	adds	r2, r0, #4
 8100514:	4651      	mov	r1, sl
 8100516:	4640      	mov	r0, r8
 8100518:	f001 fce4 	bl	8101ee4 <cmox_utils_robustCmp>
 810051c:	4606      	mov	r6, r0
 810051e:	a906      	add	r1, sp, #24
 8100520:	a809      	add	r0, sp, #36	@ 0x24
 8100522:	f001 fff3 	bl	810250c <cmox_ECC_FreePoint>
 8100526:	a907      	add	r1, sp, #28
 8100528:	a809      	add	r0, sp, #36	@ 0x24
 810052a:	f001 ffef 	bl	810250c <cmox_ECC_FreePoint>
 810052e:	a809      	add	r0, sp, #36	@ 0x24
 8100530:	f001 ff8d 	bl	810244e <cmox_ECC_DeInitCurveModDomain>
 8100534:	e73a      	b.n	81003ac <cmox_ecdsa_verify+0x134>
 8100536:	bf00      	nop
 8100538:	5e1caffe 	.word	0x5e1caffe
 810053c:	0006000e 	.word	0x0006000e
 8100540:	0006000f 	.word	0x0006000f
 8100544:	00060003 	.word	0x00060003
 8100548:	0006000c 	.word	0x0006000c
 810054c:	00060009 	.word	0x00060009
 8100550:	00060008 	.word	0x00060008
 8100554:	00066e93 	.word	0x00066e93
 8100558:	08104d6c 	.word	0x08104d6c
 810055c:	0006c726 	.word	0x0006c726

08100560 <cmox_initialize>:
 8100560:	b140      	cbz	r0, 8100574 <cmox_initialize+0x14>
 8100562:	6801      	ldr	r1, [r0, #0]
 8100564:	b129      	cbz	r1, 8100572 <cmox_initialize+0x12>
 8100566:	4a04      	ldr	r2, [pc, #16]	@ (8100578 <cmox_initialize+0x18>)
 8100568:	4291      	cmp	r1, r2
 810056a:	d102      	bne.n	8100572 <cmox_initialize+0x12>
 810056c:	2101      	movs	r1, #1
 810056e:	4b03      	ldr	r3, [pc, #12]	@ (810057c <cmox_initialize+0x1c>)
 8100570:	7019      	strb	r1, [r3, #0]
 8100572:	6840      	ldr	r0, [r0, #4]
 8100574:	f003 be20 	b.w	81041b8 <cmox_ll_init>
 8100578:	48370000 	.word	0x48370000
 810057c:	20040034 	.word	0x20040034

08100580 <cmox_finalize>:
 8100580:	f003 be3c 	b.w	81041fc <cmox_ll_deInit>

08100584 <basic_type_modinv>:
 8100584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8100586:	4603      	mov	r3, r0
 8100588:	460e      	mov	r6, r1
 810058a:	2701      	movs	r7, #1
 810058c:	f04f 0c03 	mov.w	ip, #3
 8100590:	2402      	movs	r4, #2
 8100592:	221f      	movs	r2, #31
 8100594:	2500      	movs	r5, #0
 8100596:	fb07 f003 	mul.w	r0, r7, r3
 810059a:	2100      	movs	r1, #0
 810059c:	ea0c 0000 	and.w	r0, ip, r0
 81005a0:	1b00      	subs	r0, r0, r4
 81005a2:	41a9      	sbcs	r1, r5
 81005a4:	ea24 0101 	bic.w	r1, r4, r1
 81005a8:	19cf      	adds	r7, r1, r7
 81005aa:	0064      	lsls	r4, r4, #1
 81005ac:	ea4f 004c 	mov.w	r0, ip, lsl #1
 81005b0:	f080 0c01 	eor.w	ip, r0, #1
 81005b4:	1e52      	subs	r2, r2, #1
 81005b6:	d1ee      	bne.n	8100596 <basic_type_modinv+0x12>
 81005b8:	6037      	str	r7, [r6, #0]
 81005ba:	bdf0      	pop	{r4, r5, r6, r7, pc}

081005bc <cmox_RightShiftBN>:
 81005bc:	2300      	movs	r3, #0
 81005be:	2920      	cmp	r1, #32
 81005c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 81005c2:	bf28      	it	cs
 81005c4:	2301      	movcs	r3, #1
 81005c6:	d222      	bcs.n	810060e <cmox_RightShiftBN+0x52>
 81005c8:	6814      	ldr	r4, [r2, #0]
 81005ca:	6805      	ldr	r5, [r0, #0]
 81005cc:	42ac      	cmp	r4, r5
 81005ce:	bf38      	it	cc
 81005d0:	2303      	movcc	r3, #3
 81005d2:	d31c      	bcc.n	810060e <cmox_RightShiftBN+0x52>
 81005d4:	2401      	movs	r4, #1
 81005d6:	e00a      	b.n	81005ee <cmox_RightShiftBN+0x32>
 81005d8:	eb00 0784 	add.w	r7, r0, r4, lsl #2
 81005dc:	687f      	ldr	r7, [r7, #4]
 81005de:	f1c1 0e20 	rsb	lr, r1, #32
 81005e2:	fa07 f70e 	lsl.w	r7, r7, lr
 81005e6:	433e      	orrs	r6, r7
 81005e8:	f842 6024 	str.w	r6, [r2, r4, lsl #2]
 81005ec:	462c      	mov	r4, r5
 81005ee:	f850 6024 	ldr.w	r6, [r0, r4, lsl #2]
 81005f2:	6807      	ldr	r7, [r0, #0]
 81005f4:	1c65      	adds	r5, r4, #1
 81005f6:	40ce      	lsrs	r6, r1
 81005f8:	42bc      	cmp	r4, r7
 81005fa:	d3ed      	bcc.n	81005d8 <cmox_RightShiftBN+0x1c>
 81005fc:	f842 6024 	str.w	r6, [r2, r4, lsl #2]
 8100600:	e002      	b.n	8100608 <cmox_RightShiftBN+0x4c>
 8100602:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 8100606:	1c6d      	adds	r5, r5, #1
 8100608:	6810      	ldr	r0, [r2, #0]
 810060a:	42a8      	cmp	r0, r5
 810060c:	d2f9      	bcs.n	8100602 <cmox_RightShiftBN+0x46>
 810060e:	4618      	mov	r0, r3
 8100610:	bdf0      	pop	{r4, r5, r6, r7, pc}

08100612 <cmox_ModAddBN>:
 8100612:	e92d 4eff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r9, sl, fp, lr}
 8100616:	4682      	mov	sl, r0
 8100618:	2000      	movs	r0, #0
 810061a:	4617      	mov	r7, r2
 810061c:	469c      	mov	ip, r3
 810061e:	e9cd 0002 	strd	r0, r0, [sp, #8]
 8100622:	683a      	ldr	r2, [r7, #0]
 8100624:	f8dc 3000 	ldr.w	r3, [ip]
 8100628:	460e      	mov	r6, r1
 810062a:	2100      	movs	r1, #0
 810062c:	4293      	cmp	r3, r2
 810062e:	bf21      	itttt	cs
 8100630:	f8da b000 	ldrcs.w	fp, [sl]
 8100634:	4593      	cmpcs	fp, r2
 8100636:	6835      	ldrcs	r5, [r6, #0]
 8100638:	4295      	cmpcs	r5, r2
 810063a:	d201      	bcs.n	8100640 <cmox_ModAddBN+0x2e>
 810063c:	2003      	movs	r0, #3
 810063e:	e076      	b.n	810072e <cmox_ModAddBN+0x11c>
 8100640:	45ab      	cmp	fp, r5
 8100642:	d303      	bcc.n	810064c <cmox_ModAddBN+0x3a>
 8100644:	f8cd a004 	str.w	sl, [sp, #4]
 8100648:	9500      	str	r5, [sp, #0]
 810064a:	e003      	b.n	8100654 <cmox_ModAddBN+0x42>
 810064c:	f8cd b000 	str.w	fp, [sp]
 8100650:	9601      	str	r6, [sp, #4]
 8100652:	46ab      	mov	fp, r5
 8100654:	455b      	cmp	r3, fp
 8100656:	f04f 0e01 	mov.w	lr, #1
 810065a:	bf38      	it	cc
 810065c:	469b      	movcc	fp, r3
 810065e:	2500      	movs	r5, #0
 8100660:	e015      	b.n	810068e <cmox_ModAddBN+0x7c>
 8100662:	f85a 202e 	ldr.w	r2, [sl, lr, lsl #2]
 8100666:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 810066a:	1880      	adds	r0, r0, r2
 810066c:	eb41 0905 	adc.w	r9, r1, r5
 8100670:	1902      	adds	r2, r0, r4
 8100672:	f857 002e 	ldr.w	r0, [r7, lr, lsl #2]
 8100676:	eb49 0305 	adc.w	r3, r9, r5
 810067a:	2100      	movs	r1, #0
 810067c:	1a10      	subs	r0, r2, r0
 810067e:	eb63 0101 	sbc.w	r1, r3, r1
 8100682:	f84c 002e 	str.w	r0, [ip, lr, lsl #2]
 8100686:	4608      	mov	r0, r1
 8100688:	17c9      	asrs	r1, r1, #31
 810068a:	f10e 0e01 	add.w	lr, lr, #1
 810068e:	683a      	ldr	r2, [r7, #0]
 8100690:	4572      	cmp	r2, lr
 8100692:	d2e6      	bcs.n	8100662 <cmox_ModAddBN+0x50>
 8100694:	9c00      	ldr	r4, [sp, #0]
 8100696:	4574      	cmp	r4, lr
 8100698:	d31c      	bcc.n	81006d4 <cmox_ModAddBN+0xc2>
 810069a:	f85a 202e 	ldr.w	r2, [sl, lr, lsl #2]
 810069e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 81006a2:	2300      	movs	r3, #0
 81006a4:	2500      	movs	r5, #0
 81006a6:	1914      	adds	r4, r2, r4
 81006a8:	415d      	adcs	r5, r3
 81006aa:	1900      	adds	r0, r0, r4
 81006ac:	4169      	adcs	r1, r5
 81006ae:	f84c 002e 	str.w	r0, [ip, lr, lsl #2]
 81006b2:	4608      	mov	r0, r1
 81006b4:	17c9      	asrs	r1, r1, #31
 81006b6:	f10e 0e01 	add.w	lr, lr, #1
 81006ba:	e7eb      	b.n	8100694 <cmox_ModAddBN+0x82>
 81006bc:	9c01      	ldr	r4, [sp, #4]
 81006be:	2300      	movs	r3, #0
 81006c0:	f854 202e 	ldr.w	r2, [r4, lr, lsl #2]
 81006c4:	1880      	adds	r0, r0, r2
 81006c6:	4159      	adcs	r1, r3
 81006c8:	f84c 002e 	str.w	r0, [ip, lr, lsl #2]
 81006cc:	4608      	mov	r0, r1
 81006ce:	17c9      	asrs	r1, r1, #31
 81006d0:	f10e 0e01 	add.w	lr, lr, #1
 81006d4:	45f3      	cmp	fp, lr
 81006d6:	d2f1      	bcs.n	81006bc <cmox_ModAddBN+0xaa>
 81006d8:	4666      	mov	r6, ip
 81006da:	4686      	mov	lr, r0
 81006dc:	f04f 0c01 	mov.w	ip, #1
 81006e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 81006e4:	2500      	movs	r5, #0
 81006e6:	e010      	b.n	810070a <cmox_ModAddBN+0xf8>
 81006e8:	f857 202c 	ldr.w	r2, [r7, ip, lsl #2]
 81006ec:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 81006f0:	2300      	movs	r3, #0
 81006f2:	ea02 020e 	and.w	r2, r2, lr
 81006f6:	18a2      	adds	r2, r4, r2
 81006f8:	416b      	adcs	r3, r5
 81006fa:	1880      	adds	r0, r0, r2
 81006fc:	4159      	adcs	r1, r3
 81006fe:	f846 002c 	str.w	r0, [r6, ip, lsl #2]
 8100702:	4608      	mov	r0, r1
 8100704:	2100      	movs	r1, #0
 8100706:	f10c 0c01 	add.w	ip, ip, #1
 810070a:	683a      	ldr	r2, [r7, #0]
 810070c:	4562      	cmp	r2, ip
 810070e:	d2eb      	bcs.n	81006e8 <cmox_ModAddBN+0xd6>
 8100710:	6834      	ldr	r4, [r6, #0]
 8100712:	4564      	cmp	r4, ip
 8100714:	d30a      	bcc.n	810072c <cmox_ModAddBN+0x11a>
 8100716:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 810071a:	1880      	adds	r0, r0, r2
 810071c:	4169      	adcs	r1, r5
 810071e:	f846 002c 	str.w	r0, [r6, ip, lsl #2]
 8100722:	4608      	mov	r0, r1
 8100724:	2100      	movs	r1, #0
 8100726:	f10c 0c01 	add.w	ip, ip, #1
 810072a:	e7f1      	b.n	8100710 <cmox_ModAddBN+0xfe>
 810072c:	2000      	movs	r0, #0
 810072e:	b004      	add	sp, #16
 8100730:	e8bd 8ef0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}

08100734 <cmox_ModSubBN>:
 8100734:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8100738:	468e      	mov	lr, r1
 810073a:	b084      	sub	sp, #16
 810073c:	9a04      	ldr	r2, [sp, #16]
 810073e:	2100      	movs	r1, #0
 8100740:	e9cd 1102 	strd	r1, r1, [sp, #8]
 8100744:	681c      	ldr	r4, [r3, #0]
 8100746:	6815      	ldr	r5, [r2, #0]
 8100748:	4683      	mov	fp, r0
 810074a:	42ac      	cmp	r4, r5
 810074c:	bf38      	it	cc
 810074e:	2003      	movcc	r0, #3
 8100750:	d36c      	bcc.n	810082c <cmox_ModSubBN+0xf8>
 8100752:	f8de 5000 	ldr.w	r5, [lr]
 8100756:	f8db 9000 	ldr.w	r9, [fp]
 810075a:	45a9      	cmp	r9, r5
 810075c:	d306      	bcc.n	810076c <cmox_ModSubBN+0x38>
 810075e:	f8cd 9000 	str.w	r9, [sp]
 8100762:	f8cd b004 	str.w	fp, [sp, #4]
 8100766:	46a9      	mov	r9, r5
 8100768:	468c      	mov	ip, r1
 810076a:	e004      	b.n	8100776 <cmox_ModSubBN+0x42>
 810076c:	f8cd e004 	str.w	lr, [sp, #4]
 8100770:	9500      	str	r5, [sp, #0]
 8100772:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8100776:	9d00      	ldr	r5, [sp, #0]
 8100778:	4698      	mov	r8, r3
 810077a:	f04f 0a01 	mov.w	sl, #1
 810077e:	42ac      	cmp	r4, r5
 8100780:	bf38      	it	cc
 8100782:	9400      	strcc	r4, [sp, #0]
 8100784:	2200      	movs	r2, #0
 8100786:	2300      	movs	r3, #0
 8100788:	2500      	movs	r5, #0
 810078a:	e00f      	b.n	81007ac <cmox_ModSubBN+0x78>
 810078c:	f85b 002a 	ldr.w	r0, [fp, sl, lsl #2]
 8100790:	f85e 402a 	ldr.w	r4, [lr, sl, lsl #2]
 8100794:	1816      	adds	r6, r2, r0
 8100796:	eb43 0701 	adc.w	r7, r3, r1
 810079a:	1b32      	subs	r2, r6, r4
 810079c:	eb67 0305 	sbc.w	r3, r7, r5
 81007a0:	f848 202a 	str.w	r2, [r8, sl, lsl #2]
 81007a4:	461a      	mov	r2, r3
 81007a6:	17db      	asrs	r3, r3, #31
 81007a8:	f10a 0a01 	add.w	sl, sl, #1
 81007ac:	45d1      	cmp	r9, sl
 81007ae:	d2ed      	bcs.n	810078c <cmox_ModSubBN+0x58>
 81007b0:	9800      	ldr	r0, [sp, #0]
 81007b2:	4550      	cmp	r0, sl
 81007b4:	d311      	bcc.n	81007da <cmox_ModSubBN+0xa6>
 81007b6:	9e01      	ldr	r6, [sp, #4]
 81007b8:	f856 002a 	ldr.w	r0, [r6, sl, lsl #2]
 81007bc:	ea20 040c 	bic.w	r4, r0, ip
 81007c0:	1912      	adds	r2, r2, r4
 81007c2:	416b      	adcs	r3, r5
 81007c4:	ea00 000c 	and.w	r0, r0, ip
 81007c8:	1a12      	subs	r2, r2, r0
 81007ca:	418b      	sbcs	r3, r1
 81007cc:	f848 202a 	str.w	r2, [r8, sl, lsl #2]
 81007d0:	461a      	mov	r2, r3
 81007d2:	17db      	asrs	r3, r3, #31
 81007d4:	f10a 0a01 	add.w	sl, sl, #1
 81007d8:	e7ea      	b.n	81007b0 <cmox_ModSubBN+0x7c>
 81007da:	4616      	mov	r6, r2
 81007dc:	2701      	movs	r7, #1
 81007de:	f8dd c010 	ldr.w	ip, [sp, #16]
 81007e2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 81007e6:	e00e      	b.n	8100806 <cmox_ModSubBN+0xd2>
 81007e8:	f85c 2027 	ldr.w	r2, [ip, r7, lsl #2]
 81007ec:	f858 4027 	ldr.w	r4, [r8, r7, lsl #2]
 81007f0:	2300      	movs	r3, #0
 81007f2:	4032      	ands	r2, r6
 81007f4:	18a2      	adds	r2, r4, r2
 81007f6:	416b      	adcs	r3, r5
 81007f8:	1880      	adds	r0, r0, r2
 81007fa:	4159      	adcs	r1, r3
 81007fc:	f848 0027 	str.w	r0, [r8, r7, lsl #2]
 8100800:	4608      	mov	r0, r1
 8100802:	2100      	movs	r1, #0
 8100804:	1c7f      	adds	r7, r7, #1
 8100806:	f8dc 2000 	ldr.w	r2, [ip]
 810080a:	42ba      	cmp	r2, r7
 810080c:	d2ec      	bcs.n	81007e8 <cmox_ModSubBN+0xb4>
 810080e:	f8d8 4000 	ldr.w	r4, [r8]
 8100812:	42bc      	cmp	r4, r7
 8100814:	d309      	bcc.n	810082a <cmox_ModSubBN+0xf6>
 8100816:	f858 2027 	ldr.w	r2, [r8, r7, lsl #2]
 810081a:	1880      	adds	r0, r0, r2
 810081c:	4169      	adcs	r1, r5
 810081e:	f848 0027 	str.w	r0, [r8, r7, lsl #2]
 8100822:	4608      	mov	r0, r1
 8100824:	2100      	movs	r1, #0
 8100826:	1c7f      	adds	r7, r7, #1
 8100828:	e7f1      	b.n	810080e <cmox_ModSubBN+0xda>
 810082a:	2000      	movs	r0, #0
 810082c:	b005      	add	sp, #20
 810082e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08100832 <cmox_SubBN>:
 8100832:	b5f0      	push	{r4, r5, r6, r7, lr}
 8100834:	6813      	ldr	r3, [r2, #0]
 8100836:	6806      	ldr	r6, [r0, #0]
 8100838:	2400      	movs	r4, #0
 810083a:	2500      	movs	r5, #0
 810083c:	42b3      	cmp	r3, r6
 810083e:	d201      	bcs.n	8100844 <cmox_SubBN+0x12>
 8100840:	2003      	movs	r0, #3
 8100842:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8100844:	468e      	mov	lr, r1
 8100846:	f04f 0c01 	mov.w	ip, #1
 810084a:	4606      	mov	r6, r0
 810084c:	4617      	mov	r7, r2
 810084e:	2100      	movs	r1, #0
 8100850:	e00f      	b.n	8100872 <cmox_SubBN+0x40>
 8100852:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 8100856:	2300      	movs	r3, #0
 8100858:	f85e 002c 	ldr.w	r0, [lr, ip, lsl #2]
 810085c:	18a2      	adds	r2, r4, r2
 810085e:	416b      	adcs	r3, r5
 8100860:	1a14      	subs	r4, r2, r0
 8100862:	eb63 0501 	sbc.w	r5, r3, r1
 8100866:	f847 402c 	str.w	r4, [r7, ip, lsl #2]
 810086a:	462c      	mov	r4, r5
 810086c:	17ed      	asrs	r5, r5, #31
 810086e:	f10c 0c01 	add.w	ip, ip, #1
 8100872:	f8de 0000 	ldr.w	r0, [lr]
 8100876:	4560      	cmp	r0, ip
 8100878:	d2eb      	bcs.n	8100852 <cmox_SubBN+0x20>
 810087a:	6832      	ldr	r2, [r6, #0]
 810087c:	4562      	cmp	r2, ip
 810087e:	d30a      	bcc.n	8100896 <cmox_SubBN+0x64>
 8100880:	f856 002c 	ldr.w	r0, [r6, ip, lsl #2]
 8100884:	1824      	adds	r4, r4, r0
 8100886:	414d      	adcs	r5, r1
 8100888:	f847 402c 	str.w	r4, [r7, ip, lsl #2]
 810088c:	462c      	mov	r4, r5
 810088e:	17ed      	asrs	r5, r5, #31
 8100890:	f10c 0c01 	add.w	ip, ip, #1
 8100894:	e7f1      	b.n	810087a <cmox_SubBN+0x48>
 8100896:	2000      	movs	r0, #0
 8100898:	bdf0      	pop	{r4, r5, r6, r7, pc}

0810089a <cmox_AddBN_Int>:
 810089a:	b5f0      	push	{r4, r5, r6, r7, lr}
 810089c:	4604      	mov	r4, r0
 810089e:	6866      	ldr	r6, [r4, #4]
 81008a0:	4615      	mov	r5, r2
 81008a2:	2700      	movs	r7, #0
 81008a4:	1872      	adds	r2, r6, r1
 81008a6:	eb47 73e1 	adc.w	r3, r7, r1, asr #31
 81008aa:	606a      	str	r2, [r5, #4]
 81008ac:	2602      	movs	r6, #2
 81008ae:	461a      	mov	r2, r3
 81008b0:	17db      	asrs	r3, r3, #31
 81008b2:	e008      	b.n	81008c6 <cmox_AddBN_Int+0x2c>
 81008b4:	f854 0026 	ldr.w	r0, [r4, r6, lsl #2]
 81008b8:	1812      	adds	r2, r2, r0
 81008ba:	417b      	adcs	r3, r7
 81008bc:	f845 2026 	str.w	r2, [r5, r6, lsl #2]
 81008c0:	461a      	mov	r2, r3
 81008c2:	17db      	asrs	r3, r3, #31
 81008c4:	1c76      	adds	r6, r6, #1
 81008c6:	6820      	ldr	r0, [r4, #0]
 81008c8:	42b0      	cmp	r0, r6
 81008ca:	d2f3      	bcs.n	81008b4 <cmox_AddBN_Int+0x1a>
 81008cc:	4610      	mov	r0, r2
 81008ce:	4252      	negs	r2, r2
 81008d0:	ea22 0000 	bic.w	r0, r2, r0
 81008d4:	0fc0      	lsrs	r0, r0, #31
 81008d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

081008d8 <cmox_FieldBN_Div2>:
 81008d8:	e92d 45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
 81008dc:	4615      	mov	r5, r2
 81008de:	6842      	ldr	r2, [r0, #4]
 81008e0:	468e      	mov	lr, r1
 81008e2:	6801      	ldr	r1, [r0, #0]
 81008e4:	f8de 3000 	ldr.w	r3, [lr]
 81008e8:	f002 0601 	and.w	r6, r2, #1
 81008ec:	4276      	negs	r6, r6
 81008ee:	4299      	cmp	r1, r3
 81008f0:	d102      	bne.n	81008f8 <cmox_FieldBN_Div2+0x20>
 81008f2:	682c      	ldr	r4, [r5, #0]
 81008f4:	428c      	cmp	r4, r1
 81008f6:	d201      	bcs.n	81008fc <cmox_FieldBN_Div2+0x24>
 81008f8:	2001      	movs	r0, #1
 81008fa:	e03d      	b.n	8100978 <cmox_FieldBN_Div2+0xa0>
 81008fc:	f8de 7004 	ldr.w	r7, [lr, #4]
 8100900:	2300      	movs	r3, #0
 8100902:	2400      	movs	r4, #0
 8100904:	4037      	ands	r7, r6
 8100906:	19d2      	adds	r2, r2, r7
 8100908:	4163      	adcs	r3, r4
 810090a:	4604      	mov	r4, r0
 810090c:	606a      	str	r2, [r5, #4]
 810090e:	2100      	movs	r1, #0
 8100910:	f04f 0802 	mov.w	r8, #2
 8100914:	4618      	mov	r0, r3
 8100916:	e018      	b.n	810094a <cmox_FieldBN_Div2+0x72>
 8100918:	4607      	mov	r7, r0
 810091a:	f85e 0028 	ldr.w	r0, [lr, r8, lsl #2]
 810091e:	f854 2028 	ldr.w	r2, [r4, r8, lsl #2]
 8100922:	2300      	movs	r3, #0
 8100924:	4030      	ands	r0, r6
 8100926:	1810      	adds	r0, r2, r0
 8100928:	f85c 2c04 	ldr.w	r2, [ip, #-4]
 810092c:	4159      	adcs	r1, r3
 810092e:	1838      	adds	r0, r7, r0
 8100930:	4159      	adcs	r1, r3
 8100932:	f845 0028 	str.w	r0, [r5, r8, lsl #2]
 8100936:	f855 3028 	ldr.w	r3, [r5, r8, lsl #2]
 810093a:	4608      	mov	r0, r1
 810093c:	2100      	movs	r1, #0
 810093e:	07db      	lsls	r3, r3, #31
 8100940:	ea43 0352 	orr.w	r3, r3, r2, lsr #1
 8100944:	46d0      	mov	r8, sl
 8100946:	f84c 3c04 	str.w	r3, [ip, #-4]
 810094a:	6822      	ldr	r2, [r4, #0]
 810094c:	eb05 0c88 	add.w	ip, r5, r8, lsl #2
 8100950:	f108 0a01 	add.w	sl, r8, #1
 8100954:	4542      	cmp	r2, r8
 8100956:	d2df      	bcs.n	8100918 <cmox_FieldBN_Div2+0x40>
 8100958:	f85c 3c04 	ldr.w	r3, [ip, #-4]
 810095c:	07c0      	lsls	r0, r0, #31
 810095e:	ea40 0053 	orr.w	r0, r0, r3, lsr #1
 8100962:	f84c 0c04 	str.w	r0, [ip, #-4]
 8100966:	e003      	b.n	8100970 <cmox_FieldBN_Div2+0x98>
 8100968:	f845 102a 	str.w	r1, [r5, sl, lsl #2]
 810096c:	f10a 0a01 	add.w	sl, sl, #1
 8100970:	6828      	ldr	r0, [r5, #0]
 8100972:	4550      	cmp	r0, sl
 8100974:	d2f8      	bcs.n	8100968 <cmox_FieldBN_Div2+0x90>
 8100976:	2000      	movs	r0, #0
 8100978:	e8bd 85f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, pc}

0810097c <cmox_FieldBN_Mul2>:
 810097c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8100980:	4690      	mov	r8, r2
 8100982:	6802      	ldr	r2, [r0, #0]
 8100984:	680b      	ldr	r3, [r1, #0]
 8100986:	429a      	cmp	r2, r3
 8100988:	d103      	bne.n	8100992 <cmox_FieldBN_Mul2+0x16>
 810098a:	f8d8 4000 	ldr.w	r4, [r8]
 810098e:	4294      	cmp	r4, r2
 8100990:	d201      	bcs.n	8100996 <cmox_FieldBN_Mul2+0x1a>
 8100992:	2001      	movs	r0, #1
 8100994:	e04f      	b.n	8100a36 <cmox_FieldBN_Mul2+0xba>
 8100996:	6844      	ldr	r4, [r0, #4]
 8100998:	684a      	ldr	r2, [r1, #4]
 810099a:	2300      	movs	r3, #0
 810099c:	0064      	lsls	r4, r4, #1
 810099e:	f04f 0900 	mov.w	r9, #0
 81009a2:	1aa2      	subs	r2, r4, r2
 81009a4:	eb69 0303 	sbc.w	r3, r9, r3
 81009a8:	4615      	mov	r5, r2
 81009aa:	461a      	mov	r2, r3
 81009ac:	17db      	asrs	r3, r3, #31
 81009ae:	2702      	movs	r7, #2
 81009b0:	4684      	mov	ip, r0
 81009b2:	468e      	mov	lr, r1
 81009b4:	e018      	b.n	81009e8 <cmox_FieldBN_Mul2+0x6c>
 81009b6:	eb0c 0487 	add.w	r4, ip, r7, lsl #2
 81009ba:	f854 0c04 	ldr.w	r0, [r4, #-4]
 81009be:	f85c 1027 	ldr.w	r1, [ip, r7, lsl #2]
 81009c2:	f85e 4027 	ldr.w	r4, [lr, r7, lsl #2]
 81009c6:	0fc0      	lsrs	r0, r0, #31
 81009c8:	ea40 0041 	orr.w	r0, r0, r1, lsl #1
 81009cc:	1816      	adds	r6, r2, r0
 81009ce:	eb43 0a09 	adc.w	sl, r3, r9
 81009d2:	eb08 0087 	add.w	r0, r8, r7, lsl #2
 81009d6:	1b32      	subs	r2, r6, r4
 81009d8:	f840 5c04 	str.w	r5, [r0, #-4]
 81009dc:	eb6a 0309 	sbc.w	r3, sl, r9
 81009e0:	4615      	mov	r5, r2
 81009e2:	461a      	mov	r2, r3
 81009e4:	17db      	asrs	r3, r3, #31
 81009e6:	1c7f      	adds	r7, r7, #1
 81009e8:	f8dc 0000 	ldr.w	r0, [ip]
 81009ec:	42b8      	cmp	r0, r7
 81009ee:	d2e2      	bcs.n	81009b6 <cmox_FieldBN_Mul2+0x3a>
 81009f0:	4664      	mov	r4, ip
 81009f2:	f854 1020 	ldr.w	r1, [r4, r0, lsl #2]
 81009f6:	4646      	mov	r6, r8
 81009f8:	f846 5020 	str.w	r5, [r6, r0, lsl #2]
 81009fc:	eb02 73d1 	add.w	r3, r2, r1, lsr #31
 8100a00:	46c8      	mov	r8, r9
 8100a02:	2500      	movs	r5, #0
 8100a04:	f04f 0c01 	mov.w	ip, #1
 8100a08:	e011      	b.n	8100a2e <cmox_FieldBN_Mul2+0xb2>
 8100a0a:	f85e 002c 	ldr.w	r0, [lr, ip, lsl #2]
 8100a0e:	f856 202c 	ldr.w	r2, [r6, ip, lsl #2]
 8100a12:	2100      	movs	r1, #0
 8100a14:	4018      	ands	r0, r3
 8100a16:	1810      	adds	r0, r2, r0
 8100a18:	eb49 0101 	adc.w	r1, r9, r1
 8100a1c:	eb18 0000 	adds.w	r0, r8, r0
 8100a20:	414d      	adcs	r5, r1
 8100a22:	f846 002c 	str.w	r0, [r6, ip, lsl #2]
 8100a26:	46a8      	mov	r8, r5
 8100a28:	17ed      	asrs	r5, r5, #31
 8100a2a:	f10c 0c01 	add.w	ip, ip, #1
 8100a2e:	6820      	ldr	r0, [r4, #0]
 8100a30:	4560      	cmp	r0, ip
 8100a32:	d2ea      	bcs.n	8100a0a <cmox_FieldBN_Mul2+0x8e>
 8100a34:	2000      	movs	r0, #0
 8100a36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08100a3a <cmox_FieldBN_CondNegate>:
 8100a3a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8100a3e:	2400      	movs	r4, #0
 8100a40:	2500      	movs	r5, #0
 8100a42:	2900      	cmp	r1, #0
 8100a44:	bf18      	it	ne
 8100a46:	2a00      	cmpne	r2, #0
 8100a48:	d003      	beq.n	8100a52 <cmox_FieldBN_CondNegate+0x18>
 8100a4a:	680b      	ldr	r3, [r1, #0]
 8100a4c:	6816      	ldr	r6, [r2, #0]
 8100a4e:	42b3      	cmp	r3, r6
 8100a50:	d201      	bcs.n	8100a56 <cmox_FieldBN_CondNegate+0x1c>
 8100a52:	2001      	movs	r0, #1
 8100a54:	e01d      	b.n	8100a92 <cmox_FieldBN_CondNegate+0x58>
 8100a56:	2701      	movs	r7, #1
 8100a58:	4681      	mov	r9, r0
 8100a5a:	460e      	mov	r6, r1
 8100a5c:	4690      	mov	r8, r2
 8100a5e:	e013      	b.n	8100a88 <cmox_FieldBN_CondNegate+0x4e>
 8100a60:	f858 0027 	ldr.w	r0, [r8, r7, lsl #2]
 8100a64:	2100      	movs	r1, #0
 8100a66:	f856 2027 	ldr.w	r2, [r6, r7, lsl #2]
 8100a6a:	1820      	adds	r0, r4, r0
 8100a6c:	4169      	adcs	r1, r5
 8100a6e:	2300      	movs	r3, #0
 8100a70:	1a84      	subs	r4, r0, r2
 8100a72:	eb61 0503 	sbc.w	r5, r1, r3
 8100a76:	4621      	mov	r1, r4
 8100a78:	4648      	mov	r0, r9
 8100a7a:	f000 f89f 	bl	8100bbc <cmox_mathUtils_mux>
 8100a7e:	f846 0027 	str.w	r0, [r6, r7, lsl #2]
 8100a82:	462c      	mov	r4, r5
 8100a84:	17ed      	asrs	r5, r5, #31
 8100a86:	1c7f      	adds	r7, r7, #1
 8100a88:	f8d8 0000 	ldr.w	r0, [r8]
 8100a8c:	42b8      	cmp	r0, r7
 8100a8e:	d2e7      	bcs.n	8100a60 <cmox_FieldBN_CondNegate+0x26>
 8100a90:	2000      	movs	r0, #0
 8100a92:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

08100a96 <cmox_ModularBN_InitWithR2>:
 8100a96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8100a98:	4617      	mov	r7, r2
 8100a9a:	4605      	mov	r5, r0
 8100a9c:	682a      	ldr	r2, [r5, #0]
 8100a9e:	460e      	mov	r6, r1
 8100aa0:	4618      	mov	r0, r3
 8100aa2:	0052      	lsls	r2, r2, #1
 8100aa4:	f107 0108 	add.w	r1, r7, #8
 8100aa8:	f001 fa94 	bl	8101fd4 <cmox_bn_alloc>
 8100aac:	0004      	movs	r4, r0
 8100aae:	d109      	bne.n	8100ac4 <cmox_ModularBN_InitWithR2+0x2e>
 8100ab0:	607e      	str	r6, [r7, #4]
 8100ab2:	603d      	str	r5, [r7, #0]
 8100ab4:	6868      	ldr	r0, [r5, #4]
 8100ab6:	f107 010c 	add.w	r1, r7, #12
 8100aba:	f7ff fd63 	bl	8100584 <basic_type_modinv>
 8100abe:	68f8      	ldr	r0, [r7, #12]
 8100ac0:	4240      	negs	r0, r0
 8100ac2:	60f8      	str	r0, [r7, #12]
 8100ac4:	4620      	mov	r0, r4
 8100ac6:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08100ac8 <cmox_ModularBN_Enter>:
 8100ac8:	460b      	mov	r3, r1
 8100aca:	b580      	push	{r7, lr}
 8100acc:	9200      	str	r2, [sp, #0]
 8100ace:	6859      	ldr	r1, [r3, #4]
 8100ad0:	4602      	mov	r2, r0
 8100ad2:	f000 f823 	bl	8100b1c <cmox_ModularBN_Mul>
 8100ad6:	bd02      	pop	{r1, pc}

08100ad8 <cmox_ModularBN_Exit>:
 8100ad8:	e92d 41fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, lr}
 8100adc:	461f      	mov	r7, r3
 8100ade:	2300      	movs	r3, #0
 8100ae0:	4605      	mov	r5, r0
 8100ae2:	4690      	mov	r8, r2
 8100ae4:	9301      	str	r3, [sp, #4]
 8100ae6:	682a      	ldr	r2, [r5, #0]
 8100ae8:	460e      	mov	r6, r1
 8100aea:	a901      	add	r1, sp, #4
 8100aec:	4640      	mov	r0, r8
 8100aee:	f001 fa71 	bl	8101fd4 <cmox_bn_alloc>
 8100af2:	0004      	movs	r4, r0
 8100af4:	d10f      	bne.n	8100b16 <cmox_ModularBN_Exit+0x3e>
 8100af6:	9801      	ldr	r0, [sp, #4]
 8100af8:	2101      	movs	r1, #1
 8100afa:	f001 faa2 	bl	8102042 <cmox_bn_init>
 8100afe:	9700      	str	r7, [sp, #0]
 8100b00:	9901      	ldr	r1, [sp, #4]
 8100b02:	4633      	mov	r3, r6
 8100b04:	462a      	mov	r2, r5
 8100b06:	4628      	mov	r0, r5
 8100b08:	f000 f808 	bl	8100b1c <cmox_ModularBN_Mul>
 8100b0c:	4604      	mov	r4, r0
 8100b0e:	a901      	add	r1, sp, #4
 8100b10:	4640      	mov	r0, r8
 8100b12:	f001 fa6a 	bl	8101fea <cmox_bn_free>
 8100b16:	4620      	mov	r0, r4
 8100b18:	e8bd 81f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, pc}

08100b1c <cmox_ModularBN_Mul>:
 8100b1c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8100b1e:	4614      	mov	r4, r2
 8100b20:	461d      	mov	r5, r3
 8100b22:	682a      	ldr	r2, [r5, #0]
 8100b24:	6823      	ldr	r3, [r4, #0]
 8100b26:	6816      	ldr	r6, [r2, #0]
 8100b28:	42b3      	cmp	r3, r6
 8100b2a:	d201      	bcs.n	8100b30 <cmox_ModularBN_Mul+0x14>
 8100b2c:	2003      	movs	r0, #3
 8100b2e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8100b30:	68eb      	ldr	r3, [r5, #12]
 8100b32:	9f08      	ldr	r7, [sp, #32]
 8100b34:	1d12      	adds	r2, r2, #4
 8100b36:	9301      	str	r3, [sp, #4]
 8100b38:	9200      	str	r2, [sp, #0]
 8100b3a:	68aa      	ldr	r2, [r5, #8]
 8100b3c:	f8d7 c000 	ldr.w	ip, [r7]
 8100b40:	1d09      	adds	r1, r1, #4
 8100b42:	1d13      	adds	r3, r2, #4
 8100b44:	4632      	mov	r2, r6
 8100b46:	1d00      	adds	r0, r0, #4
 8100b48:	47e0      	blx	ip
 8100b4a:	68e8      	ldr	r0, [r5, #12]
 8100b4c:	1d23      	adds	r3, r4, #4
 8100b4e:	9000      	str	r0, [sp, #0]
 8100b50:	6829      	ldr	r1, [r5, #0]
 8100b52:	68a8      	ldr	r0, [r5, #8]
 8100b54:	687c      	ldr	r4, [r7, #4]
 8100b56:	1d0a      	adds	r2, r1, #4
 8100b58:	4631      	mov	r1, r6
 8100b5a:	1d00      	adds	r0, r0, #4
 8100b5c:	47a0      	blx	r4
 8100b5e:	2000      	movs	r0, #0
 8100b60:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08100b62 <cmox_ModularBN_Sqr>:
 8100b62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8100b64:	460c      	mov	r4, r1
 8100b66:	4615      	mov	r5, r2
 8100b68:	6829      	ldr	r1, [r5, #0]
 8100b6a:	6822      	ldr	r2, [r4, #0]
 8100b6c:	461f      	mov	r7, r3
 8100b6e:	680e      	ldr	r6, [r1, #0]
 8100b70:	42b2      	cmp	r2, r6
 8100b72:	d201      	bcs.n	8100b78 <cmox_ModularBN_Sqr+0x16>
 8100b74:	2003      	movs	r0, #3
 8100b76:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 8100b78:	68ea      	ldr	r2, [r5, #12]
 8100b7a:	1d0b      	adds	r3, r1, #4
 8100b7c:	1d00      	adds	r0, r0, #4
 8100b7e:	9200      	str	r2, [sp, #0]
 8100b80:	68a9      	ldr	r1, [r5, #8]
 8100b82:	f8d7 c008 	ldr.w	ip, [r7, #8]
 8100b86:	1d0a      	adds	r2, r1, #4
 8100b88:	4631      	mov	r1, r6
 8100b8a:	47e0      	blx	ip
 8100b8c:	68e8      	ldr	r0, [r5, #12]
 8100b8e:	1d23      	adds	r3, r4, #4
 8100b90:	9000      	str	r0, [sp, #0]
 8100b92:	6829      	ldr	r1, [r5, #0]
 8100b94:	68a8      	ldr	r0, [r5, #8]
 8100b96:	68fc      	ldr	r4, [r7, #12]
 8100b98:	1d0a      	adds	r2, r1, #4
 8100b9a:	4631      	mov	r1, r6
 8100b9c:	1d00      	adds	r0, r0, #4
 8100b9e:	47a0      	blx	r4
 8100ba0:	2000      	movs	r0, #0
 8100ba2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08100ba4 <cmox_ModularBN_DeinitWithR2>:
 8100ba4:	460a      	mov	r2, r1
 8100ba6:	2100      	movs	r1, #0
 8100ba8:	6001      	str	r1, [r0, #0]
 8100baa:	60c1      	str	r1, [r0, #12]
 8100bac:	6881      	ldr	r1, [r0, #8]
 8100bae:	b121      	cbz	r1, 8100bba <cmox_ModularBN_DeinitWithR2+0x16>
 8100bb0:	f100 0108 	add.w	r1, r0, #8
 8100bb4:	4610      	mov	r0, r2
 8100bb6:	f001 ba18 	b.w	8101fea <cmox_bn_free>
 8100bba:	4770      	bx	lr

08100bbc <cmox_mathUtils_mux>:
 8100bbc:	4240      	negs	r0, r0
 8100bbe:	4051      	eors	r1, r2
 8100bc0:	4008      	ands	r0, r1
 8100bc2:	4050      	eors	r0, r2
 8100bc4:	4770      	bx	lr

08100bc6 <cmox_mathUtils_not>:
 8100bc6:	f080 0001 	eor.w	r0, r0, #1
 8100bca:	4770      	bx	lr

08100bcc <cmox_mathUtils_neq>:
 8100bcc:	4048      	eors	r0, r1
 8100bce:	4241      	negs	r1, r0
 8100bd0:	4308      	orrs	r0, r1
 8100bd2:	0fc0      	lsrs	r0, r0, #31
 8100bd4:	4770      	bx	lr

08100bd6 <cmox_mathUtils_gt>:
 8100bd6:	1a0a      	subs	r2, r1, r0
 8100bd8:	4041      	eors	r1, r0
 8100bda:	4050      	eors	r0, r2
 8100bdc:	4008      	ands	r0, r1
 8100bde:	4050      	eors	r0, r2
 8100be0:	0fc0      	lsrs	r0, r0, #31
 8100be2:	4770      	bx	lr

08100be4 <cmox_mathUtils_bitLength>:
 8100be4:	4601      	mov	r1, r0
 8100be6:	b510      	push	{r4, lr}
 8100be8:	2020      	movs	r0, #32
 8100bea:	2201      	movs	r2, #1
 8100bec:	231f      	movs	r3, #31
 8100bee:	fa21 f403 	lsr.w	r4, r1, r3
 8100bf2:	f004 0401 	and.w	r4, r4, #1
 8100bf6:	f084 0401 	eor.w	r4, r4, #1
 8100bfa:	4022      	ands	r2, r4
 8100bfc:	1a80      	subs	r0, r0, r2
 8100bfe:	1e5b      	subs	r3, r3, #1
 8100c00:	f113 0f01 	cmn.w	r3, #1
 8100c04:	d1f3      	bne.n	8100bee <cmox_mathUtils_bitLength+0xa>
 8100c06:	bd10      	pop	{r4, pc}

08100c08 <cmox_mathUtils_abs>:
 8100c08:	4601      	mov	r1, r0
 8100c0a:	4248      	negs	r0, r1
 8100c0c:	ea01 72e0 	and.w	r2, r1, r0, asr #31
 8100c10:	ea00 70e1 	and.w	r0, r0, r1, asr #31
 8100c14:	4310      	orrs	r0, r2
 8100c16:	4770      	bx	lr
 8100c18:	0101b004 	.word	0x0101b004
 8100c1c:	45011700 	.word	0x45011700

08100c20 <.text_19>:
	...

08100c28 <cmox_ModExpBN_SW>:
 8100c28:	e92d 4ff2 	stmdb	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8100c2c:	4683      	mov	fp, r0
 8100c2e:	b08a      	sub	sp, #40	@ 0x28
 8100c30:	2001      	movs	r0, #1
 8100c32:	f88d 0008 	strb.w	r0, [sp, #8]
 8100c36:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8100c38:	2400      	movs	r4, #0
 8100c3a:	2601      	movs	r6, #1
 8100c3c:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
 8100c40:	4617      	mov	r7, r2
 8100c42:	2500      	movs	r5, #0
 8100c44:	9507      	str	r5, [sp, #28]
 8100c46:	9501      	str	r5, [sp, #4]
 8100c48:	6801      	ldr	r1, [r0, #0]
 8100c4a:	46aa      	mov	sl, r5
 8100c4c:	2901      	cmp	r1, #1
 8100c4e:	bf88      	it	hi
 8100c50:	b2de      	uxtbhi	r6, r3
 8100c52:	2101      	movs	r1, #1
 8100c54:	1e70      	subs	r0, r6, #1
 8100c56:	4081      	lsls	r1, r0
 8100c58:	0089      	lsls	r1, r1, #2
 8100c5a:	9109      	str	r1, [sp, #36]	@ 0x24
 8100c5c:	460a      	mov	r2, r1
 8100c5e:	a901      	add	r1, sp, #4
 8100c60:	4648      	mov	r0, r9
 8100c62:	f003 fa75 	bl	8104150 <cmox_membuf_alloc>
 8100c66:	9004      	str	r0, [sp, #16]
 8100c68:	2800      	cmp	r0, #0
 8100c6a:	f040 80ef 	bne.w	8100e4c <cmox_ModExpBN_SW+0x224>
 8100c6e:	46a8      	mov	r8, r5
 8100c70:	e00c      	b.n	8100c8c <cmox_ModExpBN_SW+0x64>
 8100c72:	6838      	ldr	r0, [r7, #0]
 8100c74:	9901      	ldr	r1, [sp, #4]
 8100c76:	6802      	ldr	r2, [r0, #0]
 8100c78:	4648      	mov	r0, r9
 8100c7a:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8100c7e:	f001 f9a9 	bl	8101fd4 <cmox_bn_alloc>
 8100c82:	9004      	str	r0, [sp, #16]
 8100c84:	2800      	cmp	r0, #0
 8100c86:	d175      	bne.n	8100d74 <cmox_ModExpBN_SW+0x14c>
 8100c88:	f108 0801 	add.w	r8, r8, #1
 8100c8c:	2001      	movs	r0, #1
 8100c8e:	1e72      	subs	r2, r6, #1
 8100c90:	4090      	lsls	r0, r2
 8100c92:	9006      	str	r0, [sp, #24]
 8100c94:	4580      	cmp	r8, r0
 8100c96:	d3ec      	bcc.n	8100c72 <cmox_ModExpBN_SW+0x4a>
 8100c98:	9801      	ldr	r0, [sp, #4]
 8100c9a:	f8cd b00c 	str.w	fp, [sp, #12]
 8100c9e:	2100      	movs	r1, #0
 8100ca0:	6800      	ldr	r0, [r0, #0]
 8100ca2:	f001 f9ce 	bl	8102042 <cmox_bn_init>
 8100ca6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8100ca8:	2100      	movs	r1, #0
 8100caa:	f001 f9ca 	bl	8102042 <cmox_bn_init>
 8100cae:	9801      	ldr	r0, [sp, #4]
 8100cb0:	9903      	ldr	r1, [sp, #12]
 8100cb2:	6802      	ldr	r2, [r0, #0]
 8100cb4:	2001      	movs	r0, #1
 8100cb6:	f001 f9d3 	bl	8102060 <cmox_bn_cCopy>
 8100cba:	f8dd b058 	ldr.w	fp, [sp, #88]	@ 0x58
 8100cbe:	9700      	str	r7, [sp, #0]
 8100cc0:	2700      	movs	r7, #0
 8100cc2:	e007      	b.n	8100cd4 <cmox_ModExpBN_SW+0xac>
 8100cc4:	9801      	ldr	r0, [sp, #4]
 8100cc6:	9a00      	ldr	r2, [sp, #0]
 8100cc8:	465b      	mov	r3, fp
 8100cca:	6800      	ldr	r0, [r0, #0]
 8100ccc:	1c7f      	adds	r7, r7, #1
 8100cce:	4601      	mov	r1, r0
 8100cd0:	f7ff ff47 	bl	8100b62 <cmox_ModularBN_Sqr>
 8100cd4:	1e70      	subs	r0, r6, #1
 8100cd6:	4287      	cmp	r7, r0
 8100cd8:	d3f4      	bcc.n	8100cc4 <cmox_ModExpBN_SW+0x9c>
 8100cda:	9900      	ldr	r1, [sp, #0]
 8100cdc:	4658      	mov	r0, fp
 8100cde:	9605      	str	r6, [sp, #20]
 8100ce0:	1e73      	subs	r3, r6, #1
 8100ce2:	2701      	movs	r7, #1
 8100ce4:	f88d 3009 	strb.w	r3, [sp, #9]
 8100ce8:	468b      	mov	fp, r1
 8100cea:	4606      	mov	r6, r0
 8100cec:	e00c      	b.n	8100d08 <cmox_ModExpBN_SW+0xe0>
 8100cee:	9600      	str	r6, [sp, #0]
 8100cf0:	9801      	ldr	r0, [sp, #4]
 8100cf2:	f850 2027 	ldr.w	r2, [r0, r7, lsl #2]
 8100cf6:	9903      	ldr	r1, [sp, #12]
 8100cf8:	eb00 0c87 	add.w	ip, r0, r7, lsl #2
 8100cfc:	f85c 0c04 	ldr.w	r0, [ip, #-4]
 8100d00:	465b      	mov	r3, fp
 8100d02:	1c7f      	adds	r7, r7, #1
 8100d04:	f7ff ff0a 	bl	8100b1c <cmox_ModularBN_Mul>
 8100d08:	9806      	ldr	r0, [sp, #24]
 8100d0a:	4287      	cmp	r7, r0
 8100d0c:	d3ef      	bcc.n	8100cee <cmox_ModExpBN_SW+0xc6>
 8100d0e:	9616      	str	r6, [sp, #88]	@ 0x58
 8100d10:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8100d12:	6801      	ldr	r1, [r0, #0]
 8100d14:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8100d16:	9106      	str	r1, [sp, #24]
 8100d18:	2100      	movs	r1, #0
 8100d1a:	f001 f992 	bl	8102042 <cmox_bn_init>
 8100d1e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8100d20:	9903      	ldr	r1, [sp, #12]
 8100d22:	2001      	movs	r0, #1
 8100d24:	f001 f99c 	bl	8102060 <cmox_bn_cCopy>
 8100d28:	2001      	movs	r0, #1
 8100d2a:	9008      	str	r0, [sp, #32]
 8100d2c:	e015      	b.n	8100d5a <cmox_ModExpBN_SW+0x132>
 8100d2e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8100d30:	9906      	ldr	r1, [sp, #24]
 8100d32:	2220      	movs	r2, #32
 8100d34:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8100d38:	9906      	ldr	r1, [sp, #24]
 8100d3a:	f88d 2008 	strb.w	r2, [sp, #8]
 8100d3e:	9007      	str	r0, [sp, #28]
 8100d40:	1e49      	subs	r1, r1, #1
 8100d42:	9106      	str	r1, [sp, #24]
 8100d44:	9807      	ldr	r0, [sp, #28]
 8100d46:	9907      	ldr	r1, [sp, #28]
 8100d48:	0fc0      	lsrs	r0, r0, #31
 8100d4a:	0049      	lsls	r1, r1, #1
 8100d4c:	9107      	str	r1, [sp, #28]
 8100d4e:	002a      	movs	r2, r5
 8100d50:	d13b      	bne.n	8100dca <cmox_ModExpBN_SW+0x1a2>
 8100d52:	2800      	cmp	r0, #0
 8100d54:	d001      	beq.n	8100d5a <cmox_ModExpBN_SW+0x132>
 8100d56:	d043      	beq.n	8100de0 <cmox_ModExpBN_SW+0x1b8>
 8100d58:	2501      	movs	r5, #1
 8100d5a:	f89d 0008 	ldrb.w	r0, [sp, #8]
 8100d5e:	1e41      	subs	r1, r0, #1
 8100d60:	f88d 1008 	strb.w	r1, [sp, #8]
 8100d64:	f89d 0008 	ldrb.w	r0, [sp, #8]
 8100d68:	2800      	cmp	r0, #0
 8100d6a:	d1eb      	bne.n	8100d44 <cmox_ModExpBN_SW+0x11c>
 8100d6c:	9806      	ldr	r0, [sp, #24]
 8100d6e:	2800      	cmp	r0, #0
 8100d70:	d1dd      	bne.n	8100d2e <cmox_ModExpBN_SW+0x106>
 8100d72:	2d02      	cmp	r5, #2
 8100d74:	d11c      	bne.n	8100db0 <cmox_ModExpBN_SW+0x188>
 8100d76:	b2e0      	uxtb	r0, r4
 8100d78:	b1d0      	cbz	r0, 8100db0 <cmox_ModExpBN_SW+0x188>
 8100d7a:	b2e5      	uxtb	r5, r4
 8100d7c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8100d7e:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8100d80:	9f05      	ldr	r7, [sp, #20]
 8100d82:	4633      	mov	r3, r6
 8100d84:	465a      	mov	r2, fp
 8100d86:	4621      	mov	r1, r4
 8100d88:	4620      	mov	r0, r4
 8100d8a:	f7ff feea 	bl	8100b62 <cmox_ModularBN_Sqr>
 8100d8e:	9908      	ldr	r1, [sp, #32]
 8100d90:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8100d94:	fa5f f08a 	uxtb.w	r0, sl
 8100d98:	40b9      	lsls	r1, r7
 8100d9a:	4208      	tst	r0, r1
 8100d9c:	d006      	beq.n	8100dac <cmox_ModExpBN_SW+0x184>
 8100d9e:	9600      	str	r6, [sp, #0]
 8100da0:	9903      	ldr	r1, [sp, #12]
 8100da2:	465b      	mov	r3, fp
 8100da4:	4622      	mov	r2, r4
 8100da6:	4620      	mov	r0, r4
 8100da8:	f7ff feb8 	bl	8100b1c <cmox_ModularBN_Mul>
 8100dac:	1e6d      	subs	r5, r5, #1
 8100dae:	d1e8      	bne.n	8100d82 <cmox_ModExpBN_SW+0x15a>
 8100db0:	f1b8 0f00 	cmp.w	r8, #0
 8100db4:	d045      	beq.n	8100e42 <cmox_ModExpBN_SW+0x21a>
 8100db6:	9801      	ldr	r0, [sp, #4]
 8100db8:	eb00 0188 	add.w	r1, r0, r8, lsl #2
 8100dbc:	1f09      	subs	r1, r1, #4
 8100dbe:	4648      	mov	r0, r9
 8100dc0:	f001 f913 	bl	8101fea <cmox_bn_free>
 8100dc4:	f1a8 0801 	sub.w	r8, r8, #1
 8100dc8:	e7f2      	b.n	8100db0 <cmox_ModExpBN_SW+0x188>
 8100dca:	2d01      	cmp	r5, #1
 8100dcc:	bf08      	it	eq
 8100dce:	2800      	cmpeq	r0, #0
 8100dd0:	d106      	bne.n	8100de0 <cmox_ModExpBN_SW+0x1b8>
 8100dd2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8100dd4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8100dd6:	465a      	mov	r2, fp
 8100dd8:	4608      	mov	r0, r1
 8100dda:	f7ff fec2 	bl	8100b62 <cmox_ModularBN_Sqr>
 8100dde:	e7bc      	b.n	8100d5a <cmox_ModExpBN_SW+0x132>
 8100de0:	9905      	ldr	r1, [sp, #20]
 8100de2:	1c64      	adds	r4, r4, #1
 8100de4:	9a05      	ldr	r2, [sp, #20]
 8100de6:	1b09      	subs	r1, r1, r4
 8100de8:	4088      	lsls	r0, r1
 8100dea:	ea40 0a0a 	orr.w	sl, r0, sl
 8100dee:	2502      	movs	r5, #2
 8100df0:	b2e0      	uxtb	r0, r4
 8100df2:	4290      	cmp	r0, r2
 8100df4:	d1b1      	bne.n	8100d5a <cmox_ModExpBN_SW+0x132>
 8100df6:	2700      	movs	r7, #0
 8100df8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8100dfa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8100dfc:	4616      	mov	r6, r2
 8100dfe:	e006      	b.n	8100e0e <cmox_ModExpBN_SW+0x1e6>
 8100e00:	4623      	mov	r3, r4
 8100e02:	465a      	mov	r2, fp
 8100e04:	4629      	mov	r1, r5
 8100e06:	4628      	mov	r0, r5
 8100e08:	f7ff feab 	bl	8100b62 <cmox_ModularBN_Sqr>
 8100e0c:	1c7f      	adds	r7, r7, #1
 8100e0e:	42b7      	cmp	r7, r6
 8100e10:	d3f6      	bcc.n	8100e00 <cmox_ModExpBN_SW+0x1d8>
 8100e12:	9514      	str	r5, [sp, #80]	@ 0x50
 8100e14:	9416      	str	r4, [sp, #88]	@ 0x58
 8100e16:	9605      	str	r6, [sp, #20]
 8100e18:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8100e1a:	9d08      	ldr	r5, [sp, #32]
 8100e1c:	f99d 0009 	ldrsb.w	r0, [sp, #9]
 8100e20:	9901      	ldr	r1, [sp, #4]
 8100e22:	9200      	str	r2, [sp, #0]
 8100e24:	fa5f f48a 	uxtb.w	r4, sl
 8100e28:	4085      	lsls	r5, r0
 8100e2a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8100e2c:	ea24 0a05 	bic.w	sl, r4, r5
 8100e30:	f851 102a 	ldr.w	r1, [r1, sl, lsl #2]
 8100e34:	465b      	mov	r3, fp
 8100e36:	4610      	mov	r0, r2
 8100e38:	2400      	movs	r4, #0
 8100e3a:	f7ff fe6f 	bl	8100b1c <cmox_ModularBN_Mul>
 8100e3e:	46a2      	mov	sl, r4
 8100e40:	e78a      	b.n	8100d58 <cmox_ModExpBN_SW+0x130>
 8100e42:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8100e44:	a901      	add	r1, sp, #4
 8100e46:	4648      	mov	r0, r9
 8100e48:	f003 f9a1 	bl	810418e <cmox_membuf_free>
 8100e4c:	9804      	ldr	r0, [sp, #16]
 8100e4e:	b00b      	add	sp, #44	@ 0x2c
 8100e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08100e54 <cmox_ScalarMul_FW>:
 8100e54:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8100e58:	4607      	mov	r7, r0
 8100e5a:	b08c      	sub	sp, #48	@ 0x30
 8100e5c:	2001      	movs	r0, #1
 8100e5e:	468b      	mov	fp, r1
 8100e60:	9009      	str	r0, [sp, #36]	@ 0x24
 8100e62:	69b9      	ldr	r1, [r7, #24]
 8100e64:	2200      	movs	r2, #0
 8100e66:	461c      	mov	r4, r3
 8100e68:	6988      	ldr	r0, [r1, #24]
 8100e6a:	2100      	movs	r1, #0
 8100e6c:	6846      	ldr	r6, [r0, #4]
 8100e6e:	9204      	str	r2, [sp, #16]
 8100e70:	4658      	mov	r0, fp
 8100e72:	f001 f973 	bl	810215c <cmox_bn_cmpUint>
 8100e76:	b950      	cbnz	r0, 8100e8e <cmox_ScalarMul_FW+0x3a>
 8100e78:	69b8      	ldr	r0, [r7, #24]
 8100e7a:	6800      	ldr	r0, [r0, #0]
 8100e7c:	69c1      	ldr	r1, [r0, #28]
 8100e7e:	2901      	cmp	r1, #1
 8100e80:	d008      	beq.n	8100e94 <cmox_ScalarMul_FW+0x40>
 8100e82:	6881      	ldr	r1, [r0, #8]
 8100e84:	4658      	mov	r0, fp
 8100e86:	f001 f928 	bl	81020da <cmox_bn_cmp>
 8100e8a:	2800      	cmp	r0, #0
 8100e8c:	d402      	bmi.n	8100e94 <cmox_ScalarMul_FW+0x40>
 8100e8e:	f04f 0801 	mov.w	r8, #1
 8100e92:	e1d7      	b.n	8101244 <cmox_ScalarMul_FW+0x3f0>
 8100e94:	69b8      	ldr	r0, [r7, #24]
 8100e96:	6841      	ldr	r1, [r0, #4]
 8100e98:	69f8      	ldr	r0, [r7, #28]
 8100e9a:	698a      	ldr	r2, [r1, #24]
 8100e9c:	f107 0114 	add.w	r1, r7, #20
 8100ea0:	0092      	lsls	r2, r2, #2
 8100ea2:	f003 f955 	bl	8104150 <cmox_membuf_alloc>
 8100ea6:	ea5f 0800 	movs.w	r8, r0
 8100eaa:	d1f2      	bne.n	8100e92 <cmox_ScalarMul_FW+0x3e>
 8100eac:	2500      	movs	r5, #0
 8100eae:	e00c      	b.n	8100eca <cmox_ScalarMul_FW+0x76>
 8100eb0:	6809      	ldr	r1, [r1, #0]
 8100eb2:	680a      	ldr	r2, [r1, #0]
 8100eb4:	6979      	ldr	r1, [r7, #20]
 8100eb6:	6812      	ldr	r2, [r2, #0]
 8100eb8:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8100ebc:	f001 f88a 	bl	8101fd4 <cmox_bn_alloc>
 8100ec0:	ea5f 0800 	movs.w	r8, r0
 8100ec4:	f040 81b3 	bne.w	810122e <cmox_ScalarMul_FW+0x3da>
 8100ec8:	1c6d      	adds	r5, r5, #1
 8100eca:	69b9      	ldr	r1, [r7, #24]
 8100ecc:	69f8      	ldr	r0, [r7, #28]
 8100ece:	684a      	ldr	r2, [r1, #4]
 8100ed0:	6993      	ldr	r3, [r2, #24]
 8100ed2:	429d      	cmp	r5, r3
 8100ed4:	d3ec      	bcc.n	8100eb0 <cmox_ScalarMul_FW+0x5c>
 8100ed6:	f04f 0901 	mov.w	r9, #1
 8100eda:	1e72      	subs	r2, r6, #1
 8100edc:	fa09 f202 	lsl.w	r2, r9, r2
 8100ee0:	0092      	lsls	r2, r2, #2
 8100ee2:	9208      	str	r2, [sp, #32]
 8100ee4:	a901      	add	r1, sp, #4
 8100ee6:	f003 f933 	bl	8104150 <cmox_membuf_alloc>
 8100eea:	46aa      	mov	sl, r5
 8100eec:	ea5f 0800 	movs.w	r8, r0
 8100ef0:	f040 8194 	bne.w	810121c <cmox_ScalarMul_FW+0x3c8>
 8100ef4:	2500      	movs	r5, #0
 8100ef6:	e010      	b.n	8100f1a <cmox_ScalarMul_FW+0xc6>
 8100ef8:	9801      	ldr	r0, [sp, #4]
 8100efa:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8100efe:	4638      	mov	r0, r7
 8100f00:	f001 faa8 	bl	8102454 <cmox_ECC_AllocPoint>
 8100f04:	ea5f 0800 	movs.w	r8, r0
 8100f08:	f040 8181 	bne.w	810120e <cmox_ScalarMul_FW+0x3ba>
 8100f0c:	9801      	ldr	r0, [sp, #4]
 8100f0e:	f850 1025 	ldr.w	r1, [r0, r5, lsl #2]
 8100f12:	4638      	mov	r0, r7
 8100f14:	1c6d      	adds	r5, r5, #1
 8100f16:	f001 fb83 	bl	8102620 <cmox_ECC_SetPointAtInfinity>
 8100f1a:	1e71      	subs	r1, r6, #1
 8100f1c:	fa09 f101 	lsl.w	r1, r9, r1
 8100f20:	428d      	cmp	r5, r1
 8100f22:	d3e9      	bcc.n	8100ef8 <cmox_ScalarMul_FW+0xa4>
 8100f24:	9702      	str	r7, [sp, #8]
 8100f26:	950b      	str	r5, [sp, #44]	@ 0x2c
 8100f28:	9403      	str	r4, [sp, #12]
 8100f2a:	9802      	ldr	r0, [sp, #8]
 8100f2c:	4621      	mov	r1, r4
 8100f2e:	f04f 0800 	mov.w	r8, #0
 8100f32:	f001 fb75 	bl	8102620 <cmox_ECC_SetPointAtInfinity>
 8100f36:	f89b 0004 	ldrb.w	r0, [fp, #4]
 8100f3a:	4634      	mov	r4, r6
 8100f3c:	f000 0001 	and.w	r0, r0, #1
 8100f40:	9007      	str	r0, [sp, #28]
 8100f42:	9802      	ldr	r0, [sp, #8]
 8100f44:	6981      	ldr	r1, [r0, #24]
 8100f46:	9807      	ldr	r0, [sp, #28]
 8100f48:	680a      	ldr	r2, [r1, #0]
 8100f4a:	4659      	mov	r1, fp
 8100f4c:	f1c0 0001 	rsb	r0, r0, #1
 8100f50:	6892      	ldr	r2, [r2, #8]
 8100f52:	f7ff fd72 	bl	8100a3a <cmox_FieldBN_CondNegate>
 8100f56:	f8db 0000 	ldr.w	r0, [fp]
 8100f5a:	ebc6 1540 	rsb	r5, r6, r0, lsl #5
 8100f5e:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
 8100f62:	f7ff fe3f 	bl	8100be4 <cmox_mathUtils_bitLength>
 8100f66:	f8db 1000 	ldr.w	r1, [fp]
 8100f6a:	fa09 f206 	lsl.w	r2, r9, r6
 8100f6e:	1e49      	subs	r1, r1, #1
 8100f70:	eb00 1041 	add.w	r0, r0, r1, lsl #5
 8100f74:	1e71      	subs	r1, r6, #1
 8100f76:	fa09 f101 	lsl.w	r1, r9, r1
 8100f7a:	1e49      	subs	r1, r1, #1
 8100f7c:	9105      	str	r1, [sp, #20]
 8100f7e:	9206      	str	r2, [sp, #24]
 8100f80:	900a      	str	r0, [sp, #40]	@ 0x28
 8100f82:	e02d      	b.n	8100fe0 <cmox_ScalarMul_FW+0x18c>
 8100f84:	4642      	mov	r2, r8
 8100f86:	1c61      	adds	r1, r4, #1
 8100f88:	4658      	mov	r0, fp
 8100f8a:	f001 f916 	bl	81021ba <cmox_bn_getBits>
 8100f8e:	4606      	mov	r6, r0
 8100f90:	9806      	ldr	r0, [sp, #24]
 8100f92:	1a30      	subs	r0, r6, r0
 8100f94:	f7ff fe38 	bl	8100c08 <cmox_mathUtils_abs>
 8100f98:	4607      	mov	r7, r0
 8100f9a:	eb04 0008 	add.w	r0, r4, r8
 8100f9e:	9000      	str	r0, [sp, #0]
 8100fa0:	4601      	mov	r1, r0
 8100fa2:	4628      	mov	r0, r5
 8100fa4:	f7ff fe17 	bl	8100bd6 <cmox_mathUtils_gt>
 8100fa8:	9906      	ldr	r1, [sp, #24]
 8100faa:	2200      	movs	r2, #0
 8100fac:	40e6      	lsrs	r6, r4
 8100fae:	f7ff fe05 	bl	8100bbc <cmox_mathUtils_mux>
 8100fb2:	ea40 0757 	orr.w	r7, r0, r7, lsr #1
 8100fb6:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8100fb8:	4641      	mov	r1, r8
 8100fba:	f006 0601 	and.w	r6, r6, #1
 8100fbe:	f7ff fe0a 	bl	8100bd6 <cmox_mathUtils_gt>
 8100fc2:	9a05      	ldr	r2, [sp, #20]
 8100fc4:	1e63      	subs	r3, r4, #1
 8100fc6:	409e      	lsls	r6, r3
 8100fc8:	ea46 0107 	orr.w	r1, r6, r7
 8100fcc:	f7ff fdf6 	bl	8100bbc <cmox_mathUtils_mux>
 8100fd0:	4603      	mov	r3, r0
 8100fd2:	4642      	mov	r2, r8
 8100fd4:	1c61      	adds	r1, r4, #1
 8100fd6:	4658      	mov	r0, fp
 8100fd8:	f001 f913 	bl	8102202 <cmox_bn_setBits>
 8100fdc:	f8dd 8000 	ldr.w	r8, [sp]
 8100fe0:	45a8      	cmp	r8, r5
 8100fe2:	d3cf      	bcc.n	8100f84 <cmox_ScalarMul_FW+0x130>
 8100fe4:	1c65      	adds	r5, r4, #1
 8100fe6:	4642      	mov	r2, r8
 8100fe8:	4629      	mov	r1, r5
 8100fea:	4658      	mov	r0, fp
 8100fec:	f001 f8e5 	bl	81021ba <cmox_bn_getBits>
 8100ff0:	0843      	lsrs	r3, r0, #1
 8100ff2:	4642      	mov	r2, r8
 8100ff4:	4629      	mov	r1, r5
 8100ff6:	4658      	mov	r0, fp
 8100ff8:	f001 f903 	bl	8102202 <cmox_bn_setBits>
 8100ffc:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8100ffe:	2100      	movs	r1, #0
 8101000:	7c00      	ldrb	r0, [r0, #16]
 8101002:	f000 0004 	and.w	r0, r0, #4
 8101006:	f7ff fde1 	bl	8100bcc <cmox_mathUtils_neq>
 810100a:	b920      	cbnz	r0, 8101016 <cmox_ScalarMul_FW+0x1c2>
 810100c:	9009      	str	r0, [sp, #36]	@ 0x24
 810100e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8101010:	9802      	ldr	r0, [sp, #8]
 8101012:	f001 fbc3 	bl	810279c <cmox_ECC_PointToModularDomain>
 8101016:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8101018:	9802      	ldr	r0, [sp, #8]
 810101a:	f001 fc17 	bl	810284c <cmox_ECC_PointValidation>
 810101e:	ea5f 0800 	movs.w	r8, r0
 8101022:	f040 80e9 	bne.w	81011f8 <cmox_ScalarMul_FW+0x3a4>
 8101026:	9801      	ldr	r0, [sp, #4]
 8101028:	990c      	ldr	r1, [sp, #48]	@ 0x30
 810102a:	2301      	movs	r3, #1
 810102c:	6802      	ldr	r2, [r0, #0]
 810102e:	9802      	ldr	r0, [sp, #8]
 8101030:	6986      	ldr	r6, [r0, #24]
 8101032:	6875      	ldr	r5, [r6, #4]
 8101034:	682e      	ldr	r6, [r5, #0]
 8101036:	47b0      	blx	r6
 8101038:	9901      	ldr	r1, [sp, #4]
 810103a:	2000      	movs	r0, #0
 810103c:	9000      	str	r0, [sp, #0]
 810103e:	9802      	ldr	r0, [sp, #8]
 8101040:	684b      	ldr	r3, [r1, #4]
 8101042:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8101044:	6986      	ldr	r6, [r0, #24]
 8101046:	6809      	ldr	r1, [r1, #0]
 8101048:	6875      	ldr	r5, [r6, #4]
 810104a:	f8d5 c004 	ldr.w	ip, [r5, #4]
 810104e:	2502      	movs	r5, #2
 8101050:	47e0      	blx	ip
 8101052:	1e61      	subs	r1, r4, #1
 8101054:	f88d 1000 	strb.w	r1, [sp]
 8101058:	f89d 0000 	ldrb.w	r0, [sp]
 810105c:	9f02      	ldr	r7, [sp, #8]
 810105e:	fa09 f600 	lsl.w	r6, r9, r0
 8101062:	e00e      	b.n	8101082 <cmox_ScalarMul_FW+0x22e>
 8101064:	f8d7 c018 	ldr.w	ip, [r7, #24]
 8101068:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 810106c:	f851 1c04 	ldr.w	r1, [r1, #-4]
 8101070:	f8dc e004 	ldr.w	lr, [ip, #4]
 8101074:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 8101078:	4638      	mov	r0, r7
 810107a:	f8de c008 	ldr.w	ip, [lr, #8]
 810107e:	1c6d      	adds	r5, r5, #1
 8101080:	47e0      	blx	ip
 8101082:	9801      	ldr	r0, [sp, #4]
 8101084:	42b5      	cmp	r5, r6
 8101086:	6802      	ldr	r2, [r0, #0]
 8101088:	d3ec      	bcc.n	8101064 <cmox_ScalarMul_FW+0x210>
 810108a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 810108c:	2001      	movs	r0, #1
 810108e:	f001 fa6d 	bl	810256c <cmox_ECC_CondCopyPoint>
 8101092:	f8db 5000 	ldr.w	r5, [fp]
 8101096:	1e61      	subs	r1, r4, #1
 8101098:	4658      	mov	r0, fp
 810109a:	016d      	lsls	r5, r5, #5
 810109c:	1b2a      	subs	r2, r5, r4
 810109e:	f001 f88c 	bl	81021ba <cmox_bn_getBits>
 81010a2:	9901      	ldr	r1, [sp, #4]
 81010a4:	9a03      	ldr	r2, [sp, #12]
 81010a6:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 81010aa:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 81010ae:	2001      	movs	r0, #1
 81010b0:	f001 fa5c 	bl	810256c <cmox_ECC_CondCopyPoint>
 81010b4:	9502      	str	r5, [sp, #8]
 81010b6:	e02e      	b.n	8101116 <cmox_ScalarMul_FW+0x2c2>
 81010b8:	f8d7 c018 	ldr.w	ip, [r7, #24]
 81010bc:	2301      	movs	r3, #1
 81010be:	464a      	mov	r2, r9
 81010c0:	f8dc e004 	ldr.w	lr, [ip, #4]
 81010c4:	4649      	mov	r1, r9
 81010c6:	4638      	mov	r0, r7
 81010c8:	f8de c000 	ldr.w	ip, [lr]
 81010cc:	47e0      	blx	ip
 81010ce:	1e6d      	subs	r5, r5, #1
 81010d0:	d1f2      	bne.n	81010b8 <cmox_ScalarMul_FW+0x264>
 81010d2:	9d04      	ldr	r5, [sp, #16]
 81010d4:	9806      	ldr	r0, [sp, #24]
 81010d6:	9901      	ldr	r1, [sp, #4]
 81010d8:	40f5      	lsrs	r5, r6
 81010da:	f005 0501 	and.w	r5, r5, #1
 81010de:	f8cd 900c 	str.w	r9, [sp, #12]
 81010e2:	4045      	eors	r5, r0
 81010e4:	f085 0501 	eor.w	r5, r5, #1
 81010e8:	f851 2026 	ldr.w	r2, [r1, r6, lsl #2]
 81010ec:	4639      	mov	r1, r7
 81010ee:	4628      	mov	r0, r5
 81010f0:	f001 fa6f 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 81010f4:	9804      	ldr	r0, [sp, #16]
 81010f6:	40b5      	lsls	r5, r6
 81010f8:	9b03      	ldr	r3, [sp, #12]
 81010fa:	4045      	eors	r5, r0
 81010fc:	9801      	ldr	r0, [sp, #4]
 81010fe:	9504      	str	r5, [sp, #16]
 8101100:	69bd      	ldr	r5, [r7, #24]
 8101102:	f850 2026 	ldr.w	r2, [r0, r6, lsl #2]
 8101106:	4619      	mov	r1, r3
 8101108:	686e      	ldr	r6, [r5, #4]
 810110a:	4638      	mov	r0, r7
 810110c:	68b5      	ldr	r5, [r6, #8]
 810110e:	47a8      	blx	r5
 8101110:	9802      	ldr	r0, [sp, #8]
 8101112:	1b00      	subs	r0, r0, r4
 8101114:	9002      	str	r0, [sp, #8]
 8101116:	9802      	ldr	r0, [sp, #8]
 8101118:	42a0      	cmp	r0, r4
 810111a:	d310      	bcc.n	810113e <cmox_ScalarMul_FW+0x2ea>
 810111c:	4602      	mov	r2, r0
 810111e:	4621      	mov	r1, r4
 8101120:	4658      	mov	r0, fp
 8101122:	f001 f84a 	bl	81021ba <cmox_bn_getBits>
 8101126:	f89d 2000 	ldrb.w	r2, [sp]
 810112a:	9905      	ldr	r1, [sp, #20]
 810112c:	0025      	movs	r5, r4
 810112e:	fa20 f302 	lsr.w	r3, r0, r2
 8101132:	9306      	str	r3, [sp, #24]
 8101134:	ea01 0600 	and.w	r6, r1, r0
 8101138:	f8dd 900c 	ldr.w	r9, [sp, #12]
 810113c:	e7c8      	b.n	81010d0 <cmox_ScalarMul_FW+0x27c>
 810113e:	2200      	movs	r2, #0
 8101140:	4621      	mov	r1, r4
 8101142:	4658      	mov	r0, fp
 8101144:	f001 f839 	bl	81021ba <cmox_bn_getBits>
 8101148:	f89d 2000 	ldrb.w	r2, [sp]
 810114c:	9905      	ldr	r1, [sp, #20]
 810114e:	fa20 f302 	lsr.w	r3, r0, r2
 8101152:	4625      	mov	r5, r4
 8101154:	ea01 0b00 	and.w	fp, r1, r0
 8101158:	9801      	ldr	r0, [sp, #4]
 810115a:	4639      	mov	r1, r7
 810115c:	f850 202b 	ldr.w	r2, [r0, fp, lsl #2]
 8101160:	9804      	ldr	r0, [sp, #16]
 8101162:	fa20 f00b 	lsr.w	r0, r0, fp
 8101166:	f000 0001 	and.w	r0, r0, #1
 810116a:	4043      	eors	r3, r0
 810116c:	f083 0001 	eor.w	r0, r3, #1
 8101170:	f001 fa2f 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101174:	9c03      	ldr	r4, [sp, #12]
 8101176:	e007      	b.n	8101188 <cmox_ScalarMul_FW+0x334>
 8101178:	f8d6 c000 	ldr.w	ip, [r6]
 810117c:	2301      	movs	r3, #1
 810117e:	4622      	mov	r2, r4
 8101180:	4621      	mov	r1, r4
 8101182:	4638      	mov	r0, r7
 8101184:	47e0      	blx	ip
 8101186:	1e6d      	subs	r5, r5, #1
 8101188:	69b8      	ldr	r0, [r7, #24]
 810118a:	2d00      	cmp	r5, #0
 810118c:	6846      	ldr	r6, [r0, #4]
 810118e:	d1f3      	bne.n	8101178 <cmox_ScalarMul_FW+0x324>
 8101190:	9702      	str	r7, [sp, #8]
 8101192:	9801      	ldr	r0, [sp, #4]
 8101194:	68b5      	ldr	r5, [r6, #8]
 8101196:	6803      	ldr	r3, [r0, #0]
 8101198:	f850 202b 	ldr.w	r2, [r0, fp, lsl #2]
 810119c:	4621      	mov	r1, r4
 810119e:	4638      	mov	r0, r7
 81011a0:	47a8      	blx	r5
 81011a2:	9801      	ldr	r0, [sp, #4]
 81011a4:	2100      	movs	r1, #0
 81011a6:	6802      	ldr	r2, [r0, #0]
 81011a8:	6890      	ldr	r0, [r2, #8]
 81011aa:	f000 ffd7 	bl	810215c <cmox_bn_cmpUint>
 81011ae:	4603      	mov	r3, r0
 81011b0:	9801      	ldr	r0, [sp, #4]
 81011b2:	4621      	mov	r1, r4
 81011b4:	6802      	ldr	r2, [r0, #0]
 81011b6:	9802      	ldr	r0, [sp, #8]
 81011b8:	6986      	ldr	r6, [r0, #24]
 81011ba:	6875      	ldr	r5, [r6, #4]
 81011bc:	f8d5 c000 	ldr.w	ip, [r5]
 81011c0:	47e0      	blx	ip
 81011c2:	9801      	ldr	r0, [sp, #4]
 81011c4:	4622      	mov	r2, r4
 81011c6:	6801      	ldr	r1, [r0, #0]
 81011c8:	2001      	movs	r0, #1
 81011ca:	f001 f9cf 	bl	810256c <cmox_ECC_CondCopyPoint>
 81011ce:	9807      	ldr	r0, [sp, #28]
 81011d0:	9902      	ldr	r1, [sp, #8]
 81011d2:	4622      	mov	r2, r4
 81011d4:	f1c0 0001 	rsb	r0, r0, #1
 81011d8:	f001 f9fb 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 81011dc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 81011de:	b958      	cbnz	r0, 81011f8 <cmox_ScalarMul_FW+0x3a4>
 81011e0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 81011e2:	9802      	ldr	r0, [sp, #8]
 81011e4:	f001 fb04 	bl	81027f0 <cmox_ECC_PointFromModularDomain>
 81011e8:	4680      	mov	r8, r0
 81011ea:	980c      	ldr	r0, [sp, #48]	@ 0x30
 81011ec:	42a0      	cmp	r0, r4
 81011ee:	d003      	beq.n	81011f8 <cmox_ScalarMul_FW+0x3a4>
 81011f0:	9802      	ldr	r0, [sp, #8]
 81011f2:	4621      	mov	r1, r4
 81011f4:	f001 fafc 	bl	81027f0 <cmox_ECC_PointFromModularDomain>
 81011f8:	9f02      	ldr	r7, [sp, #8]
 81011fa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 81011fc:	e007      	b.n	810120e <cmox_ScalarMul_FW+0x3ba>
 81011fe:	9801      	ldr	r0, [sp, #4]
 8101200:	eb00 0185 	add.w	r1, r0, r5, lsl #2
 8101204:	1f09      	subs	r1, r1, #4
 8101206:	4638      	mov	r0, r7
 8101208:	f001 f980 	bl	810250c <cmox_ECC_FreePoint>
 810120c:	1e6d      	subs	r5, r5, #1
 810120e:	2d00      	cmp	r5, #0
 8101210:	d1f5      	bne.n	81011fe <cmox_ScalarMul_FW+0x3aa>
 8101212:	9a08      	ldr	r2, [sp, #32]
 8101214:	69f8      	ldr	r0, [r7, #28]
 8101216:	a901      	add	r1, sp, #4
 8101218:	f002 ffb9 	bl	810418e <cmox_membuf_free>
 810121c:	4655      	mov	r5, sl
 810121e:	e006      	b.n	810122e <cmox_ScalarMul_FW+0x3da>
 8101220:	6979      	ldr	r1, [r7, #20]
 8101222:	eb01 0285 	add.w	r2, r1, r5, lsl #2
 8101226:	1f11      	subs	r1, r2, #4
 8101228:	f000 fedf 	bl	8101fea <cmox_bn_free>
 810122c:	1e6d      	subs	r5, r5, #1
 810122e:	69f8      	ldr	r0, [r7, #28]
 8101230:	2d00      	cmp	r5, #0
 8101232:	d1f5      	bne.n	8101220 <cmox_ScalarMul_FW+0x3cc>
 8101234:	69b9      	ldr	r1, [r7, #24]
 8101236:	684a      	ldr	r2, [r1, #4]
 8101238:	f107 0114 	add.w	r1, r7, #20
 810123c:	6992      	ldr	r2, [r2, #24]
 810123e:	0092      	lsls	r2, r2, #2
 8101240:	f002 ffa5 	bl	810418e <cmox_membuf_free>
 8101244:	4640      	mov	r0, r8
 8101246:	b00d      	add	sp, #52	@ 0x34
 8101248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0810124c <cmox_ScalarMul_SC>:
 810124c:	e92d 4ff6 	stmdb	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8101250:	b08b      	sub	sp, #44	@ 0x2c
 8101252:	4606      	mov	r6, r0
 8101254:	4689      	mov	r9, r1
 8101256:	69b1      	ldr	r1, [r6, #24]
 8101258:	2700      	movs	r7, #0
 810125a:	680a      	ldr	r2, [r1, #0]
 810125c:	6890      	ldr	r0, [r2, #8]
 810125e:	f000 ff93 	bl	8102188 <cmox_bn_countBits>
 8101262:	69b1      	ldr	r1, [r6, #24]
 8101264:	688a      	ldr	r2, [r1, #8]
 8101266:	6813      	ldr	r3, [r2, #0]
 8101268:	fbb0 f8f3 	udiv	r8, r0, r3
 810126c:	461d      	mov	r5, r3
 810126e:	1e5a      	subs	r2, r3, #1
 8101270:	fb05 0518 	mls	r5, r5, r8, r0
 8101274:	f88d 2010 	strb.w	r2, [sp, #16]
 8101278:	f89d 0010 	ldrb.w	r0, [sp, #16]
 810127c:	9300      	str	r3, [sp, #0]
 810127e:	2301      	movs	r3, #1
 8101280:	4083      	lsls	r3, r0
 8101282:	1e5b      	subs	r3, r3, #1
 8101284:	9309      	str	r3, [sp, #36]	@ 0x24
 8101286:	680a      	ldr	r2, [r1, #0]
 8101288:	6813      	ldr	r3, [r2, #0]
 810128a:	681c      	ldr	r4, [r3, #0]
 810128c:	2302      	movs	r3, #2
 810128e:	9702      	str	r7, [sp, #8]
 8101290:	9405      	str	r4, [sp, #20]
 8101292:	9307      	str	r3, [sp, #28]
 8101294:	688a      	ldr	r2, [r1, #8]
 8101296:	9206      	str	r2, [sp, #24]
 8101298:	6848      	ldr	r0, [r1, #4]
 810129a:	69c1      	ldr	r1, [r0, #28]
 810129c:	2902      	cmp	r1, #2
 810129e:	bf04      	itt	eq
 81012a0:	2003      	moveq	r0, #3
 81012a2:	9007      	streq	r0, [sp, #28]
 81012a4:	2100      	movs	r1, #0
 81012a6:	4648      	mov	r0, r9
 81012a8:	f000 ff58 	bl	810215c <cmox_bn_cmpUint>
 81012ac:	b950      	cbnz	r0, 81012c4 <cmox_ScalarMul_SC+0x78>
 81012ae:	69b0      	ldr	r0, [r6, #24]
 81012b0:	6800      	ldr	r0, [r0, #0]
 81012b2:	69c1      	ldr	r1, [r0, #28]
 81012b4:	2901      	cmp	r1, #1
 81012b6:	d007      	beq.n	81012c8 <cmox_ScalarMul_SC+0x7c>
 81012b8:	6881      	ldr	r1, [r0, #8]
 81012ba:	4648      	mov	r0, r9
 81012bc:	f000 ff0d 	bl	81020da <cmox_bn_cmp>
 81012c0:	2800      	cmp	r0, #0
 81012c2:	d401      	bmi.n	81012c8 <cmox_ScalarMul_SC+0x7c>
 81012c4:	2401      	movs	r4, #1
 81012c6:	e193      	b.n	81015f0 <cmox_ScalarMul_SC+0x3a4>
 81012c8:	69b0      	ldr	r0, [r6, #24]
 81012ca:	6841      	ldr	r1, [r0, #4]
 81012cc:	69f0      	ldr	r0, [r6, #28]
 81012ce:	698a      	ldr	r2, [r1, #24]
 81012d0:	f106 0114 	add.w	r1, r6, #20
 81012d4:	0092      	lsls	r2, r2, #2
 81012d6:	f002 ff3b 	bl	8104150 <cmox_membuf_alloc>
 81012da:	0004      	movs	r4, r0
 81012dc:	d1f3      	bne.n	81012c6 <cmox_ScalarMul_SC+0x7a>
 81012de:	46ba      	mov	sl, r7
 81012e0:	e00d      	b.n	81012fe <cmox_ScalarMul_SC+0xb2>
 81012e2:	6800      	ldr	r0, [r0, #0]
 81012e4:	6801      	ldr	r1, [r0, #0]
 81012e6:	6970      	ldr	r0, [r6, #20]
 81012e8:	680a      	ldr	r2, [r1, #0]
 81012ea:	eb00 018a 	add.w	r1, r0, sl, lsl #2
 81012ee:	69f0      	ldr	r0, [r6, #28]
 81012f0:	f000 fe70 	bl	8101fd4 <cmox_bn_alloc>
 81012f4:	0004      	movs	r4, r0
 81012f6:	f040 816f 	bne.w	81015d8 <cmox_ScalarMul_SC+0x38c>
 81012fa:	f10a 0a01 	add.w	sl, sl, #1
 81012fe:	69b0      	ldr	r0, [r6, #24]
 8101300:	6841      	ldr	r1, [r0, #4]
 8101302:	698a      	ldr	r2, [r1, #24]
 8101304:	4592      	cmp	sl, r2
 8101306:	dbec      	blt.n	81012e2 <cmox_ScalarMul_SC+0x96>
 8101308:	f8cd a028 	str.w	sl, [sp, #40]	@ 0x28
 810130c:	a902      	add	r1, sp, #8
 810130e:	4630      	mov	r0, r6
 8101310:	f001 f8a0 	bl	8102454 <cmox_ECC_AllocPoint>
 8101314:	0004      	movs	r4, r0
 8101316:	f040 8154 	bne.w	81015c2 <cmox_ScalarMul_SC+0x376>
 810131a:	9902      	ldr	r1, [sp, #8]
 810131c:	4630      	mov	r0, r6
 810131e:	4644      	mov	r4, r8
 8101320:	f001 f97e 	bl	8102620 <cmox_ECC_SetPointAtInfinity>
 8101324:	f899 0004 	ldrb.w	r0, [r9, #4]
 8101328:	46b8      	mov	r8, r7
 810132a:	f000 0001 	and.w	r0, r0, #1
 810132e:	9008      	str	r0, [sp, #32]
 8101330:	69b1      	ldr	r1, [r6, #24]
 8101332:	6808      	ldr	r0, [r1, #0]
 8101334:	4649      	mov	r1, r9
 8101336:	6882      	ldr	r2, [r0, #8]
 8101338:	9808      	ldr	r0, [sp, #32]
 810133a:	f1c0 0001 	rsb	r0, r0, #1
 810133e:	f7ff fb7c 	bl	8100a3a <cmox_FieldBN_CondNegate>
 8101342:	f8dd a000 	ldr.w	sl, [sp]
 8101346:	e00b      	b.n	8101360 <cmox_ScalarMul_SC+0x114>
 8101348:	f108 0b01 	add.w	fp, r8, #1
 810134c:	fb04 520b 	mla	r2, r4, fp, r5
 8101350:	2101      	movs	r1, #1
 8101352:	4648      	mov	r0, r9
 8101354:	f000 ff31 	bl	81021ba <cmox_bn_getBits>
 8101358:	fa00 f008 	lsl.w	r0, r0, r8
 810135c:	4307      	orrs	r7, r0
 810135e:	46d8      	mov	r8, fp
 8101360:	f1aa 0001 	sub.w	r0, sl, #1
 8101364:	4580      	cmp	r8, r0
 8101366:	d3ef      	bcc.n	8101348 <cmox_ScalarMul_SC+0xfc>
 8101368:	990c      	ldr	r1, [sp, #48]	@ 0x30
 810136a:	4630      	mov	r0, r6
 810136c:	1c7f      	adds	r7, r7, #1
 810136e:	f001 f957 	bl	8102620 <cmox_ECC_SetPointAtInfinity>
 8101372:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8101374:	9a06      	ldr	r2, [sp, #24]
 8101376:	2106      	movs	r1, #6
 8101378:	9001      	str	r0, [sp, #4]
 810137a:	9807      	ldr	r0, [sp, #28]
 810137c:	9100      	str	r1, [sp, #0]
 810137e:	1d13      	adds	r3, r2, #4
 8101380:	1d11      	adds	r1, r2, #4
 8101382:	4347      	muls	r7, r0
 8101384:	9a05      	ldr	r2, [sp, #20]
 8101386:	2001      	movs	r0, #1
 8101388:	1c7f      	adds	r7, r7, #1
 810138a:	4357      	muls	r7, r2
 810138c:	eb01 0287 	add.w	r2, r1, r7, lsl #2
 8101390:	9905      	ldr	r1, [sp, #20]
 8101392:	1ea7      	subs	r7, r4, #2
 8101394:	f001 f985 	bl	81026a2 <cmox_ECC_CondImportPoint>
 8101398:	e052      	b.n	8101440 <cmox_ScalarMul_SC+0x1f4>
 810139a:	197a      	adds	r2, r7, r5
 810139c:	fb04 220b 	mla	r2, r4, fp, r2
 81013a0:	2101      	movs	r1, #1
 81013a2:	4648      	mov	r0, r9
 81013a4:	1c52      	adds	r2, r2, #1
 81013a6:	f000 ff08 	bl	81021ba <cmox_bn_getBits>
 81013aa:	fa00 f00b 	lsl.w	r0, r0, fp
 81013ae:	ea40 0808 	orr.w	r8, r0, r8
 81013b2:	f10b 0b01 	add.w	fp, fp, #1
 81013b6:	45d3      	cmp	fp, sl
 81013b8:	d3ef      	bcc.n	810139a <cmox_ScalarMul_SC+0x14e>
 81013ba:	f8d6 e018 	ldr.w	lr, [r6, #24]
 81013be:	f89d 0010 	ldrb.w	r0, [sp, #16]
 81013c2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 81013c4:	f8de c004 	ldr.w	ip, [lr, #4]
 81013c8:	fa28 f000 	lsr.w	r0, r8, r0
 81013cc:	f000 0b01 	and.w	fp, r0, #1
 81013d0:	f8dc c000 	ldr.w	ip, [ip]
 81013d4:	2301      	movs	r3, #1
 81013d6:	4611      	mov	r1, r2
 81013d8:	4630      	mov	r0, r6
 81013da:	47e0      	blx	ip
 81013dc:	9802      	ldr	r0, [sp, #8]
 81013de:	2106      	movs	r1, #6
 81013e0:	9100      	str	r1, [sp, #0]
 81013e2:	9001      	str	r0, [sp, #4]
 81013e4:	9806      	ldr	r0, [sp, #24]
 81013e6:	f1ab 0101 	sub.w	r1, fp, #1
 81013ea:	f8dd e01c 	ldr.w	lr, [sp, #28]
 81013ee:	1d02      	adds	r2, r0, #4
 81013f0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 81013f2:	ea81 0108 	eor.w	r1, r1, r8
 81013f6:	f8dd c014 	ldr.w	ip, [sp, #20]
 81013fa:	4008      	ands	r0, r1
 81013fc:	1c40      	adds	r0, r0, #1
 81013fe:	fb00 f00e 	mul.w	r0, r0, lr
 8101402:	2300      	movs	r3, #0
 8101404:	4661      	mov	r1, ip
 8101406:	1c40      	adds	r0, r0, #1
 8101408:	fb00 f00c 	mul.w	r0, r0, ip
 810140c:	f1cb 0b01 	rsb	fp, fp, #1
 8101410:	1e7f      	subs	r7, r7, #1
 8101412:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 8101416:	2001      	movs	r0, #1
 8101418:	f001 f943 	bl	81026a2 <cmox_ECC_CondImportPoint>
 810141c:	9a02      	ldr	r2, [sp, #8]
 810141e:	4631      	mov	r1, r6
 8101420:	4658      	mov	r0, fp
 8101422:	f001 f8d6 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101426:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8101428:	2000      	movs	r0, #0
 810142a:	9a02      	ldr	r2, [sp, #8]
 810142c:	9000      	str	r0, [sp, #0]
 810142e:	f8d6 c018 	ldr.w	ip, [r6, #24]
 8101432:	4619      	mov	r1, r3
 8101434:	4630      	mov	r0, r6
 8101436:	f8dc e004 	ldr.w	lr, [ip, #4]
 810143a:	f8de c004 	ldr.w	ip, [lr, #4]
 810143e:	47e0      	blx	ip
 8101440:	1e68      	subs	r0, r5, #1
 8101442:	4180      	sbcs	r0, r0
 8101444:	ebb7 7fd0 	cmp.w	r7, r0, lsr #31
 8101448:	db03      	blt.n	8101452 <cmox_ScalarMul_SC+0x206>
 810144a:	f04f 0800 	mov.w	r8, #0
 810144e:	46c3      	mov	fp, r8
 8101450:	e7b1      	b.n	81013b6 <cmox_ScalarMul_SC+0x16a>
 8101452:	bb9d      	cbnz	r5, 81014bc <cmox_ScalarMul_SC+0x270>
 8101454:	2700      	movs	r7, #0
 8101456:	e009      	b.n	810146c <cmox_ScalarMul_SC+0x220>
 8101458:	fb04 f207 	mul.w	r2, r4, r7
 810145c:	2101      	movs	r1, #1
 810145e:	4648      	mov	r0, r9
 8101460:	1c52      	adds	r2, r2, #1
 8101462:	f000 feaa 	bl	81021ba <cmox_bn_getBits>
 8101466:	40b8      	lsls	r0, r7
 8101468:	4305      	orrs	r5, r0
 810146a:	1c7f      	adds	r7, r7, #1
 810146c:	4557      	cmp	r7, sl
 810146e:	d3f3      	bcc.n	8101458 <cmox_ScalarMul_SC+0x20c>
 8101470:	69b4      	ldr	r4, [r6, #24]
 8101472:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8101474:	2301      	movs	r3, #1
 8101476:	6864      	ldr	r4, [r4, #4]
 8101478:	4611      	mov	r1, r2
 810147a:	f89d 0010 	ldrb.w	r0, [sp, #16]
 810147e:	f8d4 c000 	ldr.w	ip, [r4]
 8101482:	fa25 f700 	lsr.w	r7, r5, r0
 8101486:	4630      	mov	r0, r6
 8101488:	47e0      	blx	ip
 810148a:	9802      	ldr	r0, [sp, #8]
 810148c:	2106      	movs	r1, #6
 810148e:	f007 0701 	and.w	r7, r7, #1
 8101492:	9001      	str	r0, [sp, #4]
 8101494:	9806      	ldr	r0, [sp, #24]
 8101496:	9100      	str	r1, [sp, #0]
 8101498:	1e79      	subs	r1, r7, #1
 810149a:	1d02      	adds	r2, r0, #4
 810149c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 810149e:	f8dd a01c 	ldr.w	sl, [sp, #28]
 81014a2:	404d      	eors	r5, r1
 81014a4:	4005      	ands	r5, r0
 81014a6:	1c6d      	adds	r5, r5, #1
 81014a8:	fb05 f50a 	mul.w	r5, r5, sl
 81014ac:	9c05      	ldr	r4, [sp, #20]
 81014ae:	2300      	movs	r3, #0
 81014b0:	1c6d      	adds	r5, r5, #1
 81014b2:	4365      	muls	r5, r4
 81014b4:	4621      	mov	r1, r4
 81014b6:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 81014ba:	e04b      	b.n	8101554 <cmox_ScalarMul_SC+0x308>
 81014bc:	9806      	ldr	r0, [sp, #24]
 81014be:	9a05      	ldr	r2, [sp, #20]
 81014c0:	1e6f      	subs	r7, r5, #1
 81014c2:	1d01      	adds	r1, r0, #4
 81014c4:	eb01 0482 	add.w	r4, r1, r2, lsl #2
 81014c8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 81014ca:	4692      	mov	sl, r2
 81014cc:	e029      	b.n	8101522 <cmox_ScalarMul_SC+0x2d6>
 81014ce:	2301      	movs	r3, #1
 81014d0:	462a      	mov	r2, r5
 81014d2:	4629      	mov	r1, r5
 81014d4:	4630      	mov	r0, r6
 81014d6:	47e0      	blx	ip
 81014d8:	1c7a      	adds	r2, r7, #1
 81014da:	2101      	movs	r1, #1
 81014dc:	4648      	mov	r0, r9
 81014de:	f000 fe6c 	bl	81021ba <cmox_bn_getBits>
 81014e2:	4680      	mov	r8, r0
 81014e4:	9802      	ldr	r0, [sp, #8]
 81014e6:	2106      	movs	r1, #6
 81014e8:	9100      	str	r1, [sp, #0]
 81014ea:	9001      	str	r0, [sp, #4]
 81014ec:	2300      	movs	r3, #0
 81014ee:	4622      	mov	r2, r4
 81014f0:	4651      	mov	r1, sl
 81014f2:	2001      	movs	r0, #1
 81014f4:	f001 f8d5 	bl	81026a2 <cmox_ECC_CondImportPoint>
 81014f8:	9a02      	ldr	r2, [sp, #8]
 81014fa:	f1c8 0801 	rsb	r8, r8, #1
 81014fe:	4631      	mov	r1, r6
 8101500:	4640      	mov	r0, r8
 8101502:	f001 f866 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101506:	2000      	movs	r0, #0
 8101508:	9a02      	ldr	r2, [sp, #8]
 810150a:	9000      	str	r0, [sp, #0]
 810150c:	f8d6 c018 	ldr.w	ip, [r6, #24]
 8101510:	462b      	mov	r3, r5
 8101512:	4629      	mov	r1, r5
 8101514:	f8dc e004 	ldr.w	lr, [ip, #4]
 8101518:	4630      	mov	r0, r6
 810151a:	1e7f      	subs	r7, r7, #1
 810151c:	f8de c004 	ldr.w	ip, [lr, #4]
 8101520:	47e0      	blx	ip
 8101522:	69b0      	ldr	r0, [r6, #24]
 8101524:	2f00      	cmp	r7, #0
 8101526:	6841      	ldr	r1, [r0, #4]
 8101528:	f8d1 c000 	ldr.w	ip, [r1]
 810152c:	dccf      	bgt.n	81014ce <cmox_ScalarMul_SC+0x282>
 810152e:	462a      	mov	r2, r5
 8101530:	950c      	str	r5, [sp, #48]	@ 0x30
 8101532:	2301      	movs	r3, #1
 8101534:	4611      	mov	r1, r2
 8101536:	4630      	mov	r0, r6
 8101538:	47e0      	blx	ip
 810153a:	2201      	movs	r2, #1
 810153c:	2101      	movs	r1, #1
 810153e:	4648      	mov	r0, r9
 8101540:	f000 fe3b 	bl	81021ba <cmox_bn_getBits>
 8101544:	4607      	mov	r7, r0
 8101546:	9802      	ldr	r0, [sp, #8]
 8101548:	2106      	movs	r1, #6
 810154a:	9100      	str	r1, [sp, #0]
 810154c:	9001      	str	r0, [sp, #4]
 810154e:	2300      	movs	r3, #0
 8101550:	4622      	mov	r2, r4
 8101552:	4651      	mov	r1, sl
 8101554:	2001      	movs	r0, #1
 8101556:	f001 f8a4 	bl	81026a2 <cmox_ECC_CondImportPoint>
 810155a:	9a02      	ldr	r2, [sp, #8]
 810155c:	f1c7 0701 	rsb	r7, r7, #1
 8101560:	4631      	mov	r1, r6
 8101562:	4638      	mov	r0, r7
 8101564:	f001 f835 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101568:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 810156a:	a803      	add	r0, sp, #12
 810156c:	9a02      	ldr	r2, [sp, #8]
 810156e:	9000      	str	r0, [sp, #0]
 8101570:	69b4      	ldr	r4, [r6, #24]
 8101572:	4619      	mov	r1, r3
 8101574:	4630      	mov	r0, r6
 8101576:	6865      	ldr	r5, [r4, #4]
 8101578:	686c      	ldr	r4, [r5, #4]
 810157a:	47a0      	blx	r4
 810157c:	69b4      	ldr	r4, [r6, #24]
 810157e:	9b03      	ldr	r3, [sp, #12]
 8101580:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8101582:	6865      	ldr	r5, [r4, #4]
 8101584:	f003 0301 	and.w	r3, r3, #1
 8101588:	4611      	mov	r1, r2
 810158a:	f8d5 a000 	ldr.w	sl, [r5]
 810158e:	4630      	mov	r0, r6
 8101590:	47d0      	blx	sl
 8101592:	69b0      	ldr	r0, [r6, #24]
 8101594:	9c08      	ldr	r4, [sp, #32]
 8101596:	6801      	ldr	r1, [r0, #0]
 8101598:	f1c4 0401 	rsb	r4, r4, #1
 810159c:	4620      	mov	r0, r4
 810159e:	688a      	ldr	r2, [r1, #8]
 81015a0:	4649      	mov	r1, r9
 81015a2:	f7ff fa4a 	bl	8100a3a <cmox_FieldBN_CondNegate>
 81015a6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 81015a8:	4631      	mov	r1, r6
 81015aa:	4620      	mov	r0, r4
 81015ac:	f001 f811 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 81015b0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 81015b2:	4630      	mov	r0, r6
 81015b4:	f001 f91c 	bl	81027f0 <cmox_ECC_PointFromModularDomain>
 81015b8:	4604      	mov	r4, r0
 81015ba:	a902      	add	r1, sp, #8
 81015bc:	4630      	mov	r0, r6
 81015be:	f000 ffa5 	bl	810250c <cmox_ECC_FreePoint>
 81015c2:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 81015c6:	e007      	b.n	81015d8 <cmox_ScalarMul_SC+0x38c>
 81015c8:	6971      	ldr	r1, [r6, #20]
 81015ca:	eb01 028a 	add.w	r2, r1, sl, lsl #2
 81015ce:	1f11      	subs	r1, r2, #4
 81015d0:	f000 fd0b 	bl	8101fea <cmox_bn_free>
 81015d4:	f1aa 0a01 	sub.w	sl, sl, #1
 81015d8:	69f0      	ldr	r0, [r6, #28]
 81015da:	f1ba 0f00 	cmp.w	sl, #0
 81015de:	dcf3      	bgt.n	81015c8 <cmox_ScalarMul_SC+0x37c>
 81015e0:	69b1      	ldr	r1, [r6, #24]
 81015e2:	684a      	ldr	r2, [r1, #4]
 81015e4:	f106 0114 	add.w	r1, r6, #20
 81015e8:	6992      	ldr	r2, [r2, #24]
 81015ea:	0092      	lsls	r2, r2, #2
 81015ec:	f002 fdcf 	bl	810418e <cmox_membuf_free>
 81015f0:	4620      	mov	r0, r4
 81015f2:	b00d      	add	sp, #52	@ 0x34
 81015f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

081015f8 <cmox_ScalarMul_wMOF>:
 81015f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81015fc:	460e      	mov	r6, r1
 81015fe:	b099      	sub	sp, #100	@ 0x64
 8101600:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8101604:	4617      	mov	r7, r2
 8101606:	9112      	str	r1, [sp, #72]	@ 0x48
 8101608:	9111      	str	r1, [sp, #68]	@ 0x44
 810160a:	9110      	str	r1, [sp, #64]	@ 0x40
 810160c:	9101      	str	r1, [sp, #4]
 810160e:	2101      	movs	r1, #1
 8101610:	2200      	movs	r2, #0
 8101612:	4605      	mov	r5, r0
 8101614:	9117      	str	r1, [sp, #92]	@ 0x5c
 8101616:	9207      	str	r2, [sp, #28]
 8101618:	9206      	str	r2, [sp, #24]
 810161a:	69a9      	ldr	r1, [r5, #24]
 810161c:	461c      	mov	r4, r3
 810161e:	f04f 0902 	mov.w	r9, #2
 8101622:	6808      	ldr	r0, [r1, #0]
 8101624:	6802      	ldr	r2, [r0, #0]
 8101626:	6813      	ldr	r3, [r2, #0]
 8101628:	930a      	str	r3, [sp, #40]	@ 0x28
 810162a:	68ca      	ldr	r2, [r1, #12]
 810162c:	6813      	ldr	r3, [r2, #0]
 810162e:	9209      	str	r2, [sp, #36]	@ 0x24
 8101630:	f8df 263c 	ldr.w	r2, [pc, #1596]	@ 8101c70 <cmox_ScalarMul_wMOF+0x678>
 8101634:	9304      	str	r3, [sp, #16]
 8101636:	9804      	ldr	r0, [sp, #16]
 8101638:	1e40      	subs	r0, r0, #1
 810163a:	0840      	lsrs	r0, r0, #1
 810163c:	eb02 0380 	add.w	r3, r2, r0, lsl #2
 8101640:	1f1a      	subs	r2, r3, #4
 8101642:	920c      	str	r2, [sp, #48]	@ 0x30
 8101644:	f8df 262c 	ldr.w	r2, [pc, #1580]	@ 8101c74 <cmox_ScalarMul_wMOF+0x67c>
 8101648:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 810164c:	1f03      	subs	r3, r0, #4
 810164e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8101650:	6848      	ldr	r0, [r1, #4]
 8101652:	f8dd 8088 	ldr.w	r8, [sp, #136]	@ 0x88
 8101656:	69c1      	ldr	r1, [r0, #28]
 8101658:	4628      	mov	r0, r5
 810165a:	2902      	cmp	r1, #2
 810165c:	4641      	mov	r1, r8
 810165e:	bf08      	it	eq
 8101660:	f04f 0903 	moveq.w	r9, #3
 8101664:	f000 ffdc 	bl	8102620 <cmox_ECC_SetPointAtInfinity>
 8101668:	4641      	mov	r1, r8
 810166a:	4628      	mov	r0, r5
 810166c:	f001 f896 	bl	810279c <cmox_ECC_PointToModularDomain>
 8101670:	69a8      	ldr	r0, [r5, #24]
 8101672:	6800      	ldr	r0, [r0, #0]
 8101674:	9408      	str	r4, [sp, #32]
 8101676:	69c1      	ldr	r1, [r0, #28]
 8101678:	2901      	cmp	r1, #1
 810167a:	d010      	beq.n	810169e <cmox_ScalarMul_wMOF+0xa6>
 810167c:	6881      	ldr	r1, [r0, #8]
 810167e:	4630      	mov	r0, r6
 8101680:	f000 fd2b 	bl	81020da <cmox_bn_cmp>
 8101684:	2800      	cmp	r0, #0
 8101686:	d507      	bpl.n	8101698 <cmox_ScalarMul_wMOF+0xa0>
 8101688:	69a8      	ldr	r0, [r5, #24]
 810168a:	6801      	ldr	r1, [r0, #0]
 810168c:	9808      	ldr	r0, [sp, #32]
 810168e:	6889      	ldr	r1, [r1, #8]
 8101690:	f000 fd23 	bl	81020da <cmox_bn_cmp>
 8101694:	2800      	cmp	r0, #0
 8101696:	d402      	bmi.n	810169e <cmox_ScalarMul_wMOF+0xa6>
 8101698:	2001      	movs	r0, #1
 810169a:	9005      	str	r0, [sp, #20]
 810169c:	e2e3      	b.n	8101c66 <cmox_ScalarMul_wMOF+0x66e>
 810169e:	69a8      	ldr	r0, [r5, #24]
 81016a0:	6841      	ldr	r1, [r0, #4]
 81016a2:	69e8      	ldr	r0, [r5, #28]
 81016a4:	698a      	ldr	r2, [r1, #24]
 81016a6:	f105 0114 	add.w	r1, r5, #20
 81016aa:	0092      	lsls	r2, r2, #2
 81016ac:	f002 fd50 	bl	8104150 <cmox_membuf_alloc>
 81016b0:	9005      	str	r0, [sp, #20]
 81016b2:	2800      	cmp	r0, #0
 81016b4:	d1f2      	bne.n	810169c <cmox_ScalarMul_wMOF+0xa4>
 81016b6:	2400      	movs	r4, #0
 81016b8:	e00c      	b.n	81016d4 <cmox_ScalarMul_wMOF+0xdc>
 81016ba:	6809      	ldr	r1, [r1, #0]
 81016bc:	680a      	ldr	r2, [r1, #0]
 81016be:	6969      	ldr	r1, [r5, #20]
 81016c0:	6812      	ldr	r2, [r2, #0]
 81016c2:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 81016c6:	f000 fc85 	bl	8101fd4 <cmox_bn_alloc>
 81016ca:	9005      	str	r0, [sp, #20]
 81016cc:	2800      	cmp	r0, #0
 81016ce:	f040 82bf 	bne.w	8101c50 <cmox_ScalarMul_wMOF+0x658>
 81016d2:	1c64      	adds	r4, r4, #1
 81016d4:	69a9      	ldr	r1, [r5, #24]
 81016d6:	69e8      	ldr	r0, [r5, #28]
 81016d8:	684a      	ldr	r2, [r1, #4]
 81016da:	6993      	ldr	r3, [r2, #24]
 81016dc:	429c      	cmp	r4, r3
 81016de:	d3ec      	bcc.n	81016ba <cmox_ScalarMul_wMOF+0xc2>
 81016e0:	9b04      	ldr	r3, [sp, #16]
 81016e2:	2201      	movs	r2, #1
 81016e4:	46a3      	mov	fp, r4
 81016e6:	1e99      	subs	r1, r3, #2
 81016e8:	408a      	lsls	r2, r1
 81016ea:	0092      	lsls	r2, r2, #2
 81016ec:	9215      	str	r2, [sp, #84]	@ 0x54
 81016ee:	a902      	add	r1, sp, #8
 81016f0:	f002 fd2e 	bl	8104150 <cmox_membuf_alloc>
 81016f4:	9005      	str	r0, [sp, #20]
 81016f6:	2800      	cmp	r0, #0
 81016f8:	f040 82a1 	bne.w	8101c3e <cmox_ScalarMul_wMOF+0x646>
 81016fc:	9904      	ldr	r1, [sp, #16]
 81016fe:	2001      	movs	r0, #1
 8101700:	2400      	movs	r4, #0
 8101702:	1e89      	subs	r1, r1, #2
 8101704:	fa00 fa01 	lsl.w	sl, r0, r1
 8101708:	e010      	b.n	810172c <cmox_ScalarMul_wMOF+0x134>
 810170a:	9802      	ldr	r0, [sp, #8]
 810170c:	eb00 0184 	add.w	r1, r0, r4, lsl #2
 8101710:	4628      	mov	r0, r5
 8101712:	f000 fe9f 	bl	8102454 <cmox_ECC_AllocPoint>
 8101716:	9005      	str	r0, [sp, #20]
 8101718:	2800      	cmp	r0, #0
 810171a:	f040 8289 	bne.w	8101c30 <cmox_ScalarMul_wMOF+0x638>
 810171e:	9802      	ldr	r0, [sp, #8]
 8101720:	f850 1024 	ldr.w	r1, [r0, r4, lsl #2]
 8101724:	4628      	mov	r0, r5
 8101726:	1c64      	adds	r4, r4, #1
 8101728:	f000 ff7a 	bl	8102620 <cmox_ECC_SetPointAtInfinity>
 810172c:	4554      	cmp	r4, sl
 810172e:	d3ec      	bcc.n	810170a <cmox_ScalarMul_wMOF+0x112>
 8101730:	9503      	str	r5, [sp, #12]
 8101732:	9418      	str	r4, [sp, #96]	@ 0x60
 8101734:	463c      	mov	r4, r7
 8101736:	7c20      	ldrb	r0, [r4, #16]
 8101738:	2100      	movs	r1, #0
 810173a:	f000 0004 	and.w	r0, r0, #4
 810173e:	f7ff fa45 	bl	8100bcc <cmox_mathUtils_neq>
 8101742:	b920      	cbnz	r0, 810174e <cmox_ScalarMul_wMOF+0x156>
 8101744:	9017      	str	r0, [sp, #92]	@ 0x5c
 8101746:	9803      	ldr	r0, [sp, #12]
 8101748:	4621      	mov	r1, r4
 810174a:	f001 f827 	bl	810279c <cmox_ECC_PointToModularDomain>
 810174e:	9803      	ldr	r0, [sp, #12]
 8101750:	4621      	mov	r1, r4
 8101752:	f001 f87b 	bl	810284c <cmox_ECC_PointValidation>
 8101756:	9005      	str	r0, [sp, #20]
 8101758:	2800      	cmp	r0, #0
 810175a:	f040 825e 	bne.w	8101c1a <cmox_ScalarMul_wMOF+0x622>
 810175e:	9803      	ldr	r0, [sp, #12]
 8101760:	9f02      	ldr	r7, [sp, #8]
 8101762:	2301      	movs	r3, #1
 8101764:	6985      	ldr	r5, [r0, #24]
 8101766:	683a      	ldr	r2, [r7, #0]
 8101768:	4621      	mov	r1, r4
 810176a:	686d      	ldr	r5, [r5, #4]
 810176c:	68ef      	ldr	r7, [r5, #12]
 810176e:	47b8      	blx	r7
 8101770:	9902      	ldr	r1, [sp, #8]
 8101772:	2000      	movs	r0, #0
 8101774:	9000      	str	r0, [sp, #0]
 8101776:	9803      	ldr	r0, [sp, #12]
 8101778:	684b      	ldr	r3, [r1, #4]
 810177a:	6809      	ldr	r1, [r1, #0]
 810177c:	6985      	ldr	r5, [r0, #24]
 810177e:	4622      	mov	r2, r4
 8101780:	686d      	ldr	r5, [r5, #4]
 8101782:	692f      	ldr	r7, [r5, #16]
 8101784:	2502      	movs	r5, #2
 8101786:	47b8      	blx	r7
 8101788:	9f03      	ldr	r7, [sp, #12]
 810178a:	e010      	b.n	81017ae <cmox_ScalarMul_wMOF+0x1b6>
 810178c:	f8d7 c018 	ldr.w	ip, [r7, #24]
 8101790:	9802      	ldr	r0, [sp, #8]
 8101792:	f8dc e004 	ldr.w	lr, [ip, #4]
 8101796:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 810179a:	6802      	ldr	r2, [r0, #0]
 810179c:	eb00 0085 	add.w	r0, r0, r5, lsl #2
 81017a0:	f8de c014 	ldr.w	ip, [lr, #20]
 81017a4:	f850 1c04 	ldr.w	r1, [r0, #-4]
 81017a8:	4638      	mov	r0, r7
 81017aa:	1c6d      	adds	r5, r5, #1
 81017ac:	47e0      	blx	ip
 81017ae:	2001      	movs	r0, #1
 81017b0:	900e      	str	r0, [sp, #56]	@ 0x38
 81017b2:	4555      	cmp	r5, sl
 81017b4:	d3ea      	bcc.n	810178c <cmox_ScalarMul_wMOF+0x194>
 81017b6:	9808      	ldr	r0, [sp, #32]
 81017b8:	f000 fce6 	bl	8102188 <cmox_bn_countBits>
 81017bc:	4605      	mov	r5, r0
 81017be:	4630      	mov	r0, r6
 81017c0:	f000 fce2 	bl	8102188 <cmox_bn_countBits>
 81017c4:	4285      	cmp	r5, r0
 81017c6:	bf2c      	ite	cs
 81017c8:	9808      	ldrcs	r0, [sp, #32]
 81017ca:	4630      	movcc	r0, r6
 81017cc:	f000 fcdc 	bl	8102188 <cmox_bn_countBits>
 81017d0:	960d      	str	r6, [sp, #52]	@ 0x34
 81017d2:	940f      	str	r4, [sp, #60]	@ 0x3c
 81017d4:	9d01      	ldr	r5, [sp, #4]
 81017d6:	f8cd 9058 	str.w	r9, [sp, #88]	@ 0x58
 81017da:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 81017dc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 81017de:	f8dd a040 	ldr.w	sl, [sp, #64]	@ 0x40
 81017e2:	4681      	mov	r9, r0
 81017e4:	e075      	b.n	81018d2 <cmox_ScalarMul_wMOF+0x2da>
 81017e6:	f8dd c030 	ldr.w	ip, [sp, #48]	@ 0x30
 81017ea:	9a03      	ldr	r2, [sp, #12]
 81017ec:	9806      	ldr	r0, [sp, #24]
 81017ee:	9101      	str	r1, [sp, #4]
 81017f0:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 81017f2:	1a10      	subs	r0, r2, r0
 81017f4:	f1a0 0e01 	sub.w	lr, r0, #1
 81017f8:	ea4f 0ede 	mov.w	lr, lr, lsr #3
 81017fc:	1e40      	subs	r0, r0, #1
 81017fe:	0080      	lsls	r0, r0, #2
 8101800:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8101802:	f000 001c 	and.w	r0, r0, #28
 8101806:	2106      	movs	r1, #6
 8101808:	9100      	str	r1, [sp, #0]
 810180a:	f85c c02e 	ldr.w	ip, [ip, lr, lsl #2]
 810180e:	1d13      	adds	r3, r2, #4
 8101810:	1d11      	adds	r1, r2, #4
 8101812:	fa2c f000 	lsr.w	r0, ip, r0
 8101816:	f000 000f 	and.w	r0, r0, #15
 810181a:	4346      	muls	r6, r0
 810181c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 810181e:	2001      	movs	r0, #1
 8101820:	1c76      	adds	r6, r6, #1
 8101822:	4372      	muls	r2, r6
 8101824:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 8101828:	990a      	ldr	r1, [sp, #40]	@ 0x28
 810182a:	f000 ff3a 	bl	81026a2 <cmox_ECC_CondImportPoint>
 810182e:	9802      	ldr	r0, [sp, #8]
 8101830:	4639      	mov	r1, r7
 8101832:	6802      	ldr	r2, [r0, #0]
 8101834:	2001      	movs	r0, #1
 8101836:	f000 fecc 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 810183a:	e03a      	b.n	81018b2 <cmox_ScalarMul_wMOF+0x2ba>
 810183c:	9903      	ldr	r1, [sp, #12]
 810183e:	1a08      	subs	r0, r1, r0
 8101840:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8101842:	1e42      	subs	r2, r0, #1
 8101844:	08d2      	lsrs	r2, r2, #3
 8101846:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
 810184a:	1e40      	subs	r0, r0, #1
 810184c:	0080      	lsls	r0, r0, #2
 810184e:	f000 001c 	and.w	r0, r0, #28
 8101852:	40c5      	lsrs	r5, r0
 8101854:	f89d 6002 	ldrb.w	r6, [sp, #2]
 8101858:	f005 050f 	and.w	r5, r5, #15
 810185c:	1b76      	subs	r6, r6, r5
 810185e:	b276      	sxtb	r6, r6
 8101860:	bbae      	cbnz	r6, 81018ce <cmox_ScalarMul_wMOF+0x2d6>
 8101862:	9802      	ldr	r0, [sp, #8]
 8101864:	9a06      	ldr	r2, [sp, #24]
 8101866:	6801      	ldr	r1, [r0, #0]
 8101868:	9801      	ldr	r0, [sp, #4]
 810186a:	4282      	cmp	r2, r0
 810186c:	dabb      	bge.n	81017e6 <cmox_ScalarMul_wMOF+0x1ee>
 810186e:	f8dd c018 	ldr.w	ip, [sp, #24]
 8101872:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8101874:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8101876:	ea4f 0cdc 	mov.w	ip, ip, lsr #3
 810187a:	9101      	str	r1, [sp, #4]
 810187c:	2106      	movs	r1, #6
 810187e:	9100      	str	r1, [sp, #0]
 8101880:	f856 602c 	ldr.w	r6, [r6, ip, lsl #2]
 8101884:	f8dd c018 	ldr.w	ip, [sp, #24]
 8101888:	990a      	ldr	r1, [sp, #40]	@ 0x28
 810188a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 810188c:	ea4f 0e8c 	mov.w	lr, ip, lsl #2
 8101890:	f00e 0e1c 	and.w	lr, lr, #28
 8101894:	fa26 f60e 	lsr.w	r6, r6, lr
 8101898:	f006 060f 	and.w	r6, r6, #15
 810189c:	4372      	muls	r2, r6
 810189e:	1d03      	adds	r3, r0, #4
 81018a0:	1d00      	adds	r0, r0, #4
 81018a2:	1c52      	adds	r2, r2, #1
 81018a4:	4351      	muls	r1, r2
 81018a6:	eb00 0281 	add.w	r2, r0, r1, lsl #2
 81018aa:	990a      	ldr	r1, [sp, #40]	@ 0x28
 81018ac:	2001      	movs	r0, #1
 81018ae:	f000 fef8 	bl	81026a2 <cmox_ECC_CondImportPoint>
 81018b2:	9902      	ldr	r1, [sp, #8]
 81018b4:	2000      	movs	r0, #0
 81018b6:	9000      	str	r0, [sp, #0]
 81018b8:	69be      	ldr	r6, [r7, #24]
 81018ba:	680a      	ldr	r2, [r1, #0]
 81018bc:	4643      	mov	r3, r8
 81018be:	f8d6 c004 	ldr.w	ip, [r6, #4]
 81018c2:	4641      	mov	r1, r8
 81018c4:	4638      	mov	r0, r7
 81018c6:	f8dc 6010 	ldr.w	r6, [ip, #16]
 81018ca:	47b0      	blx	r6
 81018cc:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 81018ce:	f1a9 0901 	sub.w	r9, r9, #1
 81018d2:	f1b9 0f00 	cmp.w	r9, #0
 81018d6:	bfd8      	it	le
 81018d8:	2c00      	cmple	r4, #0
 81018da:	dc06      	bgt.n	81018ea <cmox_ScalarMul_wMOF+0x2f2>
 81018dc:	f1ba 0f00 	cmp.w	sl, #0
 81018e0:	bfdc      	itt	le
 81018e2:	2e00      	cmple	r6, #0
 81018e4:	2d00      	cmple	r5, #0
 81018e6:	f340 813c 	ble.w	8101b62 <cmox_ScalarMul_wMOF+0x56a>
 81018ea:	f1b9 0f00 	cmp.w	r9, #0
 81018ee:	d40a      	bmi.n	8101906 <cmox_ScalarMul_wMOF+0x30e>
 81018f0:	f8d7 c018 	ldr.w	ip, [r7, #24]
 81018f4:	2301      	movs	r3, #1
 81018f6:	4642      	mov	r2, r8
 81018f8:	f8dc e004 	ldr.w	lr, [ip, #4]
 81018fc:	4641      	mov	r1, r8
 81018fe:	4638      	mov	r0, r7
 8101900:	f8de c00c 	ldr.w	ip, [lr, #12]
 8101904:	47e0      	blx	ip
 8101906:	2c00      	cmp	r4, #0
 8101908:	dd02      	ble.n	8101910 <cmox_ScalarMul_wMOF+0x318>
 810190a:	1e64      	subs	r4, r4, #1
 810190c:	b264      	sxtb	r4, r4
 810190e:	e006      	b.n	810191e <cmox_ScalarMul_wMOF+0x326>
 8101910:	f1ba 0f00 	cmp.w	sl, #0
 8101914:	bfc4      	itt	gt
 8101916:	f1aa 0001 	subgt.w	r0, sl, #1
 810191a:	fa4f fa80 	sxtbgt.w	sl, r0
 810191e:	2e00      	cmp	r6, #0
 8101920:	dd02      	ble.n	8101928 <cmox_ScalarMul_wMOF+0x330>
 8101922:	1e76      	subs	r6, r6, #1
 8101924:	b276      	sxtb	r6, r6
 8101926:	e003      	b.n	8101930 <cmox_ScalarMul_wMOF+0x338>
 8101928:	2d00      	cmp	r5, #0
 810192a:	bfc4      	itt	gt
 810192c:	1e6d      	subgt	r5, r5, #1
 810192e:	b26d      	sxtbgt	r5, r5
 8101930:	9904      	ldr	r1, [sp, #16]
 8101932:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8101934:	1c49      	adds	r1, r1, #1
 8101936:	4088      	lsls	r0, r1
 8101938:	1e40      	subs	r0, r0, #1
 810193a:	f88d 0003 	strb.w	r0, [sp, #3]
 810193e:	9804      	ldr	r0, [sp, #16]
 8101940:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8101942:	1e42      	subs	r2, r0, #1
 8101944:	9804      	ldr	r0, [sp, #16]
 8101946:	4091      	lsls	r1, r2
 8101948:	9101      	str	r1, [sp, #4]
 810194a:	1e41      	subs	r1, r0, #1
 810194c:	f88d 1002 	strb.w	r1, [sp, #2]
 8101950:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8101952:	9904      	ldr	r1, [sp, #16]
 8101954:	9a04      	ldr	r2, [sp, #16]
 8101956:	4088      	lsls	r0, r1
 8101958:	9904      	ldr	r1, [sp, #16]
 810195a:	9003      	str	r0, [sp, #12]
 810195c:	eba2 0209 	sub.w	r2, r2, r9
 8101960:	eba9 0101 	sub.w	r1, r9, r1
 8101964:	9114      	str	r1, [sp, #80]	@ 0x50
 8101966:	9904      	ldr	r1, [sp, #16]
 8101968:	f88d 2001 	strb.w	r2, [sp, #1]
 810196c:	9804      	ldr	r0, [sp, #16]
 810196e:	eba9 0101 	sub.w	r1, r9, r1
 8101972:	f1c9 0201 	rsb	r2, r9, #1
 8101976:	9112      	str	r1, [sp, #72]	@ 0x48
 8101978:	f88d 2000 	strb.w	r2, [sp]
 810197c:	1c40      	adds	r0, r0, #1
 810197e:	2c00      	cmp	r4, #0
 8101980:	f1a9 0101 	sub.w	r1, r9, #1
 8101984:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8101988:	9013      	str	r0, [sp, #76]	@ 0x4c
 810198a:	bfc8      	it	gt
 810198c:	f1ba 0f00 	cmpgt.w	sl, #0
 8101990:	9111      	str	r1, [sp, #68]	@ 0x44
 8101992:	9210      	str	r2, [sp, #64]	@ 0x40
 8101994:	dc56      	bgt.n	8101a44 <cmox_ScalarMul_wMOF+0x44c>
 8101996:	f1b9 0f00 	cmp.w	r9, #0
 810199a:	dd06      	ble.n	81019aa <cmox_ScalarMul_wMOF+0x3b2>
 810199c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 810199e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 81019a0:	2102      	movs	r1, #2
 81019a2:	f000 fc0a 	bl	81021ba <cmox_bn_getBits>
 81019a6:	b2c0      	uxtb	r0, r0
 81019a8:	e007      	b.n	81019ba <cmox_ScalarMul_wMOF+0x3c2>
 81019aa:	980d      	ldr	r0, [sp, #52]	@ 0x34
 81019ac:	6841      	ldr	r1, [r0, #4]
 81019ae:	f89d 0000 	ldrb.w	r0, [sp]
 81019b2:	fa01 f000 	lsl.w	r0, r1, r0
 81019b6:	f000 0003 	and.w	r0, r0, #3
 81019ba:	2c00      	cmp	r4, #0
 81019bc:	d541      	bpl.n	8101a42 <cmox_ScalarMul_wMOF+0x44a>
 81019be:	f1ba 0f00 	cmp.w	sl, #0
 81019c2:	dc3f      	bgt.n	8101a44 <cmox_ScalarMul_wMOF+0x44c>
 81019c4:	f000 0101 	and.w	r1, r0, #1
 81019c8:	ea91 0f60 	teq	r1, r0, asr #1
 81019cc:	f000 8082 	beq.w	8101ad4 <cmox_ScalarMul_wMOF+0x4dc>
 81019d0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 81019d2:	2800      	cmp	r0, #0
 81019d4:	d405      	bmi.n	81019e2 <cmox_ScalarMul_wMOF+0x3ea>
 81019d6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 81019d8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 81019da:	980d      	ldr	r0, [sp, #52]	@ 0x34
 81019dc:	f000 fbed 	bl	81021ba <cmox_bn_getBits>
 81019e0:	e008      	b.n	81019f4 <cmox_ScalarMul_wMOF+0x3fc>
 81019e2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 81019e4:	6841      	ldr	r1, [r0, #4]
 81019e6:	f89d 0001 	ldrb.w	r0, [sp, #1]
 81019ea:	fa01 f000 	lsl.w	r0, r1, r0
 81019ee:	f89d 1003 	ldrb.w	r1, [sp, #3]
 81019f2:	4008      	ands	r0, r1
 81019f4:	9a01      	ldr	r2, [sp, #4]
 81019f6:	9901      	ldr	r1, [sp, #4]
 81019f8:	1a80      	subs	r0, r0, r2
 81019fa:	b2c0      	uxtb	r0, r0
 81019fc:	9007      	str	r0, [sp, #28]
 81019fe:	4288      	cmp	r0, r1
 8101a00:	da0b      	bge.n	8101a1a <cmox_ScalarMul_wMOF+0x422>
 8101a02:	9907      	ldr	r1, [sp, #28]
 8101a04:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8101a06:	08c9      	lsrs	r1, r1, #3
 8101a08:	f850 2021 	ldr.w	r2, [r0, r1, lsl #2]
 8101a0c:	9807      	ldr	r0, [sp, #28]
 8101a0e:	0081      	lsls	r1, r0, #2
 8101a10:	f001 011c 	and.w	r1, r1, #28
 8101a14:	fa22 f001 	lsr.w	r0, r2, r1
 8101a18:	e00c      	b.n	8101a34 <cmox_ScalarMul_wMOF+0x43c>
 8101a1a:	9903      	ldr	r1, [sp, #12]
 8101a1c:	1a08      	subs	r0, r1, r0
 8101a1e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8101a20:	1e42      	subs	r2, r0, #1
 8101a22:	08d2      	lsrs	r2, r2, #3
 8101a24:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8101a28:	1e40      	subs	r0, r0, #1
 8101a2a:	0080      	lsls	r0, r0, #2
 8101a2c:	f000 001c 	and.w	r0, r0, #28
 8101a30:	fa21 f000 	lsr.w	r0, r1, r0
 8101a34:	f89d 4002 	ldrb.w	r4, [sp, #2]
 8101a38:	f000 0a0f 	and.w	sl, r0, #15
 8101a3c:	eba4 040a 	sub.w	r4, r4, sl
 8101a40:	b264      	sxtb	r4, r4
 8101a42:	2c00      	cmp	r4, #0
 8101a44:	d146      	bne.n	8101ad4 <cmox_ScalarMul_wMOF+0x4dc>
 8101a46:	9807      	ldr	r0, [sp, #28]
 8101a48:	9901      	ldr	r1, [sp, #4]
 8101a4a:	4288      	cmp	r0, r1
 8101a4c:	da18      	bge.n	8101a80 <cmox_ScalarMul_wMOF+0x488>
 8101a4e:	9907      	ldr	r1, [sp, #28]
 8101a50:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8101a52:	4643      	mov	r3, r8
 8101a54:	08c9      	lsrs	r1, r1, #3
 8101a56:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8101a5a:	9907      	ldr	r1, [sp, #28]
 8101a5c:	008a      	lsls	r2, r1, #2
 8101a5e:	69b9      	ldr	r1, [r7, #24]
 8101a60:	f002 021c 	and.w	r2, r2, #28
 8101a64:	40d0      	lsrs	r0, r2
 8101a66:	684a      	ldr	r2, [r1, #4]
 8101a68:	f010 000f 	ands.w	r0, r0, #15
 8101a6c:	6954      	ldr	r4, [r2, #20]
 8101a6e:	d101      	bne.n	8101a74 <cmox_ScalarMul_wMOF+0x47c>
 8101a70:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8101a72:	e002      	b.n	8101a7a <cmox_ScalarMul_wMOF+0x482>
 8101a74:	9902      	ldr	r1, [sp, #8]
 8101a76:	f851 2020 	ldr.w	r2, [r1, r0, lsl #2]
 8101a7a:	4641      	mov	r1, r8
 8101a7c:	4638      	mov	r0, r7
 8101a7e:	e027      	b.n	8101ad0 <cmox_ScalarMul_wMOF+0x4d8>
 8101a80:	9803      	ldr	r0, [sp, #12]
 8101a82:	9907      	ldr	r1, [sp, #28]
 8101a84:	1a41      	subs	r1, r0, r1
 8101a86:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8101a88:	1e4a      	subs	r2, r1, #1
 8101a8a:	08d2      	lsrs	r2, r2, #3
 8101a8c:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8101a90:	1e49      	subs	r1, r1, #1
 8101a92:	0089      	lsls	r1, r1, #2
 8101a94:	f001 011c 	and.w	r1, r1, #28
 8101a98:	40c8      	lsrs	r0, r1
 8101a9a:	9902      	ldr	r1, [sp, #8]
 8101a9c:	f010 000f 	ands.w	r0, r0, #15
 8101aa0:	680a      	ldr	r2, [r1, #0]
 8101aa2:	bf0c      	ite	eq
 8101aa4:	990f      	ldreq	r1, [sp, #60]	@ 0x3c
 8101aa6:	f851 1020 	ldrne.w	r1, [r1, r0, lsl #2]
 8101aaa:	2001      	movs	r0, #1
 8101aac:	f000 fd5e 	bl	810256c <cmox_ECC_CondCopyPoint>
 8101ab0:	9802      	ldr	r0, [sp, #8]
 8101ab2:	4639      	mov	r1, r7
 8101ab4:	6802      	ldr	r2, [r0, #0]
 8101ab6:	2001      	movs	r0, #1
 8101ab8:	f000 fd8b 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101abc:	69bc      	ldr	r4, [r7, #24]
 8101abe:	9802      	ldr	r0, [sp, #8]
 8101ac0:	4643      	mov	r3, r8
 8101ac2:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8101ac6:	6802      	ldr	r2, [r0, #0]
 8101ac8:	4641      	mov	r1, r8
 8101aca:	4638      	mov	r0, r7
 8101acc:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8101ad0:	47a0      	blx	r4
 8101ad2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8101ad4:	2e00      	cmp	r6, #0
 8101ad6:	bfc8      	it	gt
 8101ad8:	2d00      	cmpgt	r5, #0
 8101ada:	dc15      	bgt.n	8101b08 <cmox_ScalarMul_wMOF+0x510>
 8101adc:	f1b9 0f00 	cmp.w	r9, #0
 8101ae0:	dd06      	ble.n	8101af0 <cmox_ScalarMul_wMOF+0x4f8>
 8101ae2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8101ae4:	9808      	ldr	r0, [sp, #32]
 8101ae6:	2102      	movs	r1, #2
 8101ae8:	f000 fb67 	bl	81021ba <cmox_bn_getBits>
 8101aec:	b2c0      	uxtb	r0, r0
 8101aee:	e007      	b.n	8101b00 <cmox_ScalarMul_wMOF+0x508>
 8101af0:	9808      	ldr	r0, [sp, #32]
 8101af2:	6841      	ldr	r1, [r0, #4]
 8101af4:	f89d 0000 	ldrb.w	r0, [sp]
 8101af8:	fa01 f000 	lsl.w	r0, r1, r0
 8101afc:	f000 0003 	and.w	r0, r0, #3
 8101b00:	2e00      	cmp	r6, #0
 8101b02:	f57f aead 	bpl.w	8101860 <cmox_ScalarMul_wMOF+0x268>
 8101b06:	2d00      	cmp	r5, #0
 8101b08:	f73f aee1 	bgt.w	81018ce <cmox_ScalarMul_wMOF+0x2d6>
 8101b0c:	f000 0101 	and.w	r1, r0, #1
 8101b10:	ea91 0f60 	teq	r1, r0, asr #1
 8101b14:	f43f aedb 	beq.w	81018ce <cmox_ScalarMul_wMOF+0x2d6>
 8101b18:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8101b1a:	2800      	cmp	r0, #0
 8101b1c:	d405      	bmi.n	8101b2a <cmox_ScalarMul_wMOF+0x532>
 8101b1e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8101b20:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8101b22:	9808      	ldr	r0, [sp, #32]
 8101b24:	f000 fb49 	bl	81021ba <cmox_bn_getBits>
 8101b28:	e008      	b.n	8101b3c <cmox_ScalarMul_wMOF+0x544>
 8101b2a:	9808      	ldr	r0, [sp, #32]
 8101b2c:	6841      	ldr	r1, [r0, #4]
 8101b2e:	f89d 0001 	ldrb.w	r0, [sp, #1]
 8101b32:	fa01 f000 	lsl.w	r0, r1, r0
 8101b36:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8101b3a:	4008      	ands	r0, r1
 8101b3c:	9a01      	ldr	r2, [sp, #4]
 8101b3e:	9901      	ldr	r1, [sp, #4]
 8101b40:	1a80      	subs	r0, r0, r2
 8101b42:	b2c0      	uxtb	r0, r0
 8101b44:	9006      	str	r0, [sp, #24]
 8101b46:	4288      	cmp	r0, r1
 8101b48:	f6bf ae78 	bge.w	810183c <cmox_ScalarMul_wMOF+0x244>
 8101b4c:	9906      	ldr	r1, [sp, #24]
 8101b4e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8101b50:	08c9      	lsrs	r1, r1, #3
 8101b52:	f850 5021 	ldr.w	r5, [r0, r1, lsl #2]
 8101b56:	9806      	ldr	r0, [sp, #24]
 8101b58:	0081      	lsls	r1, r0, #2
 8101b5a:	f001 011c 	and.w	r1, r1, #28
 8101b5e:	40cd      	lsrs	r5, r1
 8101b60:	e678      	b.n	8101854 <cmox_ScalarMul_wMOF+0x25c>
 8101b62:	9703      	str	r7, [sp, #12]
 8101b64:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8101b66:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
 8101b68:	9f08      	ldr	r7, [sp, #32]
 8101b6a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8101b6e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8101b70:	f1b9 0f00 	cmp.w	r9, #0
 8101b74:	d146      	bne.n	8101c04 <cmox_ScalarMul_wMOF+0x60c>
 8101b76:	9803      	ldr	r0, [sp, #12]
 8101b78:	2301      	movs	r3, #1
 8101b7a:	4642      	mov	r2, r8
 8101b7c:	f8d0 e018 	ldr.w	lr, [r0, #24]
 8101b80:	4641      	mov	r1, r8
 8101b82:	f8de 9004 	ldr.w	r9, [lr, #4]
 8101b86:	f8d9 c00c 	ldr.w	ip, [r9, #12]
 8101b8a:	47e0      	blx	ip
 8101b8c:	7920      	ldrb	r0, [r4, #4]
 8101b8e:	07c1      	lsls	r1, r0, #31
 8101b90:	d517      	bpl.n	8101bc2 <cmox_ScalarMul_wMOF+0x5ca>
 8101b92:	9802      	ldr	r0, [sp, #8]
 8101b94:	4631      	mov	r1, r6
 8101b96:	6802      	ldr	r2, [r0, #0]
 8101b98:	2001      	movs	r0, #1
 8101b9a:	f000 fce7 	bl	810256c <cmox_ECC_CondCopyPoint>
 8101b9e:	9802      	ldr	r0, [sp, #8]
 8101ba0:	9903      	ldr	r1, [sp, #12]
 8101ba2:	6802      	ldr	r2, [r0, #0]
 8101ba4:	2001      	movs	r0, #1
 8101ba6:	f000 fd14 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101baa:	9803      	ldr	r0, [sp, #12]
 8101bac:	9a02      	ldr	r2, [sp, #8]
 8101bae:	4643      	mov	r3, r8
 8101bb0:	f8d0 c018 	ldr.w	ip, [r0, #24]
 8101bb4:	6812      	ldr	r2, [r2, #0]
 8101bb6:	4641      	mov	r1, r8
 8101bb8:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8101bbc:	f8d4 c014 	ldr.w	ip, [r4, #20]
 8101bc0:	47e0      	blx	ip
 8101bc2:	7938      	ldrb	r0, [r7, #4]
 8101bc4:	07c1      	lsls	r1, r0, #31
 8101bc6:	d51d      	bpl.n	8101c04 <cmox_ScalarMul_wMOF+0x60c>
 8101bc8:	9802      	ldr	r0, [sp, #8]
 8101bca:	2206      	movs	r2, #6
 8101bcc:	1d2b      	adds	r3, r5, #4
 8101bce:	6801      	ldr	r1, [r0, #0]
 8101bd0:	9200      	str	r2, [sp, #0]
 8101bd2:	1d28      	adds	r0, r5, #4
 8101bd4:	9101      	str	r1, [sp, #4]
 8101bd6:	eb00 028a 	add.w	r2, r0, sl, lsl #2
 8101bda:	4651      	mov	r1, sl
 8101bdc:	2001      	movs	r0, #1
 8101bde:	f000 fd60 	bl	81026a2 <cmox_ECC_CondImportPoint>
 8101be2:	9802      	ldr	r0, [sp, #8]
 8101be4:	9903      	ldr	r1, [sp, #12]
 8101be6:	6802      	ldr	r2, [r0, #0]
 8101be8:	2001      	movs	r0, #1
 8101bea:	f000 fcf2 	bl	81025d2 <cmox_ECC_CondSymmetricPoint>
 8101bee:	9902      	ldr	r1, [sp, #8]
 8101bf0:	2000      	movs	r0, #0
 8101bf2:	9000      	str	r0, [sp, #0]
 8101bf4:	9803      	ldr	r0, [sp, #12]
 8101bf6:	680a      	ldr	r2, [r1, #0]
 8101bf8:	4643      	mov	r3, r8
 8101bfa:	6987      	ldr	r7, [r0, #24]
 8101bfc:	4641      	mov	r1, r8
 8101bfe:	687c      	ldr	r4, [r7, #4]
 8101c00:	6927      	ldr	r7, [r4, #16]
 8101c02:	47b8      	blx	r7
 8101c04:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8101c06:	b940      	cbnz	r0, 8101c1a <cmox_ScalarMul_wMOF+0x622>
 8101c08:	9803      	ldr	r0, [sp, #12]
 8101c0a:	4631      	mov	r1, r6
 8101c0c:	f000 fdf0 	bl	81027f0 <cmox_ECC_PointFromModularDomain>
 8101c10:	9005      	str	r0, [sp, #20]
 8101c12:	9803      	ldr	r0, [sp, #12]
 8101c14:	4641      	mov	r1, r8
 8101c16:	f000 fdeb 	bl	81027f0 <cmox_ECC_PointFromModularDomain>
 8101c1a:	9d03      	ldr	r5, [sp, #12]
 8101c1c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8101c1e:	e007      	b.n	8101c30 <cmox_ScalarMul_wMOF+0x638>
 8101c20:	9802      	ldr	r0, [sp, #8]
 8101c22:	eb00 0184 	add.w	r1, r0, r4, lsl #2
 8101c26:	1f09      	subs	r1, r1, #4
 8101c28:	4628      	mov	r0, r5
 8101c2a:	f000 fc6f 	bl	810250c <cmox_ECC_FreePoint>
 8101c2e:	1e64      	subs	r4, r4, #1
 8101c30:	2c00      	cmp	r4, #0
 8101c32:	d1f5      	bne.n	8101c20 <cmox_ScalarMul_wMOF+0x628>
 8101c34:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8101c36:	69e8      	ldr	r0, [r5, #28]
 8101c38:	a902      	add	r1, sp, #8
 8101c3a:	f002 faa8 	bl	810418e <cmox_membuf_free>
 8101c3e:	465c      	mov	r4, fp
 8101c40:	e006      	b.n	8101c50 <cmox_ScalarMul_wMOF+0x658>
 8101c42:	6969      	ldr	r1, [r5, #20]
 8101c44:	eb01 0284 	add.w	r2, r1, r4, lsl #2
 8101c48:	1f11      	subs	r1, r2, #4
 8101c4a:	f000 f9ce 	bl	8101fea <cmox_bn_free>
 8101c4e:	1e64      	subs	r4, r4, #1
 8101c50:	69e8      	ldr	r0, [r5, #28]
 8101c52:	2c00      	cmp	r4, #0
 8101c54:	d1f5      	bne.n	8101c42 <cmox_ScalarMul_wMOF+0x64a>
 8101c56:	69a9      	ldr	r1, [r5, #24]
 8101c58:	684a      	ldr	r2, [r1, #4]
 8101c5a:	f105 0114 	add.w	r1, r5, #20
 8101c5e:	6992      	ldr	r2, [r2, #24]
 8101c60:	0092      	lsls	r2, r2, #2
 8101c62:	f002 fa94 	bl	810418e <cmox_membuf_free>
 8101c66:	9805      	ldr	r0, [sp, #20]
 8101c68:	b019      	add	sp, #100	@ 0x64
 8101c6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8101c6e:	bf00      	nop
 8101c70:	08101c78 	.word	0x08101c78
 8101c74:	08101c84 	.word	0x08101c84

08101c78 <cmox_ScalarMul_wMOF::T_Pi>:
 8101c78:	00000110 15522440 07733661              ....@$R.a6s.

08101c84 <cmox_ScalarMul_wMOF::T_DblAfter>:
 8101c84:	00002001 20011003 40011002              . ..... ...@

08101c90 <cmox_ScalarMul_wNAFRecoding>:
 8101c90:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8101c94:	4681      	mov	r9, r0
 8101c96:	2000      	movs	r0, #0
 8101c98:	460f      	mov	r7, r1
 8101c9a:	4692      	mov	sl, r2
 8101c9c:	9000      	str	r0, [sp, #0]
 8101c9e:	683a      	ldr	r2, [r7, #0]
 8101ca0:	461e      	mov	r6, r3
 8101ca2:	4669      	mov	r1, sp
 8101ca4:	4648      	mov	r0, r9
 8101ca6:	2500      	movs	r5, #0
 8101ca8:	f000 f994 	bl	8101fd4 <cmox_bn_alloc>
 8101cac:	ea5f 0800 	movs.w	r8, r0
 8101cb0:	d138      	bne.n	8101d24 <cmox_ScalarMul_wNAFRecoding+0x94>
 8101cb2:	9800      	ldr	r0, [sp, #0]
 8101cb4:	2100      	movs	r1, #0
 8101cb6:	2401      	movs	r4, #1
 8101cb8:	f000 f9c3 	bl	8102042 <cmox_bn_init>
 8101cbc:	9a00      	ldr	r2, [sp, #0]
 8101cbe:	4639      	mov	r1, r7
 8101cc0:	2001      	movs	r0, #1
 8101cc2:	f1aa 0701 	sub.w	r7, sl, #1
 8101cc6:	f000 f9cb 	bl	8102060 <cmox_bn_cCopy>
 8101cca:	fa04 f707 	lsl.w	r7, r4, r7
 8101cce:	e01c      	b.n	8101d0a <cmox_ScalarMul_wNAFRecoding+0x7a>
 8101cd0:	2100      	movs	r1, #0
 8101cd2:	5571      	strb	r1, [r6, r5]
 8101cd4:	e013      	b.n	8101cfe <cmox_ScalarMul_wNAFRecoding+0x6e>
 8101cd6:	9800      	ldr	r0, [sp, #0]
 8101cd8:	6841      	ldr	r1, [r0, #4]
 8101cda:	07c8      	lsls	r0, r1, #31
 8101cdc:	d5f8      	bpl.n	8101cd0 <cmox_ScalarMul_wNAFRecoding+0x40>
 8101cde:	fa04 f00a 	lsl.w	r0, r4, sl
 8101ce2:	1e42      	subs	r2, r0, #1
 8101ce4:	4011      	ands	r1, r2
 8101ce6:	b24a      	sxtb	r2, r1
 8101ce8:	b27b      	sxtb	r3, r7
 8101cea:	429a      	cmp	r2, r3
 8101cec:	bfa8      	it	ge
 8101cee:	1bc9      	subge	r1, r1, r7
 8101cf0:	5571      	strb	r1, [r6, r5]
 8101cf2:	9a00      	ldr	r2, [sp, #0]
 8101cf4:	b249      	sxtb	r1, r1
 8101cf6:	4249      	negs	r1, r1
 8101cf8:	4610      	mov	r0, r2
 8101cfa:	f7fe fdce 	bl	810089a <cmox_AddBN_Int>
 8101cfe:	9a00      	ldr	r2, [sp, #0]
 8101d00:	2101      	movs	r1, #1
 8101d02:	1c6d      	adds	r5, r5, #1
 8101d04:	4610      	mov	r0, r2
 8101d06:	f7fe fc59 	bl	81005bc <cmox_RightShiftBN>
 8101d0a:	9800      	ldr	r0, [sp, #0]
 8101d0c:	2100      	movs	r1, #0
 8101d0e:	f000 fa25 	bl	810215c <cmox_bn_cmpUint>
 8101d12:	2800      	cmp	r0, #0
 8101d14:	d0df      	beq.n	8101cd6 <cmox_ScalarMul_wNAFRecoding+0x46>
 8101d16:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8101d18:	b100      	cbz	r0, 8101d1c <cmox_ScalarMul_wNAFRecoding+0x8c>
 8101d1a:	6005      	str	r5, [r0, #0]
 8101d1c:	4669      	mov	r1, sp
 8101d1e:	4648      	mov	r0, r9
 8101d20:	f000 f963 	bl	8101fea <cmox_bn_free>
 8101d24:	4640      	mov	r0, r8
 8101d26:	e8bd 87f6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, pc}

08101d2a <firstloop_bb_cmp>:
 8101d2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8101d2c:	2401      	movs	r4, #1
 8101d2e:	9400      	str	r4, [sp, #0]
 8101d30:	2300      	movs	r3, #0
 8101d32:	2400      	movs	r4, #0
 8101d34:	e00d      	b.n	8101d52 <firstloop_bb_cmp+0x28>
 8101d36:	9d00      	ldr	r5, [sp, #0]
 8101d38:	5d06      	ldrb	r6, [r0, r4]
 8101d3a:	5d0f      	ldrb	r7, [r1, r4]
 8101d3c:	1c64      	adds	r4, r4, #1
 8101d3e:	407e      	eors	r6, r7
 8101d40:	43f6      	mvns	r6, r6
 8101d42:	1c76      	adds	r6, r6, #1
 8101d44:	0ff6      	lsrs	r6, r6, #31
 8101d46:	f086 0601 	eor.w	r6, r6, #1
 8101d4a:	4035      	ands	r5, r6
 8101d4c:	9500      	str	r5, [sp, #0]
 8101d4e:	9d00      	ldr	r5, [sp, #0]
 8101d50:	18eb      	adds	r3, r5, r3
 8101d52:	4294      	cmp	r4, r2
 8101d54:	d3ef      	bcc.n	8101d36 <firstloop_bb_cmp+0xc>
 8101d56:	4618      	mov	r0, r3
 8101d58:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08101d5a <secondloop_bb_cmp>:
 8101d5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8101d5c:	2300      	movs	r3, #0
 8101d5e:	2401      	movs	r4, #1
 8101d60:	9400      	str	r4, [sp, #0]
 8101d62:	2a00      	cmp	r2, #0
 8101d64:	e011      	b.n	8101d8a <secondloop_bb_cmp+0x30>
 8101d66:	9c00      	ldr	r4, [sp, #0]
 8101d68:	1885      	adds	r5, r0, r2
 8101d6a:	f815 6c01 	ldrb.w	r6, [r5, #-1]
 8101d6e:	188f      	adds	r7, r1, r2
 8101d70:	f817 5c01 	ldrb.w	r5, [r7, #-1]
 8101d74:	406e      	eors	r6, r5
 8101d76:	43f6      	mvns	r6, r6
 8101d78:	1c76      	adds	r6, r6, #1
 8101d7a:	0ff6      	lsrs	r6, r6, #31
 8101d7c:	f086 0601 	eor.w	r6, r6, #1
 8101d80:	4034      	ands	r4, r6
 8101d82:	9400      	str	r4, [sp, #0]
 8101d84:	9c00      	ldr	r4, [sp, #0]
 8101d86:	18e3      	adds	r3, r4, r3
 8101d88:	1e52      	subs	r2, r2, #1
 8101d8a:	d1ec      	bne.n	8101d66 <secondloop_bb_cmp+0xc>
 8101d8c:	4618      	mov	r0, r3
 8101d8e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08101d90 <firstloop_bw_be_r_cmp>:
 8101d90:	e92d 41f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, lr}
 8101d94:	2401      	movs	r4, #1
 8101d96:	460b      	mov	r3, r1
 8101d98:	9400      	str	r4, [sp, #0]
 8101d9a:	0896      	lsrs	r6, r2, #2
 8101d9c:	2100      	movs	r1, #0
 8101d9e:	eba2 0686 	sub.w	r6, r2, r6, lsl #2
 8101da2:	2400      	movs	r4, #0
 8101da4:	1f1d      	subs	r5, r3, #4
 8101da6:	e01c      	b.n	8101de2 <firstloop_bw_be_r_cmp+0x52>
 8101da8:	f102 0c03 	add.w	ip, r2, #3
 8101dac:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
 8101db0:	9b00      	ldr	r3, [sp, #0]
 8101db2:	f855 e02c 	ldr.w	lr, [r5, ip, lsl #2]
 8101db6:	eba6 0804 	sub.w	r8, r6, r4
 8101dba:	5d07      	ldrb	r7, [r0, r4]
 8101dbc:	f1a8 0c01 	sub.w	ip, r8, #1
 8101dc0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8101dc4:	fa2e fe0c 	lsr.w	lr, lr, ip
 8101dc8:	ea8e 0707 	eor.w	r7, lr, r7
 8101dcc:	b2ff      	uxtb	r7, r7
 8101dce:	43ff      	mvns	r7, r7
 8101dd0:	1c7f      	adds	r7, r7, #1
 8101dd2:	0fff      	lsrs	r7, r7, #31
 8101dd4:	f087 0701 	eor.w	r7, r7, #1
 8101dd8:	403b      	ands	r3, r7
 8101dda:	9300      	str	r3, [sp, #0]
 8101ddc:	9b00      	ldr	r3, [sp, #0]
 8101dde:	1c64      	adds	r4, r4, #1
 8101de0:	1859      	adds	r1, r3, r1
 8101de2:	42b4      	cmp	r4, r6
 8101de4:	d3e0      	bcc.n	8101da8 <firstloop_bw_be_r_cmp+0x18>
 8101de6:	2600      	movs	r6, #0
 8101de8:	0892      	lsrs	r2, r2, #2
 8101dea:	e022      	b.n	8101e32 <firstloop_bw_be_r_cmp+0xa2>
 8101dec:	1903      	adds	r3, r0, r4
 8101dee:	eb03 0786 	add.w	r7, r3, r6, lsl #2
 8101df2:	787b      	ldrb	r3, [r7, #1]
 8101df4:	f897 c000 	ldrb.w	ip, [r7]
 8101df8:	041b      	lsls	r3, r3, #16
 8101dfa:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
 8101dfe:	f897 c002 	ldrb.w	ip, [r7, #2]
 8101e02:	78ff      	ldrb	r7, [r7, #3]
 8101e04:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 8101e08:	433b      	orrs	r3, r7
 8101e0a:	1b97      	subs	r7, r2, r6
 8101e0c:	f855 7027 	ldr.w	r7, [r5, r7, lsl #2]
 8101e10:	1c76      	adds	r6, r6, #1
 8101e12:	407b      	eors	r3, r7
 8101e14:	ea6f 0e03 	mvn.w	lr, r3
 8101e18:	f10e 0e01 	add.w	lr, lr, #1
 8101e1c:	9f00      	ldr	r7, [sp, #0]
 8101e1e:	ea4e 0303 	orr.w	r3, lr, r3
 8101e22:	0fdb      	lsrs	r3, r3, #31
 8101e24:	f083 0301 	eor.w	r3, r3, #1
 8101e28:	403b      	ands	r3, r7
 8101e2a:	9300      	str	r3, [sp, #0]
 8101e2c:	9b00      	ldr	r3, [sp, #0]
 8101e2e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8101e32:	4296      	cmp	r6, r2
 8101e34:	d3da      	bcc.n	8101dec <firstloop_bw_be_r_cmp+0x5c>
 8101e36:	4608      	mov	r0, r1
 8101e38:	e8bd 81f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, pc}

08101e3c <secondloop_bw_be_r_cmp>:
 8101e3c:	b5fc      	push	{r2, r3, r4, r5, r6, r7, lr}
 8101e3e:	2501      	movs	r5, #1
 8101e40:	0896      	lsrs	r6, r2, #2
 8101e42:	9500      	str	r5, [sp, #0]
 8101e44:	eba2 0686 	sub.w	r6, r2, r6, lsl #2
 8101e48:	4603      	mov	r3, r0
 8101e4a:	2400      	movs	r4, #0
 8101e4c:	9601      	str	r6, [sp, #4]
 8101e4e:	4615      	mov	r5, r2
 8101e50:	e01d      	b.n	8101e8e <secondloop_bw_be_r_cmp+0x52>
 8101e52:	1958      	adds	r0, r3, r5
 8101e54:	1f06      	subs	r6, r0, #4
 8101e56:	7870      	ldrb	r0, [r6, #1]
 8101e58:	7837      	ldrb	r7, [r6, #0]
 8101e5a:	0400      	lsls	r0, r0, #16
 8101e5c:	ea40 6007 	orr.w	r0, r0, r7, lsl #24
 8101e60:	78b7      	ldrb	r7, [r6, #2]
 8101e62:	78f6      	ldrb	r6, [r6, #3]
 8101e64:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
 8101e68:	4330      	orrs	r0, r6
 8101e6a:	1b56      	subs	r6, r2, r5
 8101e6c:	08b6      	lsrs	r6, r6, #2
 8101e6e:	f851 7026 	ldr.w	r7, [r1, r6, lsl #2]
 8101e72:	9e00      	ldr	r6, [sp, #0]
 8101e74:	1f2d      	subs	r5, r5, #4
 8101e76:	4078      	eors	r0, r7
 8101e78:	43c7      	mvns	r7, r0
 8101e7a:	1c7f      	adds	r7, r7, #1
 8101e7c:	4338      	orrs	r0, r7
 8101e7e:	0fc0      	lsrs	r0, r0, #31
 8101e80:	f080 0001 	eor.w	r0, r0, #1
 8101e84:	4030      	ands	r0, r6
 8101e86:	9000      	str	r0, [sp, #0]
 8101e88:	9800      	ldr	r0, [sp, #0]
 8101e8a:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8101e8e:	2d03      	cmp	r5, #3
 8101e90:	d8df      	bhi.n	8101e52 <secondloop_bw_be_r_cmp+0x16>
 8101e92:	9801      	ldr	r0, [sp, #4]
 8101e94:	2800      	cmp	r0, #0
 8101e96:	e01c      	b.n	8101ed2 <secondloop_bw_be_r_cmp+0x96>
 8101e98:	9d01      	ldr	r5, [sp, #4]
 8101e9a:	9e00      	ldr	r6, [sp, #0]
 8101e9c:	1e5f      	subs	r7, r3, #1
 8101e9e:	f817 c000 	ldrb.w	ip, [r7, r0]
 8101ea2:	1cd7      	adds	r7, r2, #3
 8101ea4:	ea4f 0e97 	mov.w	lr, r7, lsr #2
 8101ea8:	eb01 078e 	add.w	r7, r1, lr, lsl #2
 8101eac:	f857 7c04 	ldr.w	r7, [r7, #-4]
 8101eb0:	1a2d      	subs	r5, r5, r0
 8101eb2:	00ed      	lsls	r5, r5, #3
 8101eb4:	fa27 f505 	lsr.w	r5, r7, r5
 8101eb8:	ea85 050c 	eor.w	r5, r5, ip
 8101ebc:	b2ed      	uxtb	r5, r5
 8101ebe:	43ed      	mvns	r5, r5
 8101ec0:	1c6d      	adds	r5, r5, #1
 8101ec2:	0fed      	lsrs	r5, r5, #31
 8101ec4:	f085 0501 	eor.w	r5, r5, #1
 8101ec8:	402e      	ands	r6, r5
 8101eca:	9600      	str	r6, [sp, #0]
 8101ecc:	9d00      	ldr	r5, [sp, #0]
 8101ece:	192c      	adds	r4, r5, r4
 8101ed0:	1e40      	subs	r0, r0, #1
 8101ed2:	d1e1      	bne.n	8101e98 <secondloop_bw_be_r_cmp+0x5c>
 8101ed4:	4620      	mov	r0, r4
 8101ed6:	bdf6      	pop	{r1, r2, r4, r5, r6, r7, pc}

08101ed8 <bufType_bb>:
 8101ed8:	1d2b 0810 1d5b 0810 0001 0000               +...[.......

08101ee4 <cmox_utils_robustCmp>:
 8101ee4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8101ee8:	461d      	mov	r5, r3
 8101eea:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8101eee:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8101ef0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8101ef2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8101ef6:	9300      	str	r3, [sp, #0]
 8101ef8:	f8d9 b000 	ldr.w	fp, [r9]
 8101efc:	460e      	mov	r6, r1
 8101efe:	4692      	mov	sl, r2
 8101f00:	4680      	mov	r8, r0
 8101f02:	4632      	mov	r2, r6
 8101f04:	4651      	mov	r1, sl
 8101f06:	47d8      	blx	fp
 8101f08:	4683      	mov	fp, r0
 8101f0a:	b364      	cbz	r4, 8101f66 <cmox_utils_robustCmp+0x82>
 8101f0c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8101f10:	4632      	mov	r2, r6
 8101f12:	4651      	mov	r1, sl
 8101f14:	4640      	mov	r0, r8
 8101f16:	4798      	blx	r3
 8101f18:	ea6f 020b 	mvn.w	r2, fp
 8101f1c:	1c52      	adds	r2, r2, #1
 8101f1e:	9900      	ldr	r1, [sp, #0]
 8101f20:	ea42 020b 	orr.w	r2, r2, fp
 8101f24:	ea6f 73d2 	mvn.w	r3, r2, lsr #31
 8101f28:	1c5b      	adds	r3, r3, #1
 8101f2a:	4019      	ands	r1, r3
 8101f2c:	43c2      	mvns	r2, r0
 8101f2e:	9100      	str	r1, [sp, #0]
 8101f30:	1c52      	adds	r2, r2, #1
 8101f32:	9900      	ldr	r1, [sp, #0]
 8101f34:	4302      	orrs	r2, r0
 8101f36:	ea6f 73d2 	mvn.w	r3, r2, lsr #31
 8101f3a:	1c5b      	adds	r3, r3, #1
 8101f3c:	4019      	ands	r1, r3
 8101f3e:	9100      	str	r1, [sp, #0]
 8101f40:	f086 3155 	eor.w	r1, r6, #1431655765	@ 0x55555555
 8101f44:	4048      	eors	r0, r1
 8101f46:	ea87 0100 	eor.w	r1, r7, r0
 8101f4a:	f081 3155 	eor.w	r1, r1, #1431655765	@ 0x55555555
 8101f4e:	6021      	str	r1, [r4, #0]
 8101f50:	f080 3155 	eor.w	r1, r0, #1431655765	@ 0x55555555
 8101f54:	43c9      	mvns	r1, r1
 8101f56:	1c49      	adds	r1, r1, #1
 8101f58:	9a00      	ldr	r2, [sp, #0]
 8101f5a:	4308      	orrs	r0, r1
 8101f5c:	ea6f 70d0 	mvn.w	r0, r0, lsr #31
 8101f60:	1c40      	adds	r0, r0, #1
 8101f62:	4382      	bics	r2, r0
 8101f64:	9200      	str	r2, [sp, #0]
 8101f66:	f8d9 0008 	ldr.w	r0, [r9, #8]
 8101f6a:	2801      	cmp	r0, #1
 8101f6c:	d109      	bne.n	8101f82 <cmox_utils_robustCmp+0x9e>
 8101f6e:	4075      	eors	r5, r6
 8101f70:	43e9      	mvns	r1, r5
 8101f72:	1c49      	adds	r1, r1, #1
 8101f74:	9800      	ldr	r0, [sp, #0]
 8101f76:	430d      	orrs	r5, r1
 8101f78:	ea6f 72d5 	mvn.w	r2, r5, lsr #31
 8101f7c:	1c52      	adds	r2, r2, #1
 8101f7e:	4390      	bics	r0, r2
 8101f80:	e00a      	b.n	8101f98 <cmox_utils_robustCmp+0xb4>
 8101f82:	1cf1      	adds	r1, r6, #3
 8101f84:	ea85 0291 	eor.w	r2, r5, r1, lsr #2
 8101f88:	9800      	ldr	r0, [sp, #0]
 8101f8a:	43d2      	mvns	r2, r2
 8101f8c:	1c52      	adds	r2, r2, #1
 8101f8e:	4315      	orrs	r5, r2
 8101f90:	ea6f 73d5 	mvn.w	r3, r5, lsr #31
 8101f94:	1c5b      	adds	r3, r3, #1
 8101f96:	4398      	bics	r0, r3
 8101f98:	f086 36aa 	eor.w	r6, r6, #2863311530	@ 0xaaaaaaaa
 8101f9c:	ea86 060b 	eor.w	r6, r6, fp
 8101fa0:	f086 33aa 	eor.w	r3, r6, #2863311530	@ 0xaaaaaaaa
 8101fa4:	43f2      	mvns	r2, r6
 8101fa6:	43db      	mvns	r3, r3
 8101fa8:	f3c2 72c0 	ubfx	r2, r2, #31, #1
 8101fac:	1c5b      	adds	r3, r3, #1
 8101fae:	9000      	str	r0, [sp, #0]
 8101fb0:	ea42 72d3 	orr.w	r2, r2, r3, lsr #31
 8101fb4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8101fb6:	9900      	ldr	r1, [sp, #0]
 8101fb8:	43d2      	mvns	r2, r2
 8101fba:	1c52      	adds	r2, r2, #1
 8101fbc:	4391      	bics	r1, r2
 8101fbe:	9100      	str	r1, [sp, #0]
 8101fc0:	9900      	ldr	r1, [sp, #0]
 8101fc2:	4077      	eors	r7, r6
 8101fc4:	f087 37aa 	eor.w	r7, r7, #2863311530	@ 0xaaaaaaaa
 8101fc8:	4388      	bics	r0, r1
 8101fca:	9900      	ldr	r1, [sp, #0]
 8101fcc:	400f      	ands	r7, r1
 8101fce:	4338      	orrs	r0, r7
 8101fd0:	e8bd 8ff2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08101fd4 <cmox_bn_alloc>:
 8101fd4:	b538      	push	{r3, r4, r5, lr}
 8101fd6:	4615      	mov	r5, r2
 8101fd8:	00aa      	lsls	r2, r5, #2
 8101fda:	460c      	mov	r4, r1
 8101fdc:	1d12      	adds	r2, r2, #4
 8101fde:	f002 f8b7 	bl	8104150 <cmox_membuf_alloc>
 8101fe2:	b908      	cbnz	r0, 8101fe8 <cmox_bn_alloc+0x14>
 8101fe4:	6821      	ldr	r1, [r4, #0]
 8101fe6:	600d      	str	r5, [r1, #0]
 8101fe8:	bd32      	pop	{r1, r4, r5, pc}

08101fea <cmox_bn_free>:
 8101fea:	b510      	push	{r4, lr}
 8101fec:	460c      	mov	r4, r1
 8101fee:	6823      	ldr	r3, [r4, #0]
 8101ff0:	681a      	ldr	r2, [r3, #0]
 8101ff2:	0092      	lsls	r2, r2, #2
 8101ff4:	1d12      	adds	r2, r2, #4
 8101ff6:	f002 f8ca 	bl	810418e <cmox_membuf_free>
 8101ffa:	2300      	movs	r3, #0
 8101ffc:	6023      	str	r3, [r4, #0]
 8101ffe:	bd10      	pop	{r4, pc}

08102000 <cmox_bn_import>:
 8102000:	4603      	mov	r3, r0
 8102002:	2000      	movs	r0, #0
 8102004:	2b00      	cmp	r3, #0
 8102006:	b570      	push	{r4, r5, r6, lr}
 8102008:	bf18      	it	ne
 810200a:	2900      	cmpne	r1, #0
 810200c:	d000      	beq.n	8102010 <cmox_bn_import+0x10>
 810200e:	b90a      	cbnz	r2, 8102014 <cmox_bn_import+0x14>
 8102010:	2001      	movs	r0, #1
 8102012:	bd70      	pop	{r4, r5, r6, pc}
 8102014:	681c      	ldr	r4, [r3, #0]
 8102016:	42a2      	cmp	r2, r4
 8102018:	bf28      	it	cs
 810201a:	4622      	movcs	r2, r4
 810201c:	2401      	movs	r4, #1
 810201e:	e006      	b.n	810202e <cmox_bn_import+0x2e>
 8102020:	eb01 0584 	add.w	r5, r1, r4, lsl #2
 8102024:	f855 6c04 	ldr.w	r6, [r5, #-4]
 8102028:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 810202c:	1c64      	adds	r4, r4, #1
 810202e:	42a2      	cmp	r2, r4
 8102030:	d2f6      	bcs.n	8102020 <cmox_bn_import+0x20>
 8102032:	6819      	ldr	r1, [r3, #0]
 8102034:	42a1      	cmp	r1, r4
 8102036:	bf24      	itt	cs
 8102038:	f843 0024 	strcs.w	r0, [r3, r4, lsl #2]
 810203c:	1c64      	addcs	r4, r4, #1
 810203e:	d2f8      	bcs.n	8102032 <cmox_bn_import+0x32>
 8102040:	bd70      	pop	{r4, r5, r6, pc}

08102042 <cmox_bn_init>:
 8102042:	4602      	mov	r2, r0
 8102044:	2000      	movs	r0, #0
 8102046:	b90a      	cbnz	r2, 810204c <cmox_bn_init+0xa>
 8102048:	2001      	movs	r0, #1
 810204a:	4770      	bx	lr
 810204c:	6051      	str	r1, [r2, #4]
 810204e:	2102      	movs	r1, #2
 8102050:	e002      	b.n	8102058 <cmox_bn_init+0x16>
 8102052:	f842 0021 	str.w	r0, [r2, r1, lsl #2]
 8102056:	1c49      	adds	r1, r1, #1
 8102058:	6813      	ldr	r3, [r2, #0]
 810205a:	428b      	cmp	r3, r1
 810205c:	d2f9      	bcs.n	8102052 <cmox_bn_init+0x10>
 810205e:	4770      	bx	lr

08102060 <cmox_bn_cCopy>:
 8102060:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8102064:	4607      	mov	r7, r0
 8102066:	4616      	mov	r6, r2
 8102068:	6830      	ldr	r0, [r6, #0]
 810206a:	4688      	mov	r8, r1
 810206c:	2500      	movs	r5, #0
 810206e:	1c40      	adds	r0, r0, #1
 8102070:	427a      	negs	r2, r7
 8102072:	f8d8 4000 	ldr.w	r4, [r8]
 8102076:	e004      	b.n	8102082 <cmox_bn_cCopy+0x22>
 8102078:	f858 1020 	ldr.w	r1, [r8, r0, lsl #2]
 810207c:	1c40      	adds	r0, r0, #1
 810207e:	4011      	ands	r1, r2
 8102080:	430d      	orrs	r5, r1
 8102082:	4284      	cmp	r4, r0
 8102084:	d2f8      	bcs.n	8102078 <cmox_bn_cCopy+0x18>
 8102086:	6830      	ldr	r0, [r6, #0]
 8102088:	42a0      	cmp	r0, r4
 810208a:	bf38      	it	cc
 810208c:	4604      	movcc	r4, r0
 810208e:	ea5f 0904 	movs.w	r9, r4
 8102092:	e00a      	b.n	81020aa <cmox_bn_cCopy+0x4a>
 8102094:	f856 2029 	ldr.w	r2, [r6, r9, lsl #2]
 8102098:	f858 1029 	ldr.w	r1, [r8, r9, lsl #2]
 810209c:	4638      	mov	r0, r7
 810209e:	f7fe fd8d 	bl	8100bbc <cmox_mathUtils_mux>
 81020a2:	f846 0029 	str.w	r0, [r6, r9, lsl #2]
 81020a6:	f1b9 0901 	subs.w	r9, r9, #1
 81020aa:	d1f3      	bne.n	8102094 <cmox_bn_cCopy+0x34>
 81020ac:	1c64      	adds	r4, r4, #1
 81020ae:	1e79      	subs	r1, r7, #1
 81020b0:	e005      	b.n	81020be <cmox_bn_cCopy+0x5e>
 81020b2:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 81020b6:	4008      	ands	r0, r1
 81020b8:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 81020bc:	1c64      	adds	r4, r4, #1
 81020be:	6830      	ldr	r0, [r6, #0]
 81020c0:	42a0      	cmp	r0, r4
 81020c2:	d2f6      	bcs.n	81020b2 <cmox_bn_cCopy+0x52>
 81020c4:	2d00      	cmp	r5, #0
 81020c6:	bf14      	ite	ne
 81020c8:	2003      	movne	r0, #3
 81020ca:	2000      	moveq	r0, #0
 81020cc:	e8bd 83f2 	ldmia.w	sp!, {r1, r4, r5, r6, r7, r8, r9, pc}

081020d0 <cmox_bn_mux>:
 81020d0:	4240      	negs	r0, r0
 81020d2:	4051      	eors	r1, r2
 81020d4:	4008      	ands	r0, r1
 81020d6:	4050      	eors	r0, r2
 81020d8:	4770      	bx	lr

081020da <cmox_bn_cmp>:
 81020da:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 81020de:	4684      	mov	ip, r0
 81020e0:	468e      	mov	lr, r1
 81020e2:	f8de 5000 	ldr.w	r5, [lr]
 81020e6:	f8dc 1000 	ldr.w	r1, [ip]
 81020ea:	2700      	movs	r7, #0
 81020ec:	2601      	movs	r6, #1
 81020ee:	46ba      	mov	sl, r7
 81020f0:	42a9      	cmp	r1, r5
 81020f2:	d30f      	bcc.n	8102114 <cmox_bn_cmp+0x3a>
 81020f4:	4608      	mov	r0, r1
 81020f6:	4664      	mov	r4, ip
 81020f8:	2101      	movs	r1, #1
 81020fa:	4285      	cmp	r5, r0
 81020fc:	d224      	bcs.n	8102148 <cmox_bn_cmp+0x6e>
 81020fe:	f854 2020 	ldr.w	r2, [r4, r0, lsl #2]
 8102102:	2300      	movs	r3, #0
 8102104:	4252      	negs	r2, r2
 8102106:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 810210a:	f003 0301 	and.w	r3, r3, #1
 810210e:	431f      	orrs	r7, r3
 8102110:	1e40      	subs	r0, r0, #1
 8102112:	e7f2      	b.n	81020fa <cmox_bn_cmp+0x20>
 8102114:	4628      	mov	r0, r5
 8102116:	460d      	mov	r5, r1
 8102118:	4674      	mov	r4, lr
 810211a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 810211e:	e7ee      	b.n	81020fe <cmox_bn_cmp+0x24>
 8102120:	f85c 2020 	ldr.w	r2, [ip, r0, lsl #2]
 8102124:	f85e 4020 	ldr.w	r4, [lr, r0, lsl #2]
 8102128:	2500      	movs	r5, #0
 810212a:	2300      	movs	r3, #0
 810212c:	ebb4 0802 	subs.w	r8, r4, r2
 8102130:	eb65 0903 	sbc.w	r9, r5, r3
 8102134:	4062      	eors	r2, r4
 8102136:	1e52      	subs	r2, r2, #1
 8102138:	ea06 0509 	and.w	r5, r6, r9
 810213c:	f163 0300 	sbc.w	r3, r3, #0
 8102140:	ea45 0a0a 	orr.w	sl, r5, sl
 8102144:	401e      	ands	r6, r3
 8102146:	1e40      	subs	r0, r0, #1
 8102148:	2800      	cmp	r0, #0
 810214a:	d1e9      	bne.n	8102120 <cmox_bn_cmp+0x46>
 810214c:	eb06 024a 	add.w	r2, r6, sl, lsl #1
 8102150:	4638      	mov	r0, r7
 8102152:	1e52      	subs	r2, r2, #1
 8102154:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8102158:	f7fe bd30 	b.w	8100bbc <cmox_mathUtils_mux>

0810215c <cmox_bn_cmpUint>:
 810215c:	b510      	push	{r4, lr}
 810215e:	460a      	mov	r2, r1
 8102160:	2300      	movs	r3, #0
 8102162:	6801      	ldr	r1, [r0, #0]
 8102164:	e003      	b.n	810216e <cmox_bn_cmpUint+0x12>
 8102166:	f850 4021 	ldr.w	r4, [r0, r1, lsl #2]
 810216a:	1e49      	subs	r1, r1, #1
 810216c:	4323      	orrs	r3, r4
 810216e:	2902      	cmp	r1, #2
 8102170:	d2f9      	bcs.n	8102166 <cmox_bn_cmpUint+0xa>
 8102172:	6840      	ldr	r0, [r0, #4]
 8102174:	2100      	movs	r1, #0
 8102176:	4042      	eors	r2, r0
 8102178:	ea42 0003 	orr.w	r0, r2, r3
 810217c:	f7fe fd26 	bl	8100bcc <cmox_mathUtils_neq>
 8102180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8102184:	f7fe bd1f 	b.w	8100bc6 <cmox_mathUtils_not>

08102188 <cmox_bn_countBits>:
 8102188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810218a:	4605      	mov	r5, r0
 810218c:	682e      	ldr	r6, [r5, #0]
 810218e:	2200      	movs	r2, #0
 8102190:	0034      	movs	r4, r6
 8102192:	e00b      	b.n	81021ac <cmox_bn_countBits+0x24>
 8102194:	4257      	negs	r7, r2
 8102196:	4317      	orrs	r7, r2
 8102198:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 810219c:	43ff      	mvns	r7, r7
 810219e:	0ff8      	lsrs	r0, r7, #31
 81021a0:	f7fe fd0c 	bl	8100bbc <cmox_mathUtils_mux>
 81021a4:	4602      	mov	r2, r0
 81021a6:	eba6 76d7 	sub.w	r6, r6, r7, lsr #31
 81021aa:	1e64      	subs	r4, r4, #1
 81021ac:	d1f2      	bne.n	8102194 <cmox_bn_countBits+0xc>
 81021ae:	4610      	mov	r0, r2
 81021b0:	f7fe fd18 	bl	8100be4 <cmox_mathUtils_bitLength>
 81021b4:	eb00 1046 	add.w	r0, r0, r6, lsl #5
 81021b8:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

081021ba <cmox_bn_getBits>:
 81021ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 81021bc:	4606      	mov	r6, r0
 81021be:	6830      	ldr	r0, [r6, #0]
 81021c0:	460c      	mov	r4, r1
 81021c2:	0957      	lsrs	r7, r2, #5
 81021c4:	f002 051f 	and.w	r5, r2, #31
 81021c8:	1c79      	adds	r1, r7, #1
 81021ca:	f7fe fd04 	bl	8100bd6 <cmox_mathUtils_gt>
 81021ce:	1cbb      	adds	r3, r7, #2
 81021d0:	4241      	negs	r1, r0
 81021d2:	400b      	ands	r3, r1
 81021d4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 81021d8:	2200      	movs	r2, #0
 81021da:	f004 041f 	and.w	r4, r4, #31
 81021de:	f7fe fced 	bl	8100bbc <cmox_mathUtils_mux>
 81021e2:	eb06 0187 	add.w	r1, r6, r7, lsl #2
 81021e6:	684a      	ldr	r2, [r1, #4]
 81021e8:	40ea      	lsrs	r2, r5
 81021ea:	f1c5 0520 	rsb	r5, r5, #32
 81021ee:	fa00 f505 	lsl.w	r5, r0, r5
 81021f2:	2001      	movs	r0, #1
 81021f4:	fa00 f404 	lsl.w	r4, r0, r4
 81021f8:	4315      	orrs	r5, r2
 81021fa:	1e64      	subs	r4, r4, #1
 81021fc:	ea04 0005 	and.w	r0, r4, r5
 8102200:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

08102202 <cmox_bn_setBits>:
 8102202:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8102206:	4680      	mov	r8, r0
 8102208:	2001      	movs	r0, #1
 810220a:	f001 061f 	and.w	r6, r1, #31
 810220e:	fa00 f606 	lsl.w	r6, r0, r6
 8102212:	0955      	lsrs	r5, r2, #5
 8102214:	f8d8 0000 	ldr.w	r0, [r8]
 8102218:	1e76      	subs	r6, r6, #1
 810221a:	1c6d      	adds	r5, r5, #1
 810221c:	ea06 0903 	and.w	r9, r6, r3
 8102220:	f002 0a1f 	and.w	sl, r2, #31
 8102224:	f001 071f 	and.w	r7, r1, #31
 8102228:	4629      	mov	r1, r5
 810222a:	4457      	add	r7, sl
 810222c:	f7fe fcd3 	bl	8100bd6 <cmox_mathUtils_gt>
 8102230:	3f20      	subs	r7, #32
 8102232:	4604      	mov	r4, r0
 8102234:	43f8      	mvns	r0, r7
 8102236:	f3c0 70c0 	ubfx	r0, r0, #31, #1
 810223a:	f858 1025 	ldr.w	r1, [r8, r5, lsl #2]
 810223e:	4004      	ands	r4, r0
 8102240:	4278      	negs	r0, r7
 8102242:	fa06 f60a 	lsl.w	r6, r6, sl
 8102246:	ea04 74d0 	and.w	r4, r4, r0, lsr #31
 810224a:	ea21 0606 	bic.w	r6, r1, r6
 810224e:	f848 6025 	str.w	r6, [r8, r5, lsl #2]
 8102252:	fa09 f00a 	lsl.w	r0, r9, sl
 8102256:	4306      	orrs	r6, r0
 8102258:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 810225c:	f848 6025 	str.w	r6, [r8, r5, lsl #2]
 8102260:	fa02 f107 	lsl.w	r1, r2, r7
 8102264:	4620      	mov	r0, r4
 8102266:	f7fe fca9 	bl	8100bbc <cmox_mathUtils_mux>
 810226a:	1c6d      	adds	r5, r5, #1
 810226c:	4261      	negs	r1, r4
 810226e:	400d      	ands	r5, r1
 8102270:	f858 2025 	ldr.w	r2, [r8, r5, lsl #2]
 8102274:	f1ca 0a20 	rsb	sl, sl, #32
 8102278:	fa29 f10a 	lsr.w	r1, r9, sl
 810227c:	4010      	ands	r0, r2
 810227e:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8102282:	2200      	movs	r2, #0
 8102284:	4620      	mov	r0, r4
 8102286:	f7fe fc99 	bl	8100bbc <cmox_mathUtils_mux>
 810228a:	f858 1025 	ldr.w	r1, [r8, r5, lsl #2]
 810228e:	4308      	orrs	r0, r1
 8102290:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8102294:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08102298 <cmox_bn_fromU8BE>:
 8102298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810229a:	b10a      	cbz	r2, 81022a0 <cmox_bn_fromU8BE+0x8>
 810229c:	b910      	cbnz	r0, 81022a4 <cmox_bn_fromU8BE+0xc>
 810229e:	b109      	cbz	r1, 81022a4 <cmox_bn_fromU8BE+0xc>
 81022a0:	2001      	movs	r0, #1
 81022a2:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 81022a4:	6813      	ldr	r3, [r2, #0]
 81022a6:	1ccc      	adds	r4, r1, #3
 81022a8:	ebb3 0f94 	cmp.w	r3, r4, lsr #2
 81022ac:	d201      	bcs.n	81022b2 <cmox_bn_fromU8BE+0x1a>
 81022ae:	2003      	movs	r0, #3
 81022b0:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 81022b2:	b379      	cbz	r1, 8102314 <cmox_bn_fromU8BE+0x7c>
 81022b4:	088b      	lsrs	r3, r1, #2
 81022b6:	1c5b      	adds	r3, r3, #1
 81022b8:	2401      	movs	r4, #1
 81022ba:	e00f      	b.n	81022dc <cmox_bn_fromU8BE+0x44>
 81022bc:	eba1 0584 	sub.w	r5, r1, r4, lsl #2
 81022c0:	4405      	add	r5, r0
 81022c2:	786f      	ldrb	r7, [r5, #1]
 81022c4:	782e      	ldrb	r6, [r5, #0]
 81022c6:	043f      	lsls	r7, r7, #16
 81022c8:	ea47 6706 	orr.w	r7, r7, r6, lsl #24
 81022cc:	78ae      	ldrb	r6, [r5, #2]
 81022ce:	78ed      	ldrb	r5, [r5, #3]
 81022d0:	ea47 2706 	orr.w	r7, r7, r6, lsl #8
 81022d4:	432f      	orrs	r7, r5
 81022d6:	f842 7024 	str.w	r7, [r2, r4, lsl #2]
 81022da:	1c64      	adds	r4, r4, #1
 81022dc:	429c      	cmp	r4, r3
 81022de:	d3ed      	bcc.n	81022bc <cmox_bn_fromU8BE+0x24>
 81022e0:	6815      	ldr	r5, [r2, #0]
 81022e2:	42a5      	cmp	r5, r4
 81022e4:	bf22      	ittt	cs
 81022e6:	2600      	movcs	r6, #0
 81022e8:	f842 6024 	strcs.w	r6, [r2, r4, lsl #2]
 81022ec:	1c64      	addcs	r4, r4, #1
 81022ee:	d2f7      	bcs.n	81022e0 <cmox_bn_fromU8BE+0x48>
 81022f0:	f011 0103 	ands.w	r1, r1, #3
 81022f4:	d011      	beq.n	810231a <cmox_bn_fromU8BE+0x82>
 81022f6:	7804      	ldrb	r4, [r0, #0]
 81022f8:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
 81022fc:	2401      	movs	r4, #1
 81022fe:	428c      	cmp	r4, r1
 8102300:	d20b      	bcs.n	810231a <cmox_bn_fromU8BE+0x82>
 8102302:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8102306:	5d06      	ldrb	r6, [r0, r4]
 8102308:	1c64      	adds	r4, r4, #1
 810230a:	ea46 2605 	orr.w	r6, r6, r5, lsl #8
 810230e:	f842 6023 	str.w	r6, [r2, r3, lsl #2]
 8102312:	e7f4      	b.n	81022fe <cmox_bn_fromU8BE+0x66>
 8102314:	4610      	mov	r0, r2
 8102316:	f7ff fe94 	bl	8102042 <cmox_bn_init>
 810231a:	2000      	movs	r0, #0
 810231c:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

0810231e <cmox_bn_fromU8LE>:
 810231e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8102320:	2300      	movs	r3, #0
 8102322:	b10a      	cbz	r2, 8102328 <cmox_bn_fromU8LE+0xa>
 8102324:	b910      	cbnz	r0, 810232c <cmox_bn_fromU8LE+0xe>
 8102326:	b109      	cbz	r1, 810232c <cmox_bn_fromU8LE+0xe>
 8102328:	2001      	movs	r0, #1
 810232a:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 810232c:	6814      	ldr	r4, [r2, #0]
 810232e:	1ccd      	adds	r5, r1, #3
 8102330:	ebb4 0f95 	cmp.w	r4, r5, lsr #2
 8102334:	d201      	bcs.n	810233a <cmox_bn_fromU8LE+0x1c>
 8102336:	2003      	movs	r0, #3
 8102338:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 810233a:	b3b9      	cbz	r1, 81023ac <cmox_bn_fromU8LE+0x8e>
 810233c:	2400      	movs	r4, #0
 810233e:	e010      	b.n	8102362 <cmox_bn_fromU8LE+0x44>
 8102340:	1906      	adds	r6, r0, r4
 8102342:	f896 c002 	ldrb.w	ip, [r6, #2]
 8102346:	78f7      	ldrb	r7, [r6, #3]
 8102348:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 810234c:	ea4f 4c0c 	mov.w	ip, ip, lsl #16
 8102350:	ea4c 6c07 	orr.w	ip, ip, r7, lsl #24
 8102354:	7877      	ldrb	r7, [r6, #1]
 8102356:	7836      	ldrb	r6, [r6, #0]
 8102358:	1d24      	adds	r4, r4, #4
 810235a:	ea4c 2707 	orr.w	r7, ip, r7, lsl #8
 810235e:	433e      	orrs	r6, r7
 8102360:	606e      	str	r6, [r5, #4]
 8102362:	08a5      	lsrs	r5, r4, #2
 8102364:	1ece      	subs	r6, r1, #3
 8102366:	42b4      	cmp	r4, r6
 8102368:	d3ea      	bcc.n	8102340 <cmox_bn_fromU8LE+0x22>
 810236a:	f011 0f03 	tst.w	r1, #3
 810236e:	d011      	beq.n	8102394 <cmox_bn_fromU8LE+0x76>
 8102370:	1c6d      	adds	r5, r5, #1
 8102372:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 8102376:	e00b      	b.n	8102390 <cmox_bn_fromU8LE+0x72>
 8102378:	5d07      	ldrb	r7, [r0, r4]
 810237a:	f852 6025 	ldr.w	r6, [r2, r5, lsl #2]
 810237e:	ea4f 0cc3 	mov.w	ip, r3, lsl #3
 8102382:	fa07 f70c 	lsl.w	r7, r7, ip
 8102386:	433e      	orrs	r6, r7
 8102388:	f842 6025 	str.w	r6, [r2, r5, lsl #2]
 810238c:	1c5b      	adds	r3, r3, #1
 810238e:	1c64      	adds	r4, r4, #1
 8102390:	428c      	cmp	r4, r1
 8102392:	d3f1      	bcc.n	8102378 <cmox_bn_fromU8LE+0x5a>
 8102394:	1ce4      	adds	r4, r4, #3
 8102396:	08a4      	lsrs	r4, r4, #2
 8102398:	1c64      	adds	r4, r4, #1
 810239a:	2100      	movs	r1, #0
 810239c:	6810      	ldr	r0, [r2, #0]
 810239e:	42a0      	cmp	r0, r4
 81023a0:	bf24      	itt	cs
 81023a2:	f842 1024 	strcs.w	r1, [r2, r4, lsl #2]
 81023a6:	1c64      	addcs	r4, r4, #1
 81023a8:	d2f8      	bcs.n	810239c <cmox_bn_fromU8LE+0x7e>
 81023aa:	e002      	b.n	81023b2 <cmox_bn_fromU8LE+0x94>
 81023ac:	4610      	mov	r0, r2
 81023ae:	f7ff fe48 	bl	8102042 <cmox_bn_init>
 81023b2:	2000      	movs	r0, #0
 81023b4:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

081023b6 <cmox_ECC_InvertModN>:
 81023b6:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 81023b8:	0004      	movs	r4, r0
 81023ba:	460d      	mov	r5, r1
 81023bc:	4616      	mov	r6, r2
 81023be:	461f      	mov	r7, r3
 81023c0:	bf18      	it	ne
 81023c2:	2d00      	cmpne	r5, #0
 81023c4:	d00d      	beq.n	81023e2 <cmox_ECC_InvertModN+0x2c>
 81023c6:	2e00      	cmp	r6, #0
 81023c8:	bf18      	it	ne
 81023ca:	2f00      	cmpne	r7, #0
 81023cc:	d009      	beq.n	81023e2 <cmox_ECC_InvertModN+0x2c>
 81023ce:	69a0      	ldr	r0, [r4, #24]
 81023d0:	682a      	ldr	r2, [r5, #0]
 81023d2:	6801      	ldr	r1, [r0, #0]
 81023d4:	6888      	ldr	r0, [r1, #8]
 81023d6:	6801      	ldr	r1, [r0, #0]
 81023d8:	428a      	cmp	r2, r1
 81023da:	bf24      	itt	cs
 81023dc:	683b      	ldrcs	r3, [r7, #0]
 81023de:	428b      	cmpcs	r3, r1
 81023e0:	d201      	bcs.n	81023e6 <cmox_ECC_InvertModN+0x30>
 81023e2:	2001      	movs	r0, #1
 81023e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 81023e6:	463a      	mov	r2, r7
 81023e8:	f06f 0101 	mvn.w	r1, #1
 81023ec:	f7fe fa55 	bl	810089a <cmox_AddBN_Int>
 81023f0:	69a0      	ldr	r0, [r4, #24]
 81023f2:	4622      	mov	r2, r4
 81023f4:	f8d0 c01c 	ldr.w	ip, [r0, #28]
 81023f8:	6a20      	ldr	r0, [r4, #32]
 81023fa:	9002      	str	r0, [sp, #8]
 81023fc:	69e1      	ldr	r1, [r4, #28]
 81023fe:	9600      	str	r6, [sp, #0]
 8102400:	4628      	mov	r0, r5
 8102402:	9101      	str	r1, [sp, #4]
 8102404:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8102408:	f8dc 4000 	ldr.w	r4, [ip]
 810240c:	4639      	mov	r1, r7
 810240e:	47a0      	blx	r4
 8102410:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08102412 <cmox_ECC_InitCurve>:
 8102412:	2800      	cmp	r0, #0
 8102414:	b510      	push	{r4, lr}
 8102416:	bf18      	it	ne
 8102418:	2900      	cmpne	r1, #0
 810241a:	d101      	bne.n	8102420 <cmox_ECC_InitCurve+0xe>
 810241c:	2001      	movs	r0, #1
 810241e:	bd10      	pop	{r4, pc}
 8102420:	2400      	movs	r4, #0
 8102422:	6144      	str	r4, [r0, #20]
 8102424:	6181      	str	r1, [r0, #24]
 8102426:	61c2      	str	r2, [r0, #28]
 8102428:	6203      	str	r3, [r0, #32]
 810242a:	2000      	movs	r0, #0
 810242c:	bd10      	pop	{r4, pc}

0810242e <cmox_ECC_InitCurveModDomainP>:
 810242e:	4602      	mov	r2, r0
 8102430:	6990      	ldr	r0, [r2, #24]
 8102432:	69d3      	ldr	r3, [r2, #28]
 8102434:	6800      	ldr	r0, [r0, #0]
 8102436:	6841      	ldr	r1, [r0, #4]
 8102438:	6800      	ldr	r0, [r0, #0]
 810243a:	f7fe bb2c 	b.w	8100a96 <cmox_ModularBN_InitWithR2>

0810243e <cmox_ECC_InitCurveModDomainN>:
 810243e:	4602      	mov	r2, r0
 8102440:	6990      	ldr	r0, [r2, #24]
 8102442:	69d3      	ldr	r3, [r2, #28]
 8102444:	6800      	ldr	r0, [r0, #0]
 8102446:	68c1      	ldr	r1, [r0, #12]
 8102448:	6880      	ldr	r0, [r0, #8]
 810244a:	f7fe bb24 	b.w	8100a96 <cmox_ModularBN_InitWithR2>

0810244e <cmox_ECC_DeInitCurveModDomain>:
 810244e:	69c1      	ldr	r1, [r0, #28]
 8102450:	f7fe bba8 	b.w	8100ba4 <cmox_ModularBN_DeinitWithR2>

08102454 <cmox_ECC_AllocPoint>:
 8102454:	b570      	push	{r4, r5, r6, lr}
 8102456:	4605      	mov	r5, r0
 8102458:	69e8      	ldr	r0, [r5, #28]
 810245a:	460e      	mov	r6, r1
 810245c:	2214      	movs	r2, #20
 810245e:	f001 fe77 	bl	8104150 <cmox_membuf_alloc>
 8102462:	0004      	movs	r4, r0
 8102464:	d149      	bne.n	81024fa <cmox_ECC_AllocPoint+0xa6>
 8102466:	6831      	ldr	r1, [r6, #0]
 8102468:	2000      	movs	r0, #0
 810246a:	6108      	str	r0, [r1, #16]
 810246c:	69aa      	ldr	r2, [r5, #24]
 810246e:	6810      	ldr	r0, [r2, #0]
 8102470:	6803      	ldr	r3, [r0, #0]
 8102472:	69e8      	ldr	r0, [r5, #28]
 8102474:	681a      	ldr	r2, [r3, #0]
 8102476:	f7ff fdad 	bl	8101fd4 <cmox_bn_alloc>
 810247a:	0004      	movs	r4, r0
 810247c:	d138      	bne.n	81024f0 <cmox_ECC_AllocPoint+0x9c>
 810247e:	69a8      	ldr	r0, [r5, #24]
 8102480:	6801      	ldr	r1, [r0, #0]
 8102482:	6830      	ldr	r0, [r6, #0]
 8102484:	680a      	ldr	r2, [r1, #0]
 8102486:	f100 0108 	add.w	r1, r0, #8
 810248a:	69e8      	ldr	r0, [r5, #28]
 810248c:	6812      	ldr	r2, [r2, #0]
 810248e:	f7ff fda1 	bl	8101fd4 <cmox_bn_alloc>
 8102492:	0004      	movs	r4, r0
 8102494:	d128      	bne.n	81024e8 <cmox_ECC_AllocPoint+0x94>
 8102496:	69a8      	ldr	r0, [r5, #24]
 8102498:	6831      	ldr	r1, [r6, #0]
 810249a:	6842      	ldr	r2, [r0, #4]
 810249c:	69d3      	ldr	r3, [r2, #28]
 810249e:	2b03      	cmp	r3, #3
 81024a0:	d030      	beq.n	8102504 <cmox_ECC_AllocPoint+0xb0>
 81024a2:	6800      	ldr	r0, [r0, #0]
 81024a4:	1d09      	adds	r1, r1, #4
 81024a6:	6802      	ldr	r2, [r0, #0]
 81024a8:	69e8      	ldr	r0, [r5, #28]
 81024aa:	6812      	ldr	r2, [r2, #0]
 81024ac:	f7ff fd92 	bl	8101fd4 <cmox_bn_alloc>
 81024b0:	0004      	movs	r4, r0
 81024b2:	d113      	bne.n	81024dc <cmox_ECC_AllocPoint+0x88>
 81024b4:	69a8      	ldr	r0, [r5, #24]
 81024b6:	6831      	ldr	r1, [r6, #0]
 81024b8:	6842      	ldr	r2, [r0, #4]
 81024ba:	69d3      	ldr	r3, [r2, #28]
 81024bc:	2b02      	cmp	r3, #2
 81024be:	d11e      	bne.n	81024fe <cmox_ECC_AllocPoint+0xaa>
 81024c0:	6800      	ldr	r0, [r0, #0]
 81024c2:	310c      	adds	r1, #12
 81024c4:	6802      	ldr	r2, [r0, #0]
 81024c6:	69e8      	ldr	r0, [r5, #28]
 81024c8:	6812      	ldr	r2, [r2, #0]
 81024ca:	f7ff fd83 	bl	8101fd4 <cmox_bn_alloc>
 81024ce:	0004      	movs	r4, r0
 81024d0:	d013      	beq.n	81024fa <cmox_ECC_AllocPoint+0xa6>
 81024d2:	6830      	ldr	r0, [r6, #0]
 81024d4:	1d01      	adds	r1, r0, #4
 81024d6:	69e8      	ldr	r0, [r5, #28]
 81024d8:	f7ff fd87 	bl	8101fea <cmox_bn_free>
 81024dc:	6830      	ldr	r0, [r6, #0]
 81024de:	f100 0108 	add.w	r1, r0, #8
 81024e2:	69e8      	ldr	r0, [r5, #28]
 81024e4:	f7ff fd81 	bl	8101fea <cmox_bn_free>
 81024e8:	6831      	ldr	r1, [r6, #0]
 81024ea:	69e8      	ldr	r0, [r5, #28]
 81024ec:	f7ff fd7d 	bl	8101fea <cmox_bn_free>
 81024f0:	69e8      	ldr	r0, [r5, #28]
 81024f2:	2214      	movs	r2, #20
 81024f4:	4631      	mov	r1, r6
 81024f6:	f001 fe4a 	bl	810418e <cmox_membuf_free>
 81024fa:	4620      	mov	r0, r4
 81024fc:	bd70      	pop	{r4, r5, r6, pc}
 81024fe:	2000      	movs	r0, #0
 8102500:	60c8      	str	r0, [r1, #12]
 8102502:	e7fa      	b.n	81024fa <cmox_ECC_AllocPoint+0xa6>
 8102504:	2200      	movs	r2, #0
 8102506:	604a      	str	r2, [r1, #4]
 8102508:	60ca      	str	r2, [r1, #12]
 810250a:	e7f6      	b.n	81024fa <cmox_ECC_AllocPoint+0xa6>

0810250c <cmox_ECC_FreePoint>:
 810250c:	b570      	push	{r4, r5, r6, lr}
 810250e:	460c      	mov	r4, r1
 8102510:	2500      	movs	r5, #0
 8102512:	2c00      	cmp	r4, #0
 8102514:	4606      	mov	r6, r0
 8102516:	bf1a      	itte	ne
 8102518:	6820      	ldrne	r0, [r4, #0]
 810251a:	2800      	cmpne	r0, #0
 810251c:	2501      	moveq	r5, #1
 810251e:	d023      	beq.n	8102568 <cmox_ECC_FreePoint+0x5c>
 8102520:	69b1      	ldr	r1, [r6, #24]
 8102522:	684a      	ldr	r2, [r1, #4]
 8102524:	69d3      	ldr	r3, [r2, #28]
 8102526:	2b02      	cmp	r3, #2
 8102528:	d104      	bne.n	8102534 <cmox_ECC_FreePoint+0x28>
 810252a:	f100 010c 	add.w	r1, r0, #12
 810252e:	69f0      	ldr	r0, [r6, #28]
 8102530:	f7ff fd5b 	bl	8101fea <cmox_bn_free>
 8102534:	69b0      	ldr	r0, [r6, #24]
 8102536:	6841      	ldr	r1, [r0, #4]
 8102538:	69c8      	ldr	r0, [r1, #28]
 810253a:	2803      	cmp	r0, #3
 810253c:	d004      	beq.n	8102548 <cmox_ECC_FreePoint+0x3c>
 810253e:	6821      	ldr	r1, [r4, #0]
 8102540:	69f0      	ldr	r0, [r6, #28]
 8102542:	1d09      	adds	r1, r1, #4
 8102544:	f7ff fd51 	bl	8101fea <cmox_bn_free>
 8102548:	6820      	ldr	r0, [r4, #0]
 810254a:	f100 0108 	add.w	r1, r0, #8
 810254e:	69f0      	ldr	r0, [r6, #28]
 8102550:	f7ff fd4b 	bl	8101fea <cmox_bn_free>
 8102554:	6821      	ldr	r1, [r4, #0]
 8102556:	69f0      	ldr	r0, [r6, #28]
 8102558:	f7ff fd47 	bl	8101fea <cmox_bn_free>
 810255c:	69f0      	ldr	r0, [r6, #28]
 810255e:	2214      	movs	r2, #20
 8102560:	4621      	mov	r1, r4
 8102562:	f001 fe14 	bl	810418e <cmox_membuf_free>
 8102566:	6025      	str	r5, [r4, #0]
 8102568:	4628      	mov	r0, r5
 810256a:	bd70      	pop	{r4, r5, r6, pc}

0810256c <cmox_ECC_CondCopyPoint>:
 810256c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810256e:	460f      	mov	r7, r1
 8102570:	2500      	movs	r5, #0
 8102572:	4616      	mov	r6, r2
 8102574:	2f00      	cmp	r7, #0
 8102576:	4604      	mov	r4, r0
 8102578:	bf18      	it	ne
 810257a:	2e00      	cmpne	r6, #0
 810257c:	d00b      	beq.n	8102596 <cmox_ECC_CondCopyPoint+0x2a>
 810257e:	6839      	ldr	r1, [r7, #0]
 8102580:	2900      	cmp	r1, #0
 8102582:	bf1c      	itt	ne
 8102584:	68b8      	ldrne	r0, [r7, #8]
 8102586:	2800      	cmpne	r0, #0
 8102588:	d005      	beq.n	8102596 <cmox_ECC_CondCopyPoint+0x2a>
 810258a:	6832      	ldr	r2, [r6, #0]
 810258c:	2a00      	cmp	r2, #0
 810258e:	bf1c      	itt	ne
 8102590:	68b0      	ldrne	r0, [r6, #8]
 8102592:	2800      	cmpne	r0, #0
 8102594:	d101      	bne.n	810259a <cmox_ECC_CondCopyPoint+0x2e>
 8102596:	2501      	movs	r5, #1
 8102598:	e019      	b.n	81025ce <cmox_ECC_CondCopyPoint+0x62>
 810259a:	693b      	ldr	r3, [r7, #16]
 810259c:	4620      	mov	r0, r4
 810259e:	6133      	str	r3, [r6, #16]
 81025a0:	f7ff fd5e 	bl	8102060 <cmox_bn_cCopy>
 81025a4:	6879      	ldr	r1, [r7, #4]
 81025a6:	2900      	cmp	r1, #0
 81025a8:	bf1f      	itttt	ne
 81025aa:	6872      	ldrne	r2, [r6, #4]
 81025ac:	2a00      	cmpne	r2, #0
 81025ae:	4620      	movne	r0, r4
 81025b0:	f7ff fd56 	blne	8102060 <cmox_bn_cCopy>
 81025b4:	68b2      	ldr	r2, [r6, #8]
 81025b6:	68b9      	ldr	r1, [r7, #8]
 81025b8:	4620      	mov	r0, r4
 81025ba:	f7ff fd51 	bl	8102060 <cmox_bn_cCopy>
 81025be:	68f9      	ldr	r1, [r7, #12]
 81025c0:	2900      	cmp	r1, #0
 81025c2:	bf1f      	itttt	ne
 81025c4:	68f2      	ldrne	r2, [r6, #12]
 81025c6:	2a00      	cmpne	r2, #0
 81025c8:	4620      	movne	r0, r4
 81025ca:	f7ff fd49 	blne	8102060 <cmox_bn_cCopy>
 81025ce:	4628      	mov	r0, r5
 81025d0:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

081025d2 <cmox_ECC_CondSymmetricPoint>:
 81025d2:	b570      	push	{r4, r5, r6, lr}
 81025d4:	460e      	mov	r6, r1
 81025d6:	69b1      	ldr	r1, [r6, #24]
 81025d8:	4615      	mov	r5, r2
 81025da:	4604      	mov	r4, r0
 81025dc:	680a      	ldr	r2, [r1, #0]
 81025de:	2001      	movs	r0, #1
 81025e0:	69d3      	ldr	r3, [r2, #28]
 81025e2:	b13b      	cbz	r3, 81025f4 <cmox_ECC_CondSymmetricPoint+0x22>
 81025e4:	2b02      	cmp	r3, #2
 81025e6:	d001      	beq.n	81025ec <cmox_ECC_CondSymmetricPoint+0x1a>
 81025e8:	d307      	bcc.n	81025fa <cmox_ECC_CondSymmetricPoint+0x28>
 81025ea:	bd70      	pop	{r4, r5, r6, pc}
 81025ec:	6849      	ldr	r1, [r1, #4]
 81025ee:	69cb      	ldr	r3, [r1, #28]
 81025f0:	2b03      	cmp	r3, #3
 81025f2:	d014      	beq.n	810261e <cmox_ECC_CondSymmetricPoint+0x4c>
 81025f4:	6812      	ldr	r2, [r2, #0]
 81025f6:	6869      	ldr	r1, [r5, #4]
 81025f8:	e00c      	b.n	8102614 <cmox_ECC_CondSymmetricPoint+0x42>
 81025fa:	6812      	ldr	r2, [r2, #0]
 81025fc:	6829      	ldr	r1, [r5, #0]
 81025fe:	4620      	mov	r0, r4
 8102600:	f7fe fa1b 	bl	8100a3a <cmox_FieldBN_CondNegate>
 8102604:	69b1      	ldr	r1, [r6, #24]
 8102606:	684a      	ldr	r2, [r1, #4]
 8102608:	69d3      	ldr	r3, [r2, #28]
 810260a:	2b02      	cmp	r3, #2
 810260c:	d107      	bne.n	810261e <cmox_ECC_CondSymmetricPoint+0x4c>
 810260e:	6808      	ldr	r0, [r1, #0]
 8102610:	68e9      	ldr	r1, [r5, #12]
 8102612:	6802      	ldr	r2, [r0, #0]
 8102614:	4620      	mov	r0, r4
 8102616:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 810261a:	f7fe ba0e 	b.w	8100a3a <cmox_FieldBN_CondNegate>
 810261e:	bd70      	pop	{r4, r5, r6, pc}

08102620 <cmox_ECC_SetPointAtInfinity>:
 8102620:	b570      	push	{r4, r5, r6, lr}
 8102622:	4606      	mov	r6, r0
 8102624:	460d      	mov	r5, r1
 8102626:	6928      	ldr	r0, [r5, #16]
 8102628:	2400      	movs	r4, #0
 810262a:	f040 0001 	orr.w	r0, r0, #1
 810262e:	6128      	str	r0, [r5, #16]
 8102630:	69b1      	ldr	r1, [r6, #24]
 8102632:	6808      	ldr	r0, [r1, #0]
 8102634:	69c2      	ldr	r2, [r0, #28]
 8102636:	b11a      	cbz	r2, 8102640 <cmox_ECC_SetPointAtInfinity+0x20>
 8102638:	2a02      	cmp	r2, #2
 810263a:	d008      	beq.n	810264e <cmox_ECC_SetPointAtInfinity+0x2e>
 810263c:	d318      	bcc.n	8102670 <cmox_ECC_SetPointAtInfinity+0x50>
 810263e:	e02d      	b.n	810269c <cmox_ECC_SetPointAtInfinity+0x7c>
 8102640:	6828      	ldr	r0, [r5, #0]
 8102642:	2100      	movs	r1, #0
 8102644:	f7ff fcfd 	bl	8102042 <cmox_bn_init>
 8102648:	6868      	ldr	r0, [r5, #4]
 810264a:	2101      	movs	r1, #1
 810264c:	e00b      	b.n	8102666 <cmox_ECC_SetPointAtInfinity+0x46>
 810264e:	6849      	ldr	r1, [r1, #4]
 8102650:	6828      	ldr	r0, [r5, #0]
 8102652:	69ca      	ldr	r2, [r1, #28]
 8102654:	2a03      	cmp	r2, #3
 8102656:	bf08      	it	eq
 8102658:	2101      	moveq	r1, #1
 810265a:	d004      	beq.n	8102666 <cmox_ECC_SetPointAtInfinity+0x46>
 810265c:	2100      	movs	r1, #0
 810265e:	f7ff fcf0 	bl	8102042 <cmox_bn_init>
 8102662:	2101      	movs	r1, #1
 8102664:	6868      	ldr	r0, [r5, #4]
 8102666:	f7ff fcec 	bl	8102042 <cmox_bn_init>
 810266a:	2100      	movs	r1, #0
 810266c:	68a8      	ldr	r0, [r5, #8]
 810266e:	e012      	b.n	8102696 <cmox_ECC_SetPointAtInfinity+0x76>
 8102670:	6828      	ldr	r0, [r5, #0]
 8102672:	2100      	movs	r1, #0
 8102674:	f7ff fce5 	bl	8102042 <cmox_bn_init>
 8102678:	6868      	ldr	r0, [r5, #4]
 810267a:	2101      	movs	r1, #1
 810267c:	f7ff fce1 	bl	8102042 <cmox_bn_init>
 8102680:	68a8      	ldr	r0, [r5, #8]
 8102682:	2101      	movs	r1, #1
 8102684:	f7ff fcdd 	bl	8102042 <cmox_bn_init>
 8102688:	69b0      	ldr	r0, [r6, #24]
 810268a:	6841      	ldr	r1, [r0, #4]
 810268c:	69c8      	ldr	r0, [r1, #28]
 810268e:	2802      	cmp	r0, #2
 8102690:	d105      	bne.n	810269e <cmox_ECC_SetPointAtInfinity+0x7e>
 8102692:	2100      	movs	r1, #0
 8102694:	68e8      	ldr	r0, [r5, #12]
 8102696:	f7ff fcd4 	bl	8102042 <cmox_bn_init>
 810269a:	e000      	b.n	810269e <cmox_ECC_SetPointAtInfinity+0x7e>
 810269c:	2401      	movs	r4, #1
 810269e:	4620      	mov	r0, r4
 81026a0:	bd70      	pop	{r4, r5, r6, pc}

081026a2 <cmox_ECC_CondImportPoint>:
 81026a2:	e92d 4bfc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, fp, lr}
 81026a6:	4616      	mov	r6, r2
 81026a8:	2500      	movs	r5, #0
 81026aa:	2e00      	cmp	r6, #0
 81026ac:	4680      	mov	r8, r0
 81026ae:	468b      	mov	fp, r1
 81026b0:	461c      	mov	r4, r3
 81026b2:	bf1c      	itt	ne
 81026b4:	9f0b      	ldrne	r7, [sp, #44]	@ 0x2c
 81026b6:	2f00      	cmpne	r7, #0
 81026b8:	d005      	beq.n	81026c6 <cmox_ECC_CondImportPoint+0x24>
 81026ba:	6839      	ldr	r1, [r7, #0]
 81026bc:	2900      	cmp	r1, #0
 81026be:	bf1c      	itt	ne
 81026c0:	68b8      	ldrne	r0, [r7, #8]
 81026c2:	2800      	cmpne	r0, #0
 81026c4:	d103      	bne.n	81026ce <cmox_ECC_CondImportPoint+0x2c>
 81026c6:	2501      	movs	r5, #1
 81026c8:	4628      	mov	r0, r5
 81026ca:	e8bd 8bf6 	ldmia.w	sp!, {r1, r2, r4, r5, r6, r7, r8, r9, fp, pc}
 81026ce:	980a      	ldr	r0, [sp, #40]	@ 0x28
 81026d0:	6138      	str	r0, [r7, #16]
 81026d2:	684a      	ldr	r2, [r1, #4]
 81026d4:	6831      	ldr	r1, [r6, #0]
 81026d6:	4640      	mov	r0, r8
 81026d8:	f7fe fa70 	bl	8100bbc <cmox_mathUtils_mux>
 81026dc:	683a      	ldr	r2, [r7, #0]
 81026de:	6050      	str	r0, [r2, #4]
 81026e0:	6878      	ldr	r0, [r7, #4]
 81026e2:	b138      	cbz	r0, 81026f4 <cmox_ECC_CondImportPoint+0x52>
 81026e4:	f856 102b 	ldr.w	r1, [r6, fp, lsl #2]
 81026e8:	6842      	ldr	r2, [r0, #4]
 81026ea:	4640      	mov	r0, r8
 81026ec:	f7fe fa66 	bl	8100bbc <cmox_mathUtils_mux>
 81026f0:	6879      	ldr	r1, [r7, #4]
 81026f2:	6048      	str	r0, [r1, #4]
 81026f4:	68b8      	ldr	r0, [r7, #8]
 81026f6:	2c00      	cmp	r4, #0
 81026f8:	6842      	ldr	r2, [r0, #4]
 81026fa:	4640      	mov	r0, r8
 81026fc:	bf0c      	ite	eq
 81026fe:	2101      	moveq	r1, #1
 8102700:	6821      	ldrne	r1, [r4, #0]
 8102702:	f7fe fa5b 	bl	8100bbc <cmox_mathUtils_mux>
 8102706:	68b9      	ldr	r1, [r7, #8]
 8102708:	6048      	str	r0, [r1, #4]
 810270a:	68f8      	ldr	r0, [r7, #12]
 810270c:	b138      	cbz	r0, 810271e <cmox_ECC_CondImportPoint+0x7c>
 810270e:	f856 103b 	ldr.w	r1, [r6, fp, lsl #3]
 8102712:	6842      	ldr	r2, [r0, #4]
 8102714:	4640      	mov	r0, r8
 8102716:	f7fe fa51 	bl	8100bbc <cmox_mathUtils_mux>
 810271a:	68f9      	ldr	r1, [r7, #12]
 810271c:	6048      	str	r0, [r1, #4]
 810271e:	f04f 0902 	mov.w	r9, #2
 8102722:	1f36      	subs	r6, r6, #4
 8102724:	e015      	b.n	8102752 <cmox_ECC_CondImportPoint+0xb0>
 8102726:	4640      	mov	r0, r8
 8102728:	f7fe fa48 	bl	8100bbc <cmox_mathUtils_mux>
 810272c:	68b9      	ldr	r1, [r7, #8]
 810272e:	f841 0029 	str.w	r0, [r1, r9, lsl #2]
 8102732:	68f8      	ldr	r0, [r7, #12]
 8102734:	b158      	cbz	r0, 810274e <cmox_ECC_CondImportPoint+0xac>
 8102736:	f850 2029 	ldr.w	r2, [r0, r9, lsl #2]
 810273a:	eb09 004b 	add.w	r0, r9, fp, lsl #1
 810273e:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8102742:	4640      	mov	r0, r8
 8102744:	f7fe fa3a 	bl	8100bbc <cmox_mathUtils_mux>
 8102748:	68f9      	ldr	r1, [r7, #12]
 810274a:	f841 0029 	str.w	r0, [r1, r9, lsl #2]
 810274e:	f109 0901 	add.w	r9, r9, #1
 8102752:	45cb      	cmp	fp, r9
 8102754:	d3b8      	bcc.n	81026c8 <cmox_ECC_CondImportPoint+0x26>
 8102756:	6838      	ldr	r0, [r7, #0]
 8102758:	f856 1029 	ldr.w	r1, [r6, r9, lsl #2]
 810275c:	f850 2029 	ldr.w	r2, [r0, r9, lsl #2]
 8102760:	4640      	mov	r0, r8
 8102762:	f7fe fa2b 	bl	8100bbc <cmox_mathUtils_mux>
 8102766:	6839      	ldr	r1, [r7, #0]
 8102768:	f841 0029 	str.w	r0, [r1, r9, lsl #2]
 810276c:	6878      	ldr	r0, [r7, #4]
 810276e:	b158      	cbz	r0, 8102788 <cmox_ECC_CondImportPoint+0xe6>
 8102770:	f850 2029 	ldr.w	r2, [r0, r9, lsl #2]
 8102774:	eb0b 0009 	add.w	r0, fp, r9
 8102778:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 810277c:	4640      	mov	r0, r8
 810277e:	f7fe fa1d 	bl	8100bbc <cmox_mathUtils_mux>
 8102782:	6879      	ldr	r1, [r7, #4]
 8102784:	f841 0029 	str.w	r0, [r1, r9, lsl #2]
 8102788:	68b8      	ldr	r0, [r7, #8]
 810278a:	2c00      	cmp	r4, #0
 810278c:	f850 2029 	ldr.w	r2, [r0, r9, lsl #2]
 8102790:	bf0e      	itee	eq
 8102792:	2100      	moveq	r1, #0
 8102794:	1f20      	subne	r0, r4, #4
 8102796:	f850 1029 	ldrne.w	r1, [r0, r9, lsl #2]
 810279a:	e7c4      	b.n	8102726 <cmox_ECC_CondImportPoint+0x84>

0810279c <cmox_ECC_PointToModularDomain>:
 810279c:	b570      	push	{r4, r5, r6, lr}
 810279e:	4604      	mov	r4, r0
 81027a0:	69a0      	ldr	r0, [r4, #24]
 81027a2:	460d      	mov	r5, r1
 81027a4:	2600      	movs	r6, #0
 81027a6:	6841      	ldr	r1, [r0, #4]
 81027a8:	69c8      	ldr	r0, [r1, #28]
 81027aa:	2803      	cmp	r0, #3
 81027ac:	d818      	bhi.n	81027e0 <cmox_ECC_PointToModularDomain+0x44>
 81027ae:	e8df f000 	tbb	[pc, r0]
 81027b2:	0707      	.short	0x0707
 81027b4:	0c02      	.short	0x0c02
 81027b6:	6a22      	ldr	r2, [r4, #32]
 81027b8:	68e8      	ldr	r0, [r5, #12]
 81027ba:	4621      	mov	r1, r4
 81027bc:	f7fe f984 	bl	8100ac8 <cmox_ModularBN_Enter>
 81027c0:	6a22      	ldr	r2, [r4, #32]
 81027c2:	6868      	ldr	r0, [r5, #4]
 81027c4:	4621      	mov	r1, r4
 81027c6:	f7fe f97f 	bl	8100ac8 <cmox_ModularBN_Enter>
 81027ca:	6a22      	ldr	r2, [r4, #32]
 81027cc:	6828      	ldr	r0, [r5, #0]
 81027ce:	4621      	mov	r1, r4
 81027d0:	f7fe f97a 	bl	8100ac8 <cmox_ModularBN_Enter>
 81027d4:	6a22      	ldr	r2, [r4, #32]
 81027d6:	68a8      	ldr	r0, [r5, #8]
 81027d8:	4621      	mov	r1, r4
 81027da:	f7fe f975 	bl	8100ac8 <cmox_ModularBN_Enter>
 81027de:	e000      	b.n	81027e2 <cmox_ECC_PointToModularDomain+0x46>
 81027e0:	2601      	movs	r6, #1
 81027e2:	6928      	ldr	r0, [r5, #16]
 81027e4:	f040 0004 	orr.w	r0, r0, #4
 81027e8:	6128      	str	r0, [r5, #16]
 81027ea:	4630      	mov	r0, r6
 81027ec:	bd70      	pop	{r4, r5, r6, pc}
	...

081027f0 <cmox_ECC_PointFromModularDomain>:
 81027f0:	b538      	push	{r3, r4, r5, lr}
 81027f2:	4604      	mov	r4, r0
 81027f4:	69a0      	ldr	r0, [r4, #24]
 81027f6:	460d      	mov	r5, r1
 81027f8:	6841      	ldr	r1, [r0, #4]
 81027fa:	69c8      	ldr	r0, [r1, #28]
 81027fc:	2803      	cmp	r0, #3
 81027fe:	d81f      	bhi.n	8102840 <cmox_ECC_PointFromModularDomain+0x50>
 8102800:	e8df f000 	tbb	[pc, r0]
 8102804:	10020909 	.word	0x10020909
 8102808:	6a23      	ldr	r3, [r4, #32]
 810280a:	69e2      	ldr	r2, [r4, #28]
 810280c:	68e8      	ldr	r0, [r5, #12]
 810280e:	4621      	mov	r1, r4
 8102810:	f7fe f962 	bl	8100ad8 <cmox_ModularBN_Exit>
 8102814:	b9a8      	cbnz	r0, 8102842 <cmox_ECC_PointFromModularDomain+0x52>
 8102816:	6a23      	ldr	r3, [r4, #32]
 8102818:	69e2      	ldr	r2, [r4, #28]
 810281a:	6868      	ldr	r0, [r5, #4]
 810281c:	4621      	mov	r1, r4
 810281e:	f7fe f95b 	bl	8100ad8 <cmox_ModularBN_Exit>
 8102822:	b970      	cbnz	r0, 8102842 <cmox_ECC_PointFromModularDomain+0x52>
 8102824:	6a23      	ldr	r3, [r4, #32]
 8102826:	69e2      	ldr	r2, [r4, #28]
 8102828:	6828      	ldr	r0, [r5, #0]
 810282a:	4621      	mov	r1, r4
 810282c:	f7fe f954 	bl	8100ad8 <cmox_ModularBN_Exit>
 8102830:	b938      	cbnz	r0, 8102842 <cmox_ECC_PointFromModularDomain+0x52>
 8102832:	6a23      	ldr	r3, [r4, #32]
 8102834:	69e2      	ldr	r2, [r4, #28]
 8102836:	68a8      	ldr	r0, [r5, #8]
 8102838:	4621      	mov	r1, r4
 810283a:	f7fe f94d 	bl	8100ad8 <cmox_ModularBN_Exit>
 810283e:	e000      	b.n	8102842 <cmox_ECC_PointFromModularDomain+0x52>
 8102840:	2001      	movs	r0, #1
 8102842:	6929      	ldr	r1, [r5, #16]
 8102844:	f021 0104 	bic.w	r1, r1, #4
 8102848:	6129      	str	r1, [r5, #16]
 810284a:	bd32      	pop	{r1, r4, r5, pc}

0810284c <cmox_ECC_PointValidation>:
 810284c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810284e:	4604      	mov	r4, r0
 8102850:	2600      	movs	r6, #0
 8102852:	460d      	mov	r5, r1
 8102854:	2c00      	cmp	r4, #0
 8102856:	bf18      	it	ne
 8102858:	2d00      	cmpne	r5, #0
 810285a:	d05e      	beq.n	810291a <cmox_ECC_PointValidation+0xce>
 810285c:	7c28      	ldrb	r0, [r5, #16]
 810285e:	2100      	movs	r1, #0
 8102860:	f000 0001 	and.w	r0, r0, #1
 8102864:	f7fe f9b2 	bl	8100bcc <cmox_mathUtils_neq>
 8102868:	2801      	cmp	r0, #1
 810286a:	d056      	beq.n	810291a <cmox_ECC_PointValidation+0xce>
 810286c:	68a8      	ldr	r0, [r5, #8]
 810286e:	2100      	movs	r1, #0
 8102870:	f7ff fc74 	bl	810215c <cmox_bn_cmpUint>
 8102874:	2801      	cmp	r0, #1
 8102876:	d050      	beq.n	810291a <cmox_ECC_PointValidation+0xce>
 8102878:	69a0      	ldr	r0, [r4, #24]
 810287a:	6801      	ldr	r1, [r0, #0]
 810287c:	6828      	ldr	r0, [r5, #0]
 810287e:	6809      	ldr	r1, [r1, #0]
 8102880:	f7ff fc2b 	bl	81020da <cmox_bn_cmp>
 8102884:	2800      	cmp	r0, #0
 8102886:	d548      	bpl.n	810291a <cmox_ECC_PointValidation+0xce>
 8102888:	69a0      	ldr	r0, [r4, #24]
 810288a:	6841      	ldr	r1, [r0, #4]
 810288c:	69ca      	ldr	r2, [r1, #28]
 810288e:	2a03      	cmp	r2, #3
 8102890:	d006      	beq.n	81028a0 <cmox_ECC_PointValidation+0x54>
 8102892:	6800      	ldr	r0, [r0, #0]
 8102894:	6801      	ldr	r1, [r0, #0]
 8102896:	6868      	ldr	r0, [r5, #4]
 8102898:	f7ff fc1f 	bl	81020da <cmox_bn_cmp>
 810289c:	2800      	cmp	r0, #0
 810289e:	d53c      	bpl.n	810291a <cmox_ECC_PointValidation+0xce>
 81028a0:	69a1      	ldr	r1, [r4, #24]
 81028a2:	6809      	ldr	r1, [r1, #0]
 81028a4:	6908      	ldr	r0, [r1, #16]
 81028a6:	2800      	cmp	r0, #0
 81028a8:	bf1c      	itt	ne
 81028aa:	6948      	ldrne	r0, [r1, #20]
 81028ac:	2800      	cmpne	r0, #0
 81028ae:	d035      	beq.n	810291c <cmox_ECC_PointValidation+0xd0>
 81028b0:	69c8      	ldr	r0, [r1, #28]
 81028b2:	b118      	cbz	r0, 81028bc <cmox_ECC_PointValidation+0x70>
 81028b4:	2802      	cmp	r0, #2
 81028b6:	d031      	beq.n	810291c <cmox_ECC_PointValidation+0xd0>
 81028b8:	d332      	bcc.n	8102920 <cmox_ECC_PointValidation+0xd4>
 81028ba:	e02e      	b.n	810291a <cmox_ECC_PointValidation+0xce>
 81028bc:	6960      	ldr	r0, [r4, #20]
 81028be:	6a23      	ldr	r3, [r4, #32]
 81028c0:	4622      	mov	r2, r4
 81028c2:	6801      	ldr	r1, [r0, #0]
 81028c4:	6828      	ldr	r0, [r5, #0]
 81028c6:	f7fe f94c 	bl	8100b62 <cmox_ModularBN_Sqr>
 81028ca:	69a0      	ldr	r0, [r4, #24]
 81028cc:	6961      	ldr	r1, [r4, #20]
 81028ce:	6800      	ldr	r0, [r0, #0]
 81028d0:	680b      	ldr	r3, [r1, #0]
 81028d2:	6802      	ldr	r2, [r0, #0]
 81028d4:	6901      	ldr	r1, [r0, #16]
 81028d6:	4618      	mov	r0, r3
 81028d8:	f7fd fe9b 	bl	8100612 <cmox_ModAddBN>
 81028dc:	6960      	ldr	r0, [r4, #20]
 81028de:	6a21      	ldr	r1, [r4, #32]
 81028e0:	4623      	mov	r3, r4
 81028e2:	6802      	ldr	r2, [r0, #0]
 81028e4:	9100      	str	r1, [sp, #0]
 81028e6:	6829      	ldr	r1, [r5, #0]
 81028e8:	4610      	mov	r0, r2
 81028ea:	f7fe f917 	bl	8100b1c <cmox_ModularBN_Mul>
 81028ee:	69a0      	ldr	r0, [r4, #24]
 81028f0:	6962      	ldr	r2, [r4, #20]
 81028f2:	6801      	ldr	r1, [r0, #0]
 81028f4:	6810      	ldr	r0, [r2, #0]
 81028f6:	680a      	ldr	r2, [r1, #0]
 81028f8:	6949      	ldr	r1, [r1, #20]
 81028fa:	4603      	mov	r3, r0
 81028fc:	f7fd fe89 	bl	8100612 <cmox_ModAddBN>
 8102900:	6960      	ldr	r0, [r4, #20]
 8102902:	6a23      	ldr	r3, [r4, #32]
 8102904:	4622      	mov	r2, r4
 8102906:	6841      	ldr	r1, [r0, #4]
 8102908:	6868      	ldr	r0, [r5, #4]
 810290a:	f7fe f92a 	bl	8100b62 <cmox_ModularBN_Sqr>
 810290e:	6960      	ldr	r0, [r4, #20]
 8102910:	6841      	ldr	r1, [r0, #4]
 8102912:	6800      	ldr	r0, [r0, #0]
 8102914:	f7ff fbe1 	bl	81020da <cmox_bn_cmp>
 8102918:	b100      	cbz	r0, 810291c <cmox_ECC_PointValidation+0xd0>
 810291a:	2604      	movs	r6, #4
 810291c:	4630      	mov	r0, r6
 810291e:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}
 8102920:	6960      	ldr	r0, [r4, #20]
 8102922:	6a23      	ldr	r3, [r4, #32]
 8102924:	4622      	mov	r2, r4
 8102926:	6801      	ldr	r1, [r0, #0]
 8102928:	6828      	ldr	r0, [r5, #0]
 810292a:	f7fe f91a 	bl	8100b62 <cmox_ModularBN_Sqr>
 810292e:	6960      	ldr	r0, [r4, #20]
 8102930:	6a23      	ldr	r3, [r4, #32]
 8102932:	4622      	mov	r2, r4
 8102934:	6841      	ldr	r1, [r0, #4]
 8102936:	6868      	ldr	r0, [r5, #4]
 8102938:	f7fe f913 	bl	8100b62 <cmox_ModularBN_Sqr>
 810293c:	6960      	ldr	r0, [r4, #20]
 810293e:	6a22      	ldr	r2, [r4, #32]
 8102940:	4623      	mov	r3, r4
 8102942:	6801      	ldr	r1, [r0, #0]
 8102944:	9200      	str	r2, [sp, #0]
 8102946:	69a0      	ldr	r0, [r4, #24]
 8102948:	460a      	mov	r2, r1
 810294a:	6807      	ldr	r7, [r0, #0]
 810294c:	6938      	ldr	r0, [r7, #16]
 810294e:	f7fe f8e5 	bl	8100b1c <cmox_ModularBN_Mul>
 8102952:	69a2      	ldr	r2, [r4, #24]
 8102954:	6961      	ldr	r1, [r4, #20]
 8102956:	6817      	ldr	r7, [r2, #0]
 8102958:	6808      	ldr	r0, [r1, #0]
 810295a:	6849      	ldr	r1, [r1, #4]
 810295c:	683a      	ldr	r2, [r7, #0]
 810295e:	4603      	mov	r3, r0
 8102960:	f7fd fe57 	bl	8100612 <cmox_ModAddBN>
 8102964:	6960      	ldr	r0, [r4, #20]
 8102966:	6a21      	ldr	r1, [r4, #32]
 8102968:	4623      	mov	r3, r4
 810296a:	6840      	ldr	r0, [r0, #4]
 810296c:	9100      	str	r1, [sp, #0]
 810296e:	6829      	ldr	r1, [r5, #0]
 8102970:	4602      	mov	r2, r0
 8102972:	f7fe f8d3 	bl	8100b1c <cmox_ModularBN_Mul>
 8102976:	6960      	ldr	r0, [r4, #20]
 8102978:	6a21      	ldr	r1, [r4, #32]
 810297a:	4623      	mov	r3, r4
 810297c:	6840      	ldr	r0, [r0, #4]
 810297e:	9100      	str	r1, [sp, #0]
 8102980:	6829      	ldr	r1, [r5, #0]
 8102982:	4602      	mov	r2, r0
 8102984:	f7fe f8ca 	bl	8100b1c <cmox_ModularBN_Mul>
 8102988:	6960      	ldr	r0, [r4, #20]
 810298a:	6a21      	ldr	r1, [r4, #32]
 810298c:	4623      	mov	r3, r4
 810298e:	6840      	ldr	r0, [r0, #4]
 8102990:	9100      	str	r1, [sp, #0]
 8102992:	69a7      	ldr	r7, [r4, #24]
 8102994:	4602      	mov	r2, r0
 8102996:	683f      	ldr	r7, [r7, #0]
 8102998:	6979      	ldr	r1, [r7, #20]
 810299a:	f7fe f8bf 	bl	8100b1c <cmox_ModularBN_Mul>
 810299e:	69a1      	ldr	r1, [r4, #24]
 81029a0:	6960      	ldr	r0, [r4, #20]
 81029a2:	680a      	ldr	r2, [r1, #0]
 81029a4:	68a9      	ldr	r1, [r5, #8]
 81029a6:	6840      	ldr	r0, [r0, #4]
 81029a8:	6812      	ldr	r2, [r2, #0]
 81029aa:	4603      	mov	r3, r0
 81029ac:	f7fd fe31 	bl	8100612 <cmox_ModAddBN>
 81029b0:	e7ad      	b.n	810290e <cmox_ECC_PointValidation+0xc2>
	...

081029b4 <cmox_ECC_PointToAffine>:
 81029b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 81029b6:	460f      	mov	r7, r1
 81029b8:	b085      	sub	sp, #20
 81029ba:	2100      	movs	r1, #0
 81029bc:	4606      	mov	r6, r0
 81029be:	9103      	str	r1, [sp, #12]
 81029c0:	9104      	str	r1, [sp, #16]
 81029c2:	69b0      	ldr	r0, [r6, #24]
 81029c4:	a903      	add	r1, sp, #12
 81029c6:	2501      	movs	r5, #1
 81029c8:	6803      	ldr	r3, [r0, #0]
 81029ca:	69f0      	ldr	r0, [r6, #28]
 81029cc:	681c      	ldr	r4, [r3, #0]
 81029ce:	6822      	ldr	r2, [r4, #0]
 81029d0:	f7ff fb00 	bl	8101fd4 <cmox_bn_alloc>
 81029d4:	0004      	movs	r4, r0
 81029d6:	f040 80c6 	bne.w	8102b66 <cmox_ECC_PointToAffine+0x1b2>
 81029da:	69b0      	ldr	r0, [r6, #24]
 81029dc:	6801      	ldr	r1, [r0, #0]
 81029de:	69f0      	ldr	r0, [r6, #28]
 81029e0:	680a      	ldr	r2, [r1, #0]
 81029e2:	a904      	add	r1, sp, #16
 81029e4:	6812      	ldr	r2, [r2, #0]
 81029e6:	f7ff faf5 	bl	8101fd4 <cmox_bn_alloc>
 81029ea:	0004      	movs	r4, r0
 81029ec:	f040 80b7 	bne.w	8102b5e <cmox_ECC_PointToAffine+0x1aa>
 81029f0:	7c38      	ldrb	r0, [r7, #16]
 81029f2:	2100      	movs	r1, #0
 81029f4:	f000 0004 	and.w	r0, r0, #4
 81029f8:	f7fe f8e8 	bl	8100bcc <cmox_mathUtils_neq>
 81029fc:	b920      	cbnz	r0, 8102a08 <cmox_ECC_PointToAffine+0x54>
 81029fe:	4639      	mov	r1, r7
 8102a00:	4630      	mov	r0, r6
 8102a02:	2500      	movs	r5, #0
 8102a04:	f7ff feca 	bl	810279c <cmox_ECC_PointToModularDomain>
 8102a08:	f8df 2178 	ldr.w	r2, [pc, #376]	@ 8102b84 <.text_19>
 8102a0c:	e9d2 3400 	ldrd	r3, r4, [r2]
 8102a10:	4956      	ldr	r1, [pc, #344]	@ (8102b6c <cmox_ECC_PointToAffine+0x1b8>)
 8102a12:	e9cd 3400 	strd	r3, r4, [sp]
 8102a16:	7808      	ldrb	r0, [r1, #0]
 8102a18:	4b55      	ldr	r3, [pc, #340]	@ (8102b70 <cmox_ECC_PointToAffine+0x1bc>)
 8102a1a:	2800      	cmp	r0, #0
 8102a1c:	bf0e      	itee	eq
 8102a1e:	2100      	moveq	r1, #0
 8102a20:	2004      	movne	r0, #4
 8102a22:	2104      	movne	r1, #4
 8102a24:	581a      	ldr	r2, [r3, r0]
 8102a26:	f85d 0001 	ldr.w	r0, [sp, r1]
 8102a2a:	4952      	ldr	r1, [pc, #328]	@ (8102b74 <cmox_ECC_PointToAffine+0x1c0>)
 8102a2c:	1882      	adds	r2, r0, r2
 8102a2e:	6011      	str	r1, [r2, #0]
 8102a30:	6810      	ldr	r0, [r2, #0]
 8102a32:	2101      	movs	r1, #1
 8102a34:	6091      	str	r1, [r2, #8]
 8102a36:	685a      	ldr	r2, [r3, #4]
 8102a38:	9900      	ldr	r1, [sp, #0]
 8102a3a:	4050      	eors	r0, r2
 8102a3c:	681a      	ldr	r2, [r3, #0]
 8102a3e:	4041      	eors	r1, r0
 8102a40:	484d      	ldr	r0, [pc, #308]	@ (8102b78 <cmox_ECC_PointToAffine+0x1c4>)
 8102a42:	ea80 0c01 	eor.w	ip, r0, r1
 8102a46:	9901      	ldr	r1, [sp, #4]
 8102a48:	484c      	ldr	r0, [pc, #304]	@ (8102b7c <cmox_ECC_PointToAffine+0x1c8>)
 8102a4a:	404a      	eors	r2, r1
 8102a4c:	4042      	eors	r2, r0
 8102a4e:	69b0      	ldr	r0, [r6, #24]
 8102a50:	4494      	add	ip, r2
 8102a52:	4a4b      	ldr	r2, [pc, #300]	@ (8102b80 <cmox_ECC_PointToAffine+0x1cc>)
 8102a54:	6803      	ldr	r3, [r0, #0]
 8102a56:	ea92 0f0c 	teq	r2, ip
 8102a5a:	9a04      	ldr	r2, [sp, #16]
 8102a5c:	6818      	ldr	r0, [r3, #0]
 8102a5e:	bf14      	ite	ne
 8102a60:	f06f 0102 	mvnne.w	r1, #2
 8102a64:	f06f 0101 	mvneq.w	r1, #1
 8102a68:	f7fd ff17 	bl	810089a <cmox_AddBN_Int>
 8102a6c:	69b0      	ldr	r0, [r6, #24]
 8102a6e:	4632      	mov	r2, r6
 8102a70:	69c4      	ldr	r4, [r0, #28]
 8102a72:	6a30      	ldr	r0, [r6, #32]
 8102a74:	9002      	str	r0, [sp, #8]
 8102a76:	69f1      	ldr	r1, [r6, #28]
 8102a78:	9803      	ldr	r0, [sp, #12]
 8102a7a:	9101      	str	r1, [sp, #4]
 8102a7c:	9904      	ldr	r1, [sp, #16]
 8102a7e:	9000      	str	r0, [sp, #0]
 8102a80:	6863      	ldr	r3, [r4, #4]
 8102a82:	68b8      	ldr	r0, [r7, #8]
 8102a84:	6824      	ldr	r4, [r4, #0]
 8102a86:	47a0      	blx	r4
 8102a88:	4604      	mov	r4, r0
 8102a8a:	69b0      	ldr	r0, [r6, #24]
 8102a8c:	6841      	ldr	r1, [r0, #4]
 8102a8e:	69c8      	ldr	r0, [r1, #28]
 8102a90:	2803      	cmp	r0, #3
 8102a92:	d84a      	bhi.n	8102b2a <cmox_ECC_PointToAffine+0x176>
 8102a94:	e8df f000 	tbb	[pc, r0]
 8102a98:	40291f02 	.word	0x40291f02
 8102a9c:	6a33      	ldr	r3, [r6, #32]
 8102a9e:	9904      	ldr	r1, [sp, #16]
 8102aa0:	9803      	ldr	r0, [sp, #12]
 8102aa2:	4632      	mov	r2, r6
 8102aa4:	f7fe f85d 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102aa8:	6a30      	ldr	r0, [r6, #32]
 8102aaa:	683a      	ldr	r2, [r7, #0]
 8102aac:	9904      	ldr	r1, [sp, #16]
 8102aae:	9000      	str	r0, [sp, #0]
 8102ab0:	4633      	mov	r3, r6
 8102ab2:	4610      	mov	r0, r2
 8102ab4:	f7fe f832 	bl	8100b1c <cmox_ModularBN_Mul>
 8102ab8:	6a30      	ldr	r0, [r6, #32]
 8102aba:	9a04      	ldr	r2, [sp, #16]
 8102abc:	4633      	mov	r3, r6
 8102abe:	9000      	str	r0, [sp, #0]
 8102ac0:	9803      	ldr	r0, [sp, #12]
 8102ac2:	4611      	mov	r1, r2
 8102ac4:	f7fe f82a 	bl	8100b1c <cmox_ModularBN_Mul>
 8102ac8:	6a31      	ldr	r1, [r6, #32]
 8102aca:	6878      	ldr	r0, [r7, #4]
 8102acc:	4633      	mov	r3, r6
 8102ace:	9100      	str	r1, [sp, #0]
 8102ad0:	4602      	mov	r2, r0
 8102ad2:	9904      	ldr	r1, [sp, #16]
 8102ad4:	e026      	b.n	8102b24 <cmox_ECC_PointToAffine+0x170>
 8102ad6:	6a31      	ldr	r1, [r6, #32]
 8102ad8:	6838      	ldr	r0, [r7, #0]
 8102ada:	4633      	mov	r3, r6
 8102adc:	9100      	str	r1, [sp, #0]
 8102ade:	9903      	ldr	r1, [sp, #12]
 8102ae0:	4602      	mov	r2, r0
 8102ae2:	f7fe f81b 	bl	8100b1c <cmox_ModularBN_Mul>
 8102ae6:	6878      	ldr	r0, [r7, #4]
 8102ae8:	e017      	b.n	8102b1a <cmox_ECC_PointToAffine+0x166>
 8102aea:	6a31      	ldr	r1, [r6, #32]
 8102aec:	6838      	ldr	r0, [r7, #0]
 8102aee:	4633      	mov	r3, r6
 8102af0:	9100      	str	r1, [sp, #0]
 8102af2:	9903      	ldr	r1, [sp, #12]
 8102af4:	4602      	mov	r2, r0
 8102af6:	f7fe f811 	bl	8100b1c <cmox_ModularBN_Mul>
 8102afa:	6a31      	ldr	r1, [r6, #32]
 8102afc:	6878      	ldr	r0, [r7, #4]
 8102afe:	4633      	mov	r3, r6
 8102b00:	9100      	str	r1, [sp, #0]
 8102b02:	9903      	ldr	r1, [sp, #12]
 8102b04:	4602      	mov	r2, r0
 8102b06:	f7fe f809 	bl	8100b1c <cmox_ModularBN_Mul>
 8102b0a:	6a30      	ldr	r0, [r6, #32]
 8102b0c:	4633      	mov	r3, r6
 8102b0e:	9000      	str	r0, [sp, #0]
 8102b10:	68fa      	ldr	r2, [r7, #12]
 8102b12:	6879      	ldr	r1, [r7, #4]
 8102b14:	6838      	ldr	r0, [r7, #0]
 8102b16:	e005      	b.n	8102b24 <cmox_ECC_PointToAffine+0x170>
 8102b18:	6838      	ldr	r0, [r7, #0]
 8102b1a:	6a31      	ldr	r1, [r6, #32]
 8102b1c:	4633      	mov	r3, r6
 8102b1e:	4602      	mov	r2, r0
 8102b20:	9100      	str	r1, [sp, #0]
 8102b22:	9903      	ldr	r1, [sp, #12]
 8102b24:	f7fd fffa 	bl	8100b1c <cmox_ModularBN_Mul>
 8102b28:	e000      	b.n	8102b2c <cmox_ECC_PointToAffine+0x178>
 8102b2a:	2401      	movs	r4, #1
 8102b2c:	6a31      	ldr	r1, [r6, #32]
 8102b2e:	68b8      	ldr	r0, [r7, #8]
 8102b30:	4633      	mov	r3, r6
 8102b32:	9100      	str	r1, [sp, #0]
 8102b34:	9903      	ldr	r1, [sp, #12]
 8102b36:	4602      	mov	r2, r0
 8102b38:	f7fd fff0 	bl	8100b1c <cmox_ModularBN_Mul>
 8102b3c:	2d00      	cmp	r5, #0
 8102b3e:	bf08      	it	eq
 8102b40:	2c00      	cmpeq	r4, #0
 8102b42:	d104      	bne.n	8102b4e <cmox_ECC_PointToAffine+0x19a>
 8102b44:	4639      	mov	r1, r7
 8102b46:	4630      	mov	r0, r6
 8102b48:	f7ff fe52 	bl	81027f0 <cmox_ECC_PointFromModularDomain>
 8102b4c:	4604      	mov	r4, r0
 8102b4e:	6938      	ldr	r0, [r7, #16]
 8102b50:	a904      	add	r1, sp, #16
 8102b52:	f040 0002 	orr.w	r0, r0, #2
 8102b56:	6138      	str	r0, [r7, #16]
 8102b58:	69f0      	ldr	r0, [r6, #28]
 8102b5a:	f7ff fa46 	bl	8101fea <cmox_bn_free>
 8102b5e:	69f0      	ldr	r0, [r6, #28]
 8102b60:	a903      	add	r1, sp, #12
 8102b62:	f7ff fa42 	bl	8101fea <cmox_bn_free>
 8102b66:	4620      	mov	r0, r4
 8102b68:	b005      	add	sp, #20
 8102b6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8102b6c:	20040034 	.word	0x20040034
 8102b70:	08104d3c 	.word	0x08104d3c
 8102b74:	ad827e2c 	.word	0xad827e2c
 8102b78:	12008504 	.word	0x12008504
 8102b7c:	7a0168fc 	.word	0x7a0168fc
 8102b80:	8e9be2a8 	.word	0x8e9be2a8

08102b84 <.text_19>:
 8102b84:	08104148 	.word	0x08104148

08102b88 <cmox_ECC_EDW_DecPoint_ed25519>:
 8102b88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8102b8c:	b088      	sub	sp, #32
 8102b8e:	4606      	mov	r6, r0
 8102b90:	69b0      	ldr	r0, [r6, #24]
 8102b92:	461d      	mov	r5, r3
 8102b94:	4689      	mov	r9, r1
 8102b96:	4692      	mov	sl, r2
 8102b98:	6a01      	ldr	r1, [r0, #32]
 8102b9a:	6800      	ldr	r0, [r0, #0]
 8102b9c:	eb09 020a 	add.w	r2, r9, sl
 8102ba0:	f812 7c01 	ldrb.w	r7, [r2, #-1]
 8102ba4:	6803      	ldr	r3, [r0, #0]
 8102ba6:	69f0      	ldr	r0, [r6, #28]
 8102ba8:	f8d1 8008 	ldr.w	r8, [r1, #8]
 8102bac:	681a      	ldr	r2, [r3, #0]
 8102bae:	a906      	add	r1, sp, #24
 8102bb0:	09ff      	lsrs	r7, r7, #7
 8102bb2:	f7ff fa0f 	bl	8101fd4 <cmox_bn_alloc>
 8102bb6:	0004      	movs	r4, r0
 8102bb8:	f040 8141 	bne.w	8102e3e <cmox_ECC_EDW_DecPoint_ed25519+0x2b6>
 8102bbc:	69b0      	ldr	r0, [r6, #24]
 8102bbe:	6801      	ldr	r1, [r0, #0]
 8102bc0:	69f0      	ldr	r0, [r6, #28]
 8102bc2:	680a      	ldr	r2, [r1, #0]
 8102bc4:	a907      	add	r1, sp, #28
 8102bc6:	6812      	ldr	r2, [r2, #0]
 8102bc8:	f7ff fa04 	bl	8101fd4 <cmox_bn_alloc>
 8102bcc:	0004      	movs	r4, r0
 8102bce:	f040 8132 	bne.w	8102e36 <cmox_ECC_EDW_DecPoint_ed25519+0x2ae>
 8102bd2:	69b0      	ldr	r0, [r6, #24]
 8102bd4:	6801      	ldr	r1, [r0, #0]
 8102bd6:	69f0      	ldr	r0, [r6, #28]
 8102bd8:	680a      	ldr	r2, [r1, #0]
 8102bda:	a903      	add	r1, sp, #12
 8102bdc:	6812      	ldr	r2, [r2, #0]
 8102bde:	f7ff f9f9 	bl	8101fd4 <cmox_bn_alloc>
 8102be2:	0004      	movs	r4, r0
 8102be4:	f040 8123 	bne.w	8102e2e <cmox_ECC_EDW_DecPoint_ed25519+0x2a6>
 8102be8:	69b0      	ldr	r0, [r6, #24]
 8102bea:	6801      	ldr	r1, [r0, #0]
 8102bec:	69f0      	ldr	r0, [r6, #28]
 8102bee:	680a      	ldr	r2, [r1, #0]
 8102bf0:	a905      	add	r1, sp, #20
 8102bf2:	6812      	ldr	r2, [r2, #0]
 8102bf4:	f7ff f9ee 	bl	8101fd4 <cmox_bn_alloc>
 8102bf8:	0004      	movs	r4, r0
 8102bfa:	f040 8114 	bne.w	8102e26 <cmox_ECC_EDW_DecPoint_ed25519+0x29e>
 8102bfe:	69b0      	ldr	r0, [r6, #24]
 8102c00:	6801      	ldr	r1, [r0, #0]
 8102c02:	69f0      	ldr	r0, [r6, #28]
 8102c04:	680a      	ldr	r2, [r1, #0]
 8102c06:	a904      	add	r1, sp, #16
 8102c08:	6812      	ldr	r2, [r2, #0]
 8102c0a:	f7ff f9e3 	bl	8101fd4 <cmox_bn_alloc>
 8102c0e:	0004      	movs	r4, r0
 8102c10:	d11a      	bne.n	8102c48 <cmox_ECC_EDW_DecPoint_ed25519+0xc0>
 8102c12:	9a03      	ldr	r2, [sp, #12]
 8102c14:	4651      	mov	r1, sl
 8102c16:	4648      	mov	r0, r9
 8102c18:	f7ff fb81 	bl	810231e <cmox_bn_fromU8LE>
 8102c1c:	9803      	ldr	r0, [sp, #12]
 8102c1e:	9903      	ldr	r1, [sp, #12]
 8102c20:	6800      	ldr	r0, [r0, #0]
 8102c22:	f851 2020 	ldr.w	r2, [r1, r0, lsl #2]
 8102c26:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8102c2a:	f841 2020 	str.w	r2, [r1, r0, lsl #2]
 8102c2e:	69b0      	ldr	r0, [r6, #24]
 8102c30:	6801      	ldr	r1, [r0, #0]
 8102c32:	9803      	ldr	r0, [sp, #12]
 8102c34:	6809      	ldr	r1, [r1, #0]
 8102c36:	f7ff fa50 	bl	81020da <cmox_bn_cmp>
 8102c3a:	2800      	cmp	r0, #0
 8102c3c:	d405      	bmi.n	8102c4a <cmox_ECC_EDW_DecPoint_ed25519+0xc2>
 8102c3e:	69f0      	ldr	r0, [r6, #28]
 8102c40:	a904      	add	r1, sp, #16
 8102c42:	2404      	movs	r4, #4
 8102c44:	f7ff f9d1 	bl	8101fea <cmox_bn_free>
 8102c48:	e0e9      	b.n	8102e1e <cmox_ECC_EDW_DecPoint_ed25519+0x296>
 8102c4a:	6868      	ldr	r0, [r5, #4]
 8102c4c:	2100      	movs	r1, #0
 8102c4e:	f7ff f9f8 	bl	8102042 <cmox_bn_init>
 8102c52:	686a      	ldr	r2, [r5, #4]
 8102c54:	9903      	ldr	r1, [sp, #12]
 8102c56:	2001      	movs	r0, #1
 8102c58:	f7ff fa02 	bl	8102060 <cmox_bn_cCopy>
 8102c5c:	6a32      	ldr	r2, [r6, #32]
 8102c5e:	9803      	ldr	r0, [sp, #12]
 8102c60:	4631      	mov	r1, r6
 8102c62:	f7fd ff31 	bl	8100ac8 <cmox_ModularBN_Enter>
 8102c66:	6a33      	ldr	r3, [r6, #32]
 8102c68:	9905      	ldr	r1, [sp, #20]
 8102c6a:	9803      	ldr	r0, [sp, #12]
 8102c6c:	4632      	mov	r2, r6
 8102c6e:	f7fd ff78 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102c72:	69b0      	ldr	r0, [r6, #24]
 8102c74:	6801      	ldr	r1, [r0, #0]
 8102c76:	68c0      	ldr	r0, [r0, #12]
 8102c78:	680a      	ldr	r2, [r1, #0]
 8102c7a:	1d01      	adds	r1, r0, #4
 8102c7c:	9804      	ldr	r0, [sp, #16]
 8102c7e:	6812      	ldr	r2, [r2, #0]
 8102c80:	f7ff f9be 	bl	8102000 <cmox_bn_import>
 8102c84:	69b0      	ldr	r0, [r6, #24]
 8102c86:	9b07      	ldr	r3, [sp, #28]
 8102c88:	6801      	ldr	r1, [r0, #0]
 8102c8a:	9805      	ldr	r0, [sp, #20]
 8102c8c:	680a      	ldr	r2, [r1, #0]
 8102c8e:	9904      	ldr	r1, [sp, #16]
 8102c90:	f7fd fd50 	bl	8100734 <cmox_ModSubBN>
 8102c94:	6a30      	ldr	r0, [r6, #32]
 8102c96:	9a06      	ldr	r2, [sp, #24]
 8102c98:	4633      	mov	r3, r6
 8102c9a:	9000      	str	r0, [sp, #0]
 8102c9c:	69b0      	ldr	r0, [r6, #24]
 8102c9e:	6801      	ldr	r1, [r0, #0]
 8102ca0:	9805      	ldr	r0, [sp, #20]
 8102ca2:	6949      	ldr	r1, [r1, #20]
 8102ca4:	f7fd ff3a 	bl	8100b1c <cmox_ModularBN_Mul>
 8102ca8:	69b0      	ldr	r0, [r6, #24]
 8102caa:	9b06      	ldr	r3, [sp, #24]
 8102cac:	6801      	ldr	r1, [r0, #0]
 8102cae:	680a      	ldr	r2, [r1, #0]
 8102cb0:	9904      	ldr	r1, [sp, #16]
 8102cb2:	4618      	mov	r0, r3
 8102cb4:	f7fd fcad 	bl	8100612 <cmox_ModAddBN>
 8102cb8:	6a33      	ldr	r3, [r6, #32]
 8102cba:	9903      	ldr	r1, [sp, #12]
 8102cbc:	9806      	ldr	r0, [sp, #24]
 8102cbe:	4632      	mov	r2, r6
 8102cc0:	f7fd ff4f 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102cc4:	6a30      	ldr	r0, [r6, #32]
 8102cc6:	9a03      	ldr	r2, [sp, #12]
 8102cc8:	9906      	ldr	r1, [sp, #24]
 8102cca:	9000      	str	r0, [sp, #0]
 8102ccc:	4633      	mov	r3, r6
 8102cce:	4610      	mov	r0, r2
 8102cd0:	f7fd ff24 	bl	8100b1c <cmox_ModularBN_Mul>
 8102cd4:	6a30      	ldr	r0, [r6, #32]
 8102cd6:	9a05      	ldr	r2, [sp, #20]
 8102cd8:	9903      	ldr	r1, [sp, #12]
 8102cda:	9000      	str	r0, [sp, #0]
 8102cdc:	9807      	ldr	r0, [sp, #28]
 8102cde:	4633      	mov	r3, r6
 8102ce0:	f7fd ff1c 	bl	8100b1c <cmox_ModularBN_Mul>
 8102ce4:	9903      	ldr	r1, [sp, #12]
 8102ce6:	6a33      	ldr	r3, [r6, #32]
 8102ce8:	4632      	mov	r2, r6
 8102cea:	4608      	mov	r0, r1
 8102cec:	f7fd ff39 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102cf0:	6a30      	ldr	r0, [r6, #32]
 8102cf2:	9a03      	ldr	r2, [sp, #12]
 8102cf4:	9906      	ldr	r1, [sp, #24]
 8102cf6:	9000      	str	r0, [sp, #0]
 8102cf8:	4633      	mov	r3, r6
 8102cfa:	4610      	mov	r0, r2
 8102cfc:	f7fd ff0e 	bl	8100b1c <cmox_ModularBN_Mul>
 8102d00:	6a30      	ldr	r0, [r6, #32]
 8102d02:	9a03      	ldr	r2, [sp, #12]
 8102d04:	9907      	ldr	r1, [sp, #28]
 8102d06:	9000      	str	r0, [sp, #0]
 8102d08:	4633      	mov	r3, r6
 8102d0a:	4610      	mov	r0, r2
 8102d0c:	f7fd ff06 	bl	8100b1c <cmox_ModularBN_Mul>
 8102d10:	69b0      	ldr	r0, [r6, #24]
 8102d12:	9a04      	ldr	r2, [sp, #16]
 8102d14:	f06f 0104 	mvn.w	r1, #4
 8102d18:	6803      	ldr	r3, [r0, #0]
 8102d1a:	6818      	ldr	r0, [r3, #0]
 8102d1c:	f7fd fdbd 	bl	810089a <cmox_AddBN_Int>
 8102d20:	9a04      	ldr	r2, [sp, #16]
 8102d22:	2103      	movs	r1, #3
 8102d24:	4610      	mov	r0, r2
 8102d26:	f7fd fc49 	bl	81005bc <cmox_RightShiftBN>
 8102d2a:	69b0      	ldr	r0, [r6, #24]
 8102d2c:	69c4      	ldr	r4, [r0, #28]
 8102d2e:	6a30      	ldr	r0, [r6, #32]
 8102d30:	9002      	str	r0, [sp, #8]
 8102d32:	69f1      	ldr	r1, [r6, #28]
 8102d34:	9803      	ldr	r0, [sp, #12]
 8102d36:	9101      	str	r1, [sp, #4]
 8102d38:	682a      	ldr	r2, [r5, #0]
 8102d3a:	9904      	ldr	r1, [sp, #16]
 8102d3c:	9200      	str	r2, [sp, #0]
 8102d3e:	6863      	ldr	r3, [r4, #4]
 8102d40:	6824      	ldr	r4, [r4, #0]
 8102d42:	4632      	mov	r2, r6
 8102d44:	47a0      	blx	r4
 8102d46:	4604      	mov	r4, r0
 8102d48:	69f0      	ldr	r0, [r6, #28]
 8102d4a:	a904      	add	r1, sp, #16
 8102d4c:	f7ff f94d 	bl	8101fea <cmox_bn_free>
 8102d50:	2c00      	cmp	r4, #0
 8102d52:	d164      	bne.n	8102e1e <cmox_ECC_EDW_DecPoint_ed25519+0x296>
 8102d54:	6a31      	ldr	r1, [r6, #32]
 8102d56:	6828      	ldr	r0, [r5, #0]
 8102d58:	4633      	mov	r3, r6
 8102d5a:	9100      	str	r1, [sp, #0]
 8102d5c:	9905      	ldr	r1, [sp, #20]
 8102d5e:	4602      	mov	r2, r0
 8102d60:	f7fd fedc 	bl	8100b1c <cmox_ModularBN_Mul>
 8102d64:	6a33      	ldr	r3, [r6, #32]
 8102d66:	9903      	ldr	r1, [sp, #12]
 8102d68:	6828      	ldr	r0, [r5, #0]
 8102d6a:	4632      	mov	r2, r6
 8102d6c:	f7fd fef9 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102d70:	6a30      	ldr	r0, [r6, #32]
 8102d72:	9a03      	ldr	r2, [sp, #12]
 8102d74:	4633      	mov	r3, r6
 8102d76:	9000      	str	r0, [sp, #0]
 8102d78:	9806      	ldr	r0, [sp, #24]
 8102d7a:	4611      	mov	r1, r2
 8102d7c:	f7fd fece 	bl	8100b1c <cmox_ModularBN_Mul>
 8102d80:	9907      	ldr	r1, [sp, #28]
 8102d82:	9803      	ldr	r0, [sp, #12]
 8102d84:	f7ff f9a9 	bl	81020da <cmox_bn_cmp>
 8102d88:	b198      	cbz	r0, 8102db2 <cmox_ECC_EDW_DecPoint_ed25519+0x22a>
 8102d8a:	69b0      	ldr	r0, [r6, #24]
 8102d8c:	9a05      	ldr	r2, [sp, #20]
 8102d8e:	9907      	ldr	r1, [sp, #28]
 8102d90:	6803      	ldr	r3, [r0, #0]
 8102d92:	6818      	ldr	r0, [r3, #0]
 8102d94:	f7fd fd4d 	bl	8100832 <cmox_SubBN>
 8102d98:	9905      	ldr	r1, [sp, #20]
 8102d9a:	9803      	ldr	r0, [sp, #12]
 8102d9c:	f7ff f99d 	bl	81020da <cmox_bn_cmp>
 8102da0:	b9b8      	cbnz	r0, 8102dd2 <cmox_ECC_EDW_DecPoint_ed25519+0x24a>
 8102da2:	6a31      	ldr	r1, [r6, #32]
 8102da4:	6828      	ldr	r0, [r5, #0]
 8102da6:	4633      	mov	r3, r6
 8102da8:	9100      	str	r1, [sp, #0]
 8102daa:	4602      	mov	r2, r0
 8102dac:	4641      	mov	r1, r8
 8102dae:	f7fd feb5 	bl	8100b1c <cmox_ModularBN_Mul>
 8102db2:	6a33      	ldr	r3, [r6, #32]
 8102db4:	69f2      	ldr	r2, [r6, #28]
 8102db6:	6828      	ldr	r0, [r5, #0]
 8102db8:	4631      	mov	r1, r6
 8102dba:	f7fd fe8d 	bl	8100ad8 <cmox_ModularBN_Exit>
 8102dbe:	0004      	movs	r4, r0
 8102dc0:	d12d      	bne.n	8102e1e <cmox_ECC_EDW_DecPoint_ed25519+0x296>
 8102dc2:	2f01      	cmp	r7, #1
 8102dc4:	d107      	bne.n	8102dd6 <cmox_ECC_EDW_DecPoint_ed25519+0x24e>
 8102dc6:	6828      	ldr	r0, [r5, #0]
 8102dc8:	2100      	movs	r1, #0
 8102dca:	f7ff f9c7 	bl	810215c <cmox_bn_cmpUint>
 8102dce:	2801      	cmp	r0, #1
 8102dd0:	d101      	bne.n	8102dd6 <cmox_ECC_EDW_DecPoint_ed25519+0x24e>
 8102dd2:	2404      	movs	r4, #4
 8102dd4:	e023      	b.n	8102e1e <cmox_ECC_EDW_DecPoint_ed25519+0x296>
 8102dd6:	69b0      	ldr	r0, [r6, #24]
 8102dd8:	6829      	ldr	r1, [r5, #0]
 8102dda:	6802      	ldr	r2, [r0, #0]
 8102ddc:	7908      	ldrb	r0, [r1, #4]
 8102dde:	6812      	ldr	r2, [r2, #0]
 8102de0:	f000 0001 	and.w	r0, r0, #1
 8102de4:	4078      	eors	r0, r7
 8102de6:	f7fd fe28 	bl	8100a3a <cmox_FieldBN_CondNegate>
 8102dea:	6928      	ldr	r0, [r5, #16]
 8102dec:	2101      	movs	r1, #1
 8102dee:	f040 0002 	orr.w	r0, r0, #2
 8102df2:	6128      	str	r0, [r5, #16]
 8102df4:	68a8      	ldr	r0, [r5, #8]
 8102df6:	f7ff f924 	bl	8102042 <cmox_bn_init>
 8102dfa:	69b0      	ldr	r0, [r6, #24]
 8102dfc:	6841      	ldr	r1, [r0, #4]
 8102dfe:	69c8      	ldr	r0, [r1, #28]
 8102e00:	2802      	cmp	r0, #2
 8102e02:	d10c      	bne.n	8102e1e <cmox_ECC_EDW_DecPoint_ed25519+0x296>
 8102e04:	6a30      	ldr	r0, [r6, #32]
 8102e06:	4633      	mov	r3, r6
 8102e08:	9000      	str	r0, [sp, #0]
 8102e0a:	68ea      	ldr	r2, [r5, #12]
 8102e0c:	6869      	ldr	r1, [r5, #4]
 8102e0e:	6828      	ldr	r0, [r5, #0]
 8102e10:	f7fd fe84 	bl	8100b1c <cmox_ModularBN_Mul>
 8102e14:	6a32      	ldr	r2, [r6, #32]
 8102e16:	68e8      	ldr	r0, [r5, #12]
 8102e18:	4631      	mov	r1, r6
 8102e1a:	f7fd fe55 	bl	8100ac8 <cmox_ModularBN_Enter>
 8102e1e:	69f0      	ldr	r0, [r6, #28]
 8102e20:	a905      	add	r1, sp, #20
 8102e22:	f7ff f8e2 	bl	8101fea <cmox_bn_free>
 8102e26:	69f0      	ldr	r0, [r6, #28]
 8102e28:	a903      	add	r1, sp, #12
 8102e2a:	f7ff f8de 	bl	8101fea <cmox_bn_free>
 8102e2e:	69f0      	ldr	r0, [r6, #28]
 8102e30:	a907      	add	r1, sp, #28
 8102e32:	f7ff f8da 	bl	8101fea <cmox_bn_free>
 8102e36:	69f0      	ldr	r0, [r6, #28]
 8102e38:	a906      	add	r1, sp, #24
 8102e3a:	f7ff f8d6 	bl	8101fea <cmox_bn_free>
 8102e3e:	4620      	mov	r0, r4
 8102e40:	b008      	add	sp, #32
 8102e42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08102e46 <cmox_ECC_EDW_DecPoint_ed448>:
 8102e46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8102e4a:	461f      	mov	r7, r3
 8102e4c:	4605      	mov	r5, r0
 8102e4e:	4688      	mov	r8, r1
 8102e50:	4691      	mov	r9, r2
 8102e52:	b087      	sub	sp, #28
 8102e54:	eb08 0009 	add.w	r0, r8, r9
 8102e58:	f810 6c01 	ldrb.w	r6, [r0, #-1]
 8102e5c:	69a8      	ldr	r0, [r5, #24]
 8102e5e:	a905      	add	r1, sp, #20
 8102e60:	09f6      	lsrs	r6, r6, #7
 8102e62:	6803      	ldr	r3, [r0, #0]
 8102e64:	69e8      	ldr	r0, [r5, #28]
 8102e66:	681c      	ldr	r4, [r3, #0]
 8102e68:	6822      	ldr	r2, [r4, #0]
 8102e6a:	f7ff f8b3 	bl	8101fd4 <cmox_bn_alloc>
 8102e6e:	0004      	movs	r4, r0
 8102e70:	f040 8113 	bne.w	810309a <cmox_ECC_EDW_DecPoint_ed448+0x254>
 8102e74:	69a8      	ldr	r0, [r5, #24]
 8102e76:	6801      	ldr	r1, [r0, #0]
 8102e78:	69e8      	ldr	r0, [r5, #28]
 8102e7a:	680a      	ldr	r2, [r1, #0]
 8102e7c:	a906      	add	r1, sp, #24
 8102e7e:	6812      	ldr	r2, [r2, #0]
 8102e80:	f7ff f8a8 	bl	8101fd4 <cmox_bn_alloc>
 8102e84:	0004      	movs	r4, r0
 8102e86:	f040 8104 	bne.w	8103092 <cmox_ECC_EDW_DecPoint_ed448+0x24c>
 8102e8a:	69a8      	ldr	r0, [r5, #24]
 8102e8c:	6801      	ldr	r1, [r0, #0]
 8102e8e:	69e8      	ldr	r0, [r5, #28]
 8102e90:	680a      	ldr	r2, [r1, #0]
 8102e92:	a903      	add	r1, sp, #12
 8102e94:	6812      	ldr	r2, [r2, #0]
 8102e96:	f7ff f89d 	bl	8101fd4 <cmox_bn_alloc>
 8102e9a:	0004      	movs	r4, r0
 8102e9c:	f040 80f5 	bne.w	810308a <cmox_ECC_EDW_DecPoint_ed448+0x244>
 8102ea0:	69a8      	ldr	r0, [r5, #24]
 8102ea2:	6801      	ldr	r1, [r0, #0]
 8102ea4:	69e8      	ldr	r0, [r5, #28]
 8102ea6:	680a      	ldr	r2, [r1, #0]
 8102ea8:	a904      	add	r1, sp, #16
 8102eaa:	6812      	ldr	r2, [r2, #0]
 8102eac:	f7ff f892 	bl	8101fd4 <cmox_bn_alloc>
 8102eb0:	0004      	movs	r4, r0
 8102eb2:	f040 80e6 	bne.w	8103082 <cmox_ECC_EDW_DecPoint_ed448+0x23c>
 8102eb6:	687a      	ldr	r2, [r7, #4]
 8102eb8:	f1a9 0101 	sub.w	r1, r9, #1
 8102ebc:	4640      	mov	r0, r8
 8102ebe:	f7ff fa2e 	bl	810231e <cmox_bn_fromU8LE>
 8102ec2:	69a8      	ldr	r0, [r5, #24]
 8102ec4:	6801      	ldr	r1, [r0, #0]
 8102ec6:	6878      	ldr	r0, [r7, #4]
 8102ec8:	6809      	ldr	r1, [r1, #0]
 8102eca:	f7ff f906 	bl	81020da <cmox_bn_cmp>
 8102ece:	2800      	cmp	r0, #0
 8102ed0:	f140 80bf 	bpl.w	8103052 <cmox_ECC_EDW_DecPoint_ed448+0x20c>
 8102ed4:	9803      	ldr	r0, [sp, #12]
 8102ed6:	2100      	movs	r1, #0
 8102ed8:	f7ff f8b3 	bl	8102042 <cmox_bn_init>
 8102edc:	9a03      	ldr	r2, [sp, #12]
 8102ede:	6879      	ldr	r1, [r7, #4]
 8102ee0:	2001      	movs	r0, #1
 8102ee2:	f7ff f8bd 	bl	8102060 <cmox_bn_cCopy>
 8102ee6:	6a2a      	ldr	r2, [r5, #32]
 8102ee8:	9803      	ldr	r0, [sp, #12]
 8102eea:	4629      	mov	r1, r5
 8102eec:	f7fd fdec 	bl	8100ac8 <cmox_ModularBN_Enter>
 8102ef0:	6a2b      	ldr	r3, [r5, #32]
 8102ef2:	9904      	ldr	r1, [sp, #16]
 8102ef4:	9803      	ldr	r0, [sp, #12]
 8102ef6:	462a      	mov	r2, r5
 8102ef8:	f7fd fe33 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102efc:	69a8      	ldr	r0, [r5, #24]
 8102efe:	6801      	ldr	r1, [r0, #0]
 8102f00:	68c0      	ldr	r0, [r0, #12]
 8102f02:	680a      	ldr	r2, [r1, #0]
 8102f04:	1d01      	adds	r1, r0, #4
 8102f06:	6838      	ldr	r0, [r7, #0]
 8102f08:	6812      	ldr	r2, [r2, #0]
 8102f0a:	f7ff f879 	bl	8102000 <cmox_bn_import>
 8102f0e:	69a8      	ldr	r0, [r5, #24]
 8102f10:	9b06      	ldr	r3, [sp, #24]
 8102f12:	6801      	ldr	r1, [r0, #0]
 8102f14:	9804      	ldr	r0, [sp, #16]
 8102f16:	680a      	ldr	r2, [r1, #0]
 8102f18:	6839      	ldr	r1, [r7, #0]
 8102f1a:	f7fd fc0b 	bl	8100734 <cmox_ModSubBN>
 8102f1e:	6a28      	ldr	r0, [r5, #32]
 8102f20:	9a05      	ldr	r2, [sp, #20]
 8102f22:	462b      	mov	r3, r5
 8102f24:	9000      	str	r0, [sp, #0]
 8102f26:	69a8      	ldr	r0, [r5, #24]
 8102f28:	6801      	ldr	r1, [r0, #0]
 8102f2a:	9804      	ldr	r0, [sp, #16]
 8102f2c:	6949      	ldr	r1, [r1, #20]
 8102f2e:	f7fd fdf5 	bl	8100b1c <cmox_ModularBN_Mul>
 8102f32:	69a8      	ldr	r0, [r5, #24]
 8102f34:	9b05      	ldr	r3, [sp, #20]
 8102f36:	6801      	ldr	r1, [r0, #0]
 8102f38:	680a      	ldr	r2, [r1, #0]
 8102f3a:	6839      	ldr	r1, [r7, #0]
 8102f3c:	4618      	mov	r0, r3
 8102f3e:	f7fd fbf9 	bl	8100734 <cmox_ModSubBN>
 8102f42:	6a2b      	ldr	r3, [r5, #32]
 8102f44:	9903      	ldr	r1, [sp, #12]
 8102f46:	9806      	ldr	r0, [sp, #24]
 8102f48:	462a      	mov	r2, r5
 8102f4a:	f7fd fe0a 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102f4e:	9903      	ldr	r1, [sp, #12]
 8102f50:	6a2b      	ldr	r3, [r5, #32]
 8102f52:	462a      	mov	r2, r5
 8102f54:	4608      	mov	r0, r1
 8102f56:	f7fd fe04 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102f5a:	6a28      	ldr	r0, [r5, #32]
 8102f5c:	9a03      	ldr	r2, [sp, #12]
 8102f5e:	9906      	ldr	r1, [sp, #24]
 8102f60:	9000      	str	r0, [sp, #0]
 8102f62:	462b      	mov	r3, r5
 8102f64:	4610      	mov	r0, r2
 8102f66:	f7fd fdd9 	bl	8100b1c <cmox_ModularBN_Mul>
 8102f6a:	6a2b      	ldr	r3, [r5, #32]
 8102f6c:	9904      	ldr	r1, [sp, #16]
 8102f6e:	9805      	ldr	r0, [sp, #20]
 8102f70:	462a      	mov	r2, r5
 8102f72:	f7fd fdf6 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102f76:	6a28      	ldr	r0, [r5, #32]
 8102f78:	9a04      	ldr	r2, [sp, #16]
 8102f7a:	462b      	mov	r3, r5
 8102f7c:	9000      	str	r0, [sp, #0]
 8102f7e:	9805      	ldr	r0, [sp, #20]
 8102f80:	4611      	mov	r1, r2
 8102f82:	f7fd fdcb 	bl	8100b1c <cmox_ModularBN_Mul>
 8102f86:	6a28      	ldr	r0, [r5, #32]
 8102f88:	9a03      	ldr	r2, [sp, #12]
 8102f8a:	9904      	ldr	r1, [sp, #16]
 8102f8c:	9000      	str	r0, [sp, #0]
 8102f8e:	462b      	mov	r3, r5
 8102f90:	4610      	mov	r0, r2
 8102f92:	f7fd fdc3 	bl	8100b1c <cmox_ModularBN_Mul>
 8102f96:	69a8      	ldr	r0, [r5, #24]
 8102f98:	9a04      	ldr	r2, [sp, #16]
 8102f9a:	f06f 0102 	mvn.w	r1, #2
 8102f9e:	6803      	ldr	r3, [r0, #0]
 8102fa0:	6818      	ldr	r0, [r3, #0]
 8102fa2:	f7fd fc7a 	bl	810089a <cmox_AddBN_Int>
 8102fa6:	9a04      	ldr	r2, [sp, #16]
 8102fa8:	2102      	movs	r1, #2
 8102faa:	4610      	mov	r0, r2
 8102fac:	f7fd fb06 	bl	81005bc <cmox_RightShiftBN>
 8102fb0:	69a8      	ldr	r0, [r5, #24]
 8102fb2:	69c4      	ldr	r4, [r0, #28]
 8102fb4:	6a28      	ldr	r0, [r5, #32]
 8102fb6:	9002      	str	r0, [sp, #8]
 8102fb8:	69e9      	ldr	r1, [r5, #28]
 8102fba:	9803      	ldr	r0, [sp, #12]
 8102fbc:	9101      	str	r1, [sp, #4]
 8102fbe:	683a      	ldr	r2, [r7, #0]
 8102fc0:	9904      	ldr	r1, [sp, #16]
 8102fc2:	9200      	str	r2, [sp, #0]
 8102fc4:	6863      	ldr	r3, [r4, #4]
 8102fc6:	6824      	ldr	r4, [r4, #0]
 8102fc8:	462a      	mov	r2, r5
 8102fca:	47a0      	blx	r4
 8102fcc:	0004      	movs	r4, r0
 8102fce:	d154      	bne.n	810307a <cmox_ECC_EDW_DecPoint_ed448+0x234>
 8102fd0:	6a28      	ldr	r0, [r5, #32]
 8102fd2:	9a03      	ldr	r2, [sp, #12]
 8102fd4:	9905      	ldr	r1, [sp, #20]
 8102fd6:	9000      	str	r0, [sp, #0]
 8102fd8:	9806      	ldr	r0, [sp, #24]
 8102fda:	462b      	mov	r3, r5
 8102fdc:	f7fd fd9e 	bl	8100b1c <cmox_ModularBN_Mul>
 8102fe0:	6a2b      	ldr	r3, [r5, #32]
 8102fe2:	9904      	ldr	r1, [sp, #16]
 8102fe4:	9806      	ldr	r0, [sp, #24]
 8102fe6:	462a      	mov	r2, r5
 8102fe8:	f7fd fdbb 	bl	8100b62 <cmox_ModularBN_Sqr>
 8102fec:	6a28      	ldr	r0, [r5, #32]
 8102fee:	9a03      	ldr	r2, [sp, #12]
 8102ff0:	9904      	ldr	r1, [sp, #16]
 8102ff2:	9000      	str	r0, [sp, #0]
 8102ff4:	462b      	mov	r3, r5
 8102ff6:	4610      	mov	r0, r2
 8102ff8:	f7fd fd90 	bl	8100b1c <cmox_ModularBN_Mul>
 8102ffc:	6a29      	ldr	r1, [r5, #32]
 8102ffe:	6838      	ldr	r0, [r7, #0]
 8103000:	462b      	mov	r3, r5
 8103002:	9100      	str	r1, [sp, #0]
 8103004:	9903      	ldr	r1, [sp, #12]
 8103006:	4602      	mov	r2, r0
 8103008:	f7fd fd88 	bl	8100b1c <cmox_ModularBN_Mul>
 810300c:	6a2b      	ldr	r3, [r5, #32]
 810300e:	9903      	ldr	r1, [sp, #12]
 8103010:	6838      	ldr	r0, [r7, #0]
 8103012:	462a      	mov	r2, r5
 8103014:	f7fd fda5 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103018:	6a28      	ldr	r0, [r5, #32]
 810301a:	9a03      	ldr	r2, [sp, #12]
 810301c:	462b      	mov	r3, r5
 810301e:	9000      	str	r0, [sp, #0]
 8103020:	9805      	ldr	r0, [sp, #20]
 8103022:	4611      	mov	r1, r2
 8103024:	f7fd fd7a 	bl	8100b1c <cmox_ModularBN_Mul>
 8103028:	9906      	ldr	r1, [sp, #24]
 810302a:	9803      	ldr	r0, [sp, #12]
 810302c:	f7ff f855 	bl	81020da <cmox_bn_cmp>
 8103030:	b978      	cbnz	r0, 8103052 <cmox_ECC_EDW_DecPoint_ed448+0x20c>
 8103032:	6a2b      	ldr	r3, [r5, #32]
 8103034:	69ea      	ldr	r2, [r5, #28]
 8103036:	6838      	ldr	r0, [r7, #0]
 8103038:	4629      	mov	r1, r5
 810303a:	f7fd fd4d 	bl	8100ad8 <cmox_ModularBN_Exit>
 810303e:	0004      	movs	r4, r0
 8103040:	d11b      	bne.n	810307a <cmox_ECC_EDW_DecPoint_ed448+0x234>
 8103042:	2e01      	cmp	r6, #1
 8103044:	d107      	bne.n	8103056 <cmox_ECC_EDW_DecPoint_ed448+0x210>
 8103046:	6838      	ldr	r0, [r7, #0]
 8103048:	2100      	movs	r1, #0
 810304a:	f7ff f887 	bl	810215c <cmox_bn_cmpUint>
 810304e:	2801      	cmp	r0, #1
 8103050:	d101      	bne.n	8103056 <cmox_ECC_EDW_DecPoint_ed448+0x210>
 8103052:	2404      	movs	r4, #4
 8103054:	e011      	b.n	810307a <cmox_ECC_EDW_DecPoint_ed448+0x234>
 8103056:	69a8      	ldr	r0, [r5, #24]
 8103058:	6839      	ldr	r1, [r7, #0]
 810305a:	6802      	ldr	r2, [r0, #0]
 810305c:	7908      	ldrb	r0, [r1, #4]
 810305e:	6812      	ldr	r2, [r2, #0]
 8103060:	f000 0001 	and.w	r0, r0, #1
 8103064:	4070      	eors	r0, r6
 8103066:	f7fd fce8 	bl	8100a3a <cmox_FieldBN_CondNegate>
 810306a:	68b8      	ldr	r0, [r7, #8]
 810306c:	2101      	movs	r1, #1
 810306e:	f7fe ffe8 	bl	8102042 <cmox_bn_init>
 8103072:	6938      	ldr	r0, [r7, #16]
 8103074:	f040 0002 	orr.w	r0, r0, #2
 8103078:	6138      	str	r0, [r7, #16]
 810307a:	69e8      	ldr	r0, [r5, #28]
 810307c:	a904      	add	r1, sp, #16
 810307e:	f7fe ffb4 	bl	8101fea <cmox_bn_free>
 8103082:	69e8      	ldr	r0, [r5, #28]
 8103084:	a903      	add	r1, sp, #12
 8103086:	f7fe ffb0 	bl	8101fea <cmox_bn_free>
 810308a:	69e8      	ldr	r0, [r5, #28]
 810308c:	a906      	add	r1, sp, #24
 810308e:	f7fe ffac 	bl	8101fea <cmox_bn_free>
 8103092:	69e8      	ldr	r0, [r5, #28]
 8103094:	a905      	add	r1, sp, #20
 8103096:	f7fe ffa8 	bl	8101fea <cmox_bn_free>
 810309a:	4620      	mov	r0, r4
 810309c:	b007      	add	sp, #28
 810309e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

081030a2 <cmox_ECC_MONTY_Clamping>:
 81030a2:	b570      	push	{r4, r5, r6, lr}
 81030a4:	4606      	mov	r6, r0
 81030a6:	69b0      	ldr	r0, [r6, #24]
 81030a8:	460c      	mov	r4, r1
 81030aa:	4615      	mov	r5, r2
 81030ac:	6801      	ldr	r1, [r0, #0]
 81030ae:	6808      	ldr	r0, [r1, #0]
 81030b0:	6802      	ldr	r2, [r0, #0]
 81030b2:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 81030b6:	f7fd fd95 	bl	8100be4 <cmox_mathUtils_bitLength>
 81030ba:	69b1      	ldr	r1, [r6, #24]
 81030bc:	6862      	ldr	r2, [r4, #4]
 81030be:	680b      	ldr	r3, [r1, #0]
 81030c0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 81030c4:	699e      	ldr	r6, [r3, #24]
 81030c6:	1e76      	subs	r6, r6, #1
 81030c8:	404e      	eors	r6, r1
 81030ca:	4032      	ands	r2, r6
 81030cc:	6062      	str	r2, [r4, #4]
 81030ce:	f1c0 0220 	rsb	r2, r0, #32
 81030d2:	40d1      	lsrs	r1, r2
 81030d4:	6822      	ldr	r2, [r4, #0]
 81030d6:	2601      	movs	r6, #1
 81030d8:	1e40      	subs	r0, r0, #1
 81030da:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 81030de:	4086      	lsls	r6, r0
 81030e0:	400b      	ands	r3, r1
 81030e2:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
 81030e6:	6822      	ldr	r2, [r4, #0]
 81030e8:	f854 3022 	ldr.w	r3, [r4, r2, lsl #2]
 81030ec:	4333      	orrs	r3, r6
 81030ee:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
 81030f2:	6828      	ldr	r0, [r5, #0]
 81030f4:	6802      	ldr	r2, [r0, #0]
 81030f6:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 81030fa:	4019      	ands	r1, r3
 81030fc:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8103100:	bd70      	pop	{r4, r5, r6, pc}

08103102 <cmox_ECC_SW_AddPoints_JacoAff>:
 8103102:	e92d 4ff4 	stmdb	sp!, {r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103106:	4605      	mov	r5, r0
 8103108:	460e      	mov	r6, r1
 810310a:	461f      	mov	r7, r3
 810310c:	b084      	sub	sp, #16
 810310e:	6968      	ldr	r0, [r5, #20]
 8103110:	f8d0 8000 	ldr.w	r8, [r0]
 8103114:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8103118:	f8d0 a008 	ldr.w	sl, [r0, #8]
 810311c:	68c0      	ldr	r0, [r0, #12]
 810311e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8103120:	462a      	mov	r2, r5
 8103122:	9001      	str	r0, [sp, #4]
 8103124:	6879      	ldr	r1, [r7, #4]
 8103126:	f8d7 b000 	ldr.w	fp, [r7]
 810312a:	9103      	str	r1, [sp, #12]
 810312c:	68b8      	ldr	r0, [r7, #8]
 810312e:	4641      	mov	r1, r8
 8103130:	9002      	str	r0, [sp, #8]
 8103132:	6a2b      	ldr	r3, [r5, #32]
 8103134:	68b0      	ldr	r0, [r6, #8]
 8103136:	f7fd fd14 	bl	8100b62 <cmox_ModularBN_Sqr>
 810313a:	6a28      	ldr	r0, [r5, #32]
 810313c:	462b      	mov	r3, r5
 810313e:	464a      	mov	r2, r9
 8103140:	9000      	str	r0, [sp, #0]
 8103142:	68b0      	ldr	r0, [r6, #8]
 8103144:	4641      	mov	r1, r8
 8103146:	f7fd fce9 	bl	8100b1c <cmox_ModularBN_Mul>
 810314a:	6a28      	ldr	r0, [r5, #32]
 810314c:	9904      	ldr	r1, [sp, #16]
 810314e:	462b      	mov	r3, r5
 8103150:	9000      	str	r0, [sp, #0]
 8103152:	6809      	ldr	r1, [r1, #0]
 8103154:	4642      	mov	r2, r8
 8103156:	4640      	mov	r0, r8
 8103158:	f7fd fce0 	bl	8100b1c <cmox_ModularBN_Mul>
 810315c:	6a28      	ldr	r0, [r5, #32]
 810315e:	9904      	ldr	r1, [sp, #16]
 8103160:	462b      	mov	r3, r5
 8103162:	9000      	str	r0, [sp, #0]
 8103164:	6849      	ldr	r1, [r1, #4]
 8103166:	464a      	mov	r2, r9
 8103168:	4648      	mov	r0, r9
 810316a:	f7fd fcd7 	bl	8100b1c <cmox_ModularBN_Mul>
 810316e:	69a8      	ldr	r0, [r5, #24]
 8103170:	4643      	mov	r3, r8
 8103172:	6801      	ldr	r1, [r0, #0]
 8103174:	4640      	mov	r0, r8
 8103176:	680a      	ldr	r2, [r1, #0]
 8103178:	6831      	ldr	r1, [r6, #0]
 810317a:	f7fd fadb 	bl	8100734 <cmox_ModSubBN>
 810317e:	69a8      	ldr	r0, [r5, #24]
 8103180:	464b      	mov	r3, r9
 8103182:	6801      	ldr	r1, [r0, #0]
 8103184:	4648      	mov	r0, r9
 8103186:	680a      	ldr	r2, [r1, #0]
 8103188:	6871      	ldr	r1, [r6, #4]
 810318a:	f7fd fad3 	bl	8100734 <cmox_ModSubBN>
 810318e:	b1ec      	cbz	r4, 81031cc <cmox_ECC_SW_AddPoints_JacoAff+0xca>
 8103190:	2100      	movs	r1, #0
 8103192:	4640      	mov	r0, r8
 8103194:	f7fe ffe2 	bl	810215c <cmox_bn_cmpUint>
 8103198:	6020      	str	r0, [r4, #0]
 810319a:	683a      	ldr	r2, [r7, #0]
 810319c:	4649      	mov	r1, r9
 810319e:	f7fe ff97 	bl	81020d0 <cmox_bn_mux>
 81031a2:	4683      	mov	fp, r0
 81031a4:	687a      	ldr	r2, [r7, #4]
 81031a6:	6820      	ldr	r0, [r4, #0]
 81031a8:	4649      	mov	r1, r9
 81031aa:	f7fe ff91 	bl	81020d0 <cmox_bn_mux>
 81031ae:	9003      	str	r0, [sp, #12]
 81031b0:	68ba      	ldr	r2, [r7, #8]
 81031b2:	6820      	ldr	r0, [r4, #0]
 81031b4:	4649      	mov	r1, r9
 81031b6:	f7fe ff8b 	bl	81020d0 <cmox_bn_mux>
 81031ba:	9002      	str	r0, [sp, #8]
 81031bc:	2100      	movs	r1, #0
 81031be:	4648      	mov	r0, r9
 81031c0:	f7fe ffcc 	bl	810215c <cmox_bn_cmpUint>
 81031c4:	6821      	ldr	r1, [r4, #0]
 81031c6:	ea41 0140 	orr.w	r1, r1, r0, lsl #1
 81031ca:	6021      	str	r1, [r4, #0]
 81031cc:	6a28      	ldr	r0, [r5, #32]
 81031ce:	9a02      	ldr	r2, [sp, #8]
 81031d0:	462b      	mov	r3, r5
 81031d2:	9000      	str	r0, [sp, #0]
 81031d4:	68b0      	ldr	r0, [r6, #8]
 81031d6:	4641      	mov	r1, r8
 81031d8:	f7fd fca0 	bl	8100b1c <cmox_ModularBN_Mul>
 81031dc:	6a2b      	ldr	r3, [r5, #32]
 81031de:	462a      	mov	r2, r5
 81031e0:	4651      	mov	r1, sl
 81031e2:	4640      	mov	r0, r8
 81031e4:	f7fd fcbd 	bl	8100b62 <cmox_ModularBN_Sqr>
 81031e8:	6a28      	ldr	r0, [r5, #32]
 81031ea:	9a01      	ldr	r2, [sp, #4]
 81031ec:	462b      	mov	r3, r5
 81031ee:	9000      	str	r0, [sp, #0]
 81031f0:	4651      	mov	r1, sl
 81031f2:	4640      	mov	r0, r8
 81031f4:	f7fd fc92 	bl	8100b1c <cmox_ModularBN_Mul>
 81031f8:	6a28      	ldr	r0, [r5, #32]
 81031fa:	462b      	mov	r3, r5
 81031fc:	4652      	mov	r2, sl
 81031fe:	9000      	str	r0, [sp, #0]
 8103200:	6830      	ldr	r0, [r6, #0]
 8103202:	4651      	mov	r1, sl
 8103204:	f7fd fc8a 	bl	8100b1c <cmox_ModularBN_Mul>
 8103208:	69a8      	ldr	r0, [r5, #24]
 810320a:	4643      	mov	r3, r8
 810320c:	6801      	ldr	r1, [r0, #0]
 810320e:	4650      	mov	r0, sl
 8103210:	680a      	ldr	r2, [r1, #0]
 8103212:	4651      	mov	r1, sl
 8103214:	f7fd f9fd 	bl	8100612 <cmox_ModAddBN>
 8103218:	6a2b      	ldr	r3, [r5, #32]
 810321a:	462a      	mov	r2, r5
 810321c:	4659      	mov	r1, fp
 810321e:	4648      	mov	r0, r9
 8103220:	f7fd fc9f 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103224:	69a8      	ldr	r0, [r5, #24]
 8103226:	465b      	mov	r3, fp
 8103228:	6801      	ldr	r1, [r0, #0]
 810322a:	4658      	mov	r0, fp
 810322c:	680a      	ldr	r2, [r1, #0]
 810322e:	4641      	mov	r1, r8
 8103230:	f7fd fa80 	bl	8100734 <cmox_ModSubBN>
 8103234:	69a8      	ldr	r0, [r5, #24]
 8103236:	465b      	mov	r3, fp
 8103238:	6801      	ldr	r1, [r0, #0]
 810323a:	4658      	mov	r0, fp
 810323c:	680a      	ldr	r2, [r1, #0]
 810323e:	9901      	ldr	r1, [sp, #4]
 8103240:	f7fd fa78 	bl	8100734 <cmox_ModSubBN>
 8103244:	69a8      	ldr	r0, [r5, #24]
 8103246:	4653      	mov	r3, sl
 8103248:	6801      	ldr	r1, [r0, #0]
 810324a:	4650      	mov	r0, sl
 810324c:	680a      	ldr	r2, [r1, #0]
 810324e:	4659      	mov	r1, fp
 8103250:	f7fd fa70 	bl	8100734 <cmox_ModSubBN>
 8103254:	6a28      	ldr	r0, [r5, #32]
 8103256:	462b      	mov	r3, r5
 8103258:	4652      	mov	r2, sl
 810325a:	9000      	str	r0, [sp, #0]
 810325c:	4651      	mov	r1, sl
 810325e:	4648      	mov	r0, r9
 8103260:	f7fd fc5c 	bl	8100b1c <cmox_ModularBN_Mul>
 8103264:	6a28      	ldr	r0, [r5, #32]
 8103266:	9a01      	ldr	r2, [sp, #4]
 8103268:	462b      	mov	r3, r5
 810326a:	9000      	str	r0, [sp, #0]
 810326c:	6871      	ldr	r1, [r6, #4]
 810326e:	4610      	mov	r0, r2
 8103270:	f7fd fc54 	bl	8100b1c <cmox_ModularBN_Mul>
 8103274:	69a8      	ldr	r0, [r5, #24]
 8103276:	9b03      	ldr	r3, [sp, #12]
 8103278:	6801      	ldr	r1, [r0, #0]
 810327a:	4650      	mov	r0, sl
 810327c:	680a      	ldr	r2, [r1, #0]
 810327e:	9901      	ldr	r1, [sp, #4]
 8103280:	b005      	add	sp, #20
 8103282:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103286:	f7fd ba55 	b.w	8100734 <cmox_ModSubBN>

0810328a <cmox_ECC_SW_AddPoints_Jacobian>:
 810328a:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810328e:	4604      	mov	r4, r0
 8103290:	6960      	ldr	r0, [r4, #20]
 8103292:	461e      	mov	r6, r3
 8103294:	f8d0 9000 	ldr.w	r9, [r0]
 8103298:	f8d0 a004 	ldr.w	sl, [r0, #4]
 810329c:	f8d0 8008 	ldr.w	r8, [r0, #8]
 81032a0:	f8d0 b00c 	ldr.w	fp, [r0, #12]
 81032a4:	6a23      	ldr	r3, [r4, #32]
 81032a6:	460d      	mov	r5, r1
 81032a8:	68a8      	ldr	r0, [r5, #8]
 81032aa:	4617      	mov	r7, r2
 81032ac:	4622      	mov	r2, r4
 81032ae:	4649      	mov	r1, r9
 81032b0:	f7fd fc57 	bl	8100b62 <cmox_ModularBN_Sqr>
 81032b4:	6a20      	ldr	r0, [r4, #32]
 81032b6:	4623      	mov	r3, r4
 81032b8:	4652      	mov	r2, sl
 81032ba:	9000      	str	r0, [sp, #0]
 81032bc:	6838      	ldr	r0, [r7, #0]
 81032be:	4649      	mov	r1, r9
 81032c0:	f7fd fc2c 	bl	8100b1c <cmox_ModularBN_Mul>
 81032c4:	6a20      	ldr	r0, [r4, #32]
 81032c6:	4623      	mov	r3, r4
 81032c8:	464a      	mov	r2, r9
 81032ca:	9000      	str	r0, [sp, #0]
 81032cc:	68a8      	ldr	r0, [r5, #8]
 81032ce:	4649      	mov	r1, r9
 81032d0:	f7fd fc24 	bl	8100b1c <cmox_ModularBN_Mul>
 81032d4:	6a20      	ldr	r0, [r4, #32]
 81032d6:	4623      	mov	r3, r4
 81032d8:	464a      	mov	r2, r9
 81032da:	9000      	str	r0, [sp, #0]
 81032dc:	6878      	ldr	r0, [r7, #4]
 81032de:	4649      	mov	r1, r9
 81032e0:	f7fd fc1c 	bl	8100b1c <cmox_ModularBN_Mul>
 81032e4:	6a23      	ldr	r3, [r4, #32]
 81032e6:	68b8      	ldr	r0, [r7, #8]
 81032e8:	4622      	mov	r2, r4
 81032ea:	4641      	mov	r1, r8
 81032ec:	f7fd fc39 	bl	8100b62 <cmox_ModularBN_Sqr>
 81032f0:	6a20      	ldr	r0, [r4, #32]
 81032f2:	4623      	mov	r3, r4
 81032f4:	465a      	mov	r2, fp
 81032f6:	9000      	str	r0, [sp, #0]
 81032f8:	6828      	ldr	r0, [r5, #0]
 81032fa:	4641      	mov	r1, r8
 81032fc:	f7fd fc0e 	bl	8100b1c <cmox_ModularBN_Mul>
 8103300:	6a20      	ldr	r0, [r4, #32]
 8103302:	4623      	mov	r3, r4
 8103304:	4642      	mov	r2, r8
 8103306:	9000      	str	r0, [sp, #0]
 8103308:	68b8      	ldr	r0, [r7, #8]
 810330a:	4641      	mov	r1, r8
 810330c:	f7fd fc06 	bl	8100b1c <cmox_ModularBN_Mul>
 8103310:	6a20      	ldr	r0, [r4, #32]
 8103312:	4623      	mov	r3, r4
 8103314:	4642      	mov	r2, r8
 8103316:	9000      	str	r0, [sp, #0]
 8103318:	6868      	ldr	r0, [r5, #4]
 810331a:	4641      	mov	r1, r8
 810331c:	f7fd fbfe 	bl	8100b1c <cmox_ModularBN_Mul>
 8103320:	69a0      	ldr	r0, [r4, #24]
 8103322:	4653      	mov	r3, sl
 8103324:	6801      	ldr	r1, [r0, #0]
 8103326:	4650      	mov	r0, sl
 8103328:	680a      	ldr	r2, [r1, #0]
 810332a:	4659      	mov	r1, fp
 810332c:	f7fd fa02 	bl	8100734 <cmox_ModSubBN>
 8103330:	69a0      	ldr	r0, [r4, #24]
 8103332:	464b      	mov	r3, r9
 8103334:	6801      	ldr	r1, [r0, #0]
 8103336:	4648      	mov	r0, r9
 8103338:	680a      	ldr	r2, [r1, #0]
 810333a:	4641      	mov	r1, r8
 810333c:	f7fd f9fa 	bl	8100734 <cmox_ModSubBN>
 8103340:	6a20      	ldr	r0, [r4, #32]
 8103342:	4623      	mov	r3, r4
 8103344:	4651      	mov	r1, sl
 8103346:	9000      	str	r0, [sp, #0]
 8103348:	6832      	ldr	r2, [r6, #0]
 810334a:	68b8      	ldr	r0, [r7, #8]
 810334c:	f7fd fbe6 	bl	8100b1c <cmox_ModularBN_Mul>
 8103350:	6a20      	ldr	r0, [r4, #32]
 8103352:	4623      	mov	r3, r4
 8103354:	9000      	str	r0, [sp, #0]
 8103356:	68b2      	ldr	r2, [r6, #8]
 8103358:	6831      	ldr	r1, [r6, #0]
 810335a:	68a8      	ldr	r0, [r5, #8]
 810335c:	f7fd fbde 	bl	8100b1c <cmox_ModularBN_Mul>
 8103360:	6a23      	ldr	r3, [r4, #32]
 8103362:	6831      	ldr	r1, [r6, #0]
 8103364:	4622      	mov	r2, r4
 8103366:	4650      	mov	r0, sl
 8103368:	f7fd fbfb 	bl	8100b62 <cmox_ModularBN_Sqr>
 810336c:	6a20      	ldr	r0, [r4, #32]
 810336e:	4623      	mov	r3, r4
 8103370:	9000      	str	r0, [sp, #0]
 8103372:	6872      	ldr	r2, [r6, #4]
 8103374:	6831      	ldr	r1, [r6, #0]
 8103376:	4650      	mov	r0, sl
 8103378:	f7fd fbd0 	bl	8100b1c <cmox_ModularBN_Mul>
 810337c:	6a20      	ldr	r0, [r4, #32]
 810337e:	4623      	mov	r3, r4
 8103380:	4652      	mov	r2, sl
 8103382:	9000      	str	r0, [sp, #0]
 8103384:	6831      	ldr	r1, [r6, #0]
 8103386:	4658      	mov	r0, fp
 8103388:	f7fd fbc8 	bl	8100b1c <cmox_ModularBN_Mul>
 810338c:	6a23      	ldr	r3, [r4, #32]
 810338e:	6831      	ldr	r1, [r6, #0]
 8103390:	4622      	mov	r2, r4
 8103392:	4648      	mov	r0, r9
 8103394:	f7fd fbe5 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103398:	69a1      	ldr	r1, [r4, #24]
 810339a:	6830      	ldr	r0, [r6, #0]
 810339c:	680a      	ldr	r2, [r1, #0]
 810339e:	6871      	ldr	r1, [r6, #4]
 81033a0:	4603      	mov	r3, r0
 81033a2:	6812      	ldr	r2, [r2, #0]
 81033a4:	f7fd f9c6 	bl	8100734 <cmox_ModSubBN>
 81033a8:	6a20      	ldr	r0, [r4, #32]
 81033aa:	6871      	ldr	r1, [r6, #4]
 81033ac:	4623      	mov	r3, r4
 81033ae:	9000      	str	r0, [sp, #0]
 81033b0:	460a      	mov	r2, r1
 81033b2:	4640      	mov	r0, r8
 81033b4:	f7fd fbb2 	bl	8100b1c <cmox_ModularBN_Mul>
 81033b8:	69a0      	ldr	r0, [r4, #24]
 81033ba:	4642      	mov	r2, r8
 81033bc:	6801      	ldr	r1, [r0, #0]
 81033be:	4650      	mov	r0, sl
 81033c0:	6809      	ldr	r1, [r1, #0]
 81033c2:	f7fd fadb 	bl	810097c <cmox_FieldBN_Mul2>
 81033c6:	69a1      	ldr	r1, [r4, #24]
 81033c8:	6830      	ldr	r0, [r6, #0]
 81033ca:	680a      	ldr	r2, [r1, #0]
 81033cc:	4641      	mov	r1, r8
 81033ce:	4603      	mov	r3, r0
 81033d0:	6812      	ldr	r2, [r2, #0]
 81033d2:	f7fd f9af 	bl	8100734 <cmox_ModSubBN>
 81033d6:	69a0      	ldr	r0, [r4, #24]
 81033d8:	4653      	mov	r3, sl
 81033da:	6801      	ldr	r1, [r0, #0]
 81033dc:	4650      	mov	r0, sl
 81033de:	680a      	ldr	r2, [r1, #0]
 81033e0:	6831      	ldr	r1, [r6, #0]
 81033e2:	f7fd f9a7 	bl	8100734 <cmox_ModSubBN>
 81033e6:	6a20      	ldr	r0, [r4, #32]
 81033e8:	4623      	mov	r3, r4
 81033ea:	464a      	mov	r2, r9
 81033ec:	9000      	str	r0, [sp, #0]
 81033ee:	4651      	mov	r1, sl
 81033f0:	4648      	mov	r0, r9
 81033f2:	f7fd fb93 	bl	8100b1c <cmox_ModularBN_Mul>
 81033f6:	69a0      	ldr	r0, [r4, #24]
 81033f8:	6871      	ldr	r1, [r6, #4]
 81033fa:	6802      	ldr	r2, [r0, #0]
 81033fc:	4648      	mov	r0, r9
 81033fe:	460b      	mov	r3, r1
 8103400:	6812      	ldr	r2, [r2, #0]
 8103402:	b001      	add	sp, #4
 8103404:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103408:	f7fd b994 	b.w	8100734 <cmox_ModSubBN>

0810340c <cmox_ECC_SW_DblPoint_Jac_a3>:
 810340c:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103410:	4604      	mov	r4, r0
 8103412:	460d      	mov	r5, r1
 8103414:	6960      	ldr	r0, [r4, #20]
 8103416:	4616      	mov	r6, r2
 8103418:	4698      	mov	r8, r3
 810341a:	6881      	ldr	r1, [r0, #8]
 810341c:	6807      	ldr	r7, [r0, #0]
 810341e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8103422:	9101      	str	r1, [sp, #4]
 8103424:	6831      	ldr	r1, [r6, #0]
 8103426:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 810342a:	463a      	mov	r2, r7
 810342c:	4640      	mov	r0, r8
 810342e:	f7fe fe4f 	bl	81020d0 <cmox_bn_mux>
 8103432:	6871      	ldr	r1, [r6, #4]
 8103434:	4683      	mov	fp, r0
 8103436:	463a      	mov	r2, r7
 8103438:	4640      	mov	r0, r8
 810343a:	f7fe fe49 	bl	81020d0 <cmox_bn_mux>
 810343e:	9002      	str	r0, [sp, #8]
 8103440:	68b1      	ldr	r1, [r6, #8]
 8103442:	463a      	mov	r2, r7
 8103444:	4640      	mov	r0, r8
 8103446:	f7fe fe43 	bl	81020d0 <cmox_bn_mux>
 810344a:	4606      	mov	r6, r0
 810344c:	6a23      	ldr	r3, [r4, #32]
 810344e:	68a8      	ldr	r0, [r5, #8]
 8103450:	4622      	mov	r2, r4
 8103452:	4639      	mov	r1, r7
 8103454:	f7fd fb85 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103458:	69a0      	ldr	r0, [r4, #24]
 810345a:	464b      	mov	r3, r9
 810345c:	6801      	ldr	r1, [r0, #0]
 810345e:	6828      	ldr	r0, [r5, #0]
 8103460:	680a      	ldr	r2, [r1, #0]
 8103462:	4639      	mov	r1, r7
 8103464:	f7fd f8d5 	bl	8100612 <cmox_ModAddBN>
 8103468:	69a0      	ldr	r0, [r4, #24]
 810346a:	463b      	mov	r3, r7
 810346c:	6801      	ldr	r1, [r0, #0]
 810346e:	6828      	ldr	r0, [r5, #0]
 8103470:	680a      	ldr	r2, [r1, #0]
 8103472:	4639      	mov	r1, r7
 8103474:	f7fd f95e 	bl	8100734 <cmox_ModSubBN>
 8103478:	6a20      	ldr	r0, [r4, #32]
 810347a:	4623      	mov	r3, r4
 810347c:	463a      	mov	r2, r7
 810347e:	9000      	str	r0, [sp, #0]
 8103480:	4649      	mov	r1, r9
 8103482:	4638      	mov	r0, r7
 8103484:	f7fd fb4a 	bl	8100b1c <cmox_ModularBN_Mul>
 8103488:	69a0      	ldr	r0, [r4, #24]
 810348a:	464a      	mov	r2, r9
 810348c:	6801      	ldr	r1, [r0, #0]
 810348e:	4638      	mov	r0, r7
 8103490:	6809      	ldr	r1, [r1, #0]
 8103492:	f7fd fa21 	bl	81008d8 <cmox_FieldBN_Div2>
 8103496:	69a0      	ldr	r0, [r4, #24]
 8103498:	463b      	mov	r3, r7
 810349a:	6801      	ldr	r1, [r0, #0]
 810349c:	4638      	mov	r0, r7
 810349e:	680a      	ldr	r2, [r1, #0]
 81034a0:	4649      	mov	r1, r9
 81034a2:	f7fd f8b6 	bl	8100612 <cmox_ModAddBN>
 81034a6:	6a23      	ldr	r3, [r4, #32]
 81034a8:	6868      	ldr	r0, [r5, #4]
 81034aa:	4622      	mov	r2, r4
 81034ac:	4649      	mov	r1, r9
 81034ae:	f7fd fb58 	bl	8100b62 <cmox_ModularBN_Sqr>
 81034b2:	6a20      	ldr	r0, [r4, #32]
 81034b4:	9a01      	ldr	r2, [sp, #4]
 81034b6:	4623      	mov	r3, r4
 81034b8:	9000      	str	r0, [sp, #0]
 81034ba:	6828      	ldr	r0, [r5, #0]
 81034bc:	4649      	mov	r1, r9
 81034be:	f7fd fb2d 	bl	8100b1c <cmox_ModularBN_Mul>
 81034c2:	6a23      	ldr	r3, [r4, #32]
 81034c4:	4622      	mov	r2, r4
 81034c6:	4651      	mov	r1, sl
 81034c8:	4638      	mov	r0, r7
 81034ca:	f7fd fb4a 	bl	8100b62 <cmox_ModularBN_Sqr>
 81034ce:	69a0      	ldr	r0, [r4, #24]
 81034d0:	4653      	mov	r3, sl
 81034d2:	6801      	ldr	r1, [r0, #0]
 81034d4:	4650      	mov	r0, sl
 81034d6:	680a      	ldr	r2, [r1, #0]
 81034d8:	9901      	ldr	r1, [sp, #4]
 81034da:	f7fd f92b 	bl	8100734 <cmox_ModSubBN>
 81034de:	69a0      	ldr	r0, [r4, #24]
 81034e0:	465b      	mov	r3, fp
 81034e2:	6801      	ldr	r1, [r0, #0]
 81034e4:	4650      	mov	r0, sl
 81034e6:	680a      	ldr	r2, [r1, #0]
 81034e8:	9901      	ldr	r1, [sp, #4]
 81034ea:	f7fd f923 	bl	8100734 <cmox_ModSubBN>
 81034ee:	6a20      	ldr	r0, [r4, #32]
 81034f0:	4623      	mov	r3, r4
 81034f2:	4632      	mov	r2, r6
 81034f4:	9000      	str	r0, [sp, #0]
 81034f6:	68a9      	ldr	r1, [r5, #8]
 81034f8:	6868      	ldr	r0, [r5, #4]
 81034fa:	f7fd fb0f 	bl	8100b1c <cmox_ModularBN_Mul>
 81034fe:	6a23      	ldr	r3, [r4, #32]
 8103500:	4622      	mov	r2, r4
 8103502:	4649      	mov	r1, r9
 8103504:	4648      	mov	r0, r9
 8103506:	f7fd fb2c 	bl	8100b62 <cmox_ModularBN_Sqr>
 810350a:	69a0      	ldr	r0, [r4, #24]
 810350c:	4653      	mov	r3, sl
 810350e:	6801      	ldr	r1, [r0, #0]
 8103510:	9801      	ldr	r0, [sp, #4]
 8103512:	680a      	ldr	r2, [r1, #0]
 8103514:	4659      	mov	r1, fp
 8103516:	f7fd f90d 	bl	8100734 <cmox_ModSubBN>
 810351a:	6a20      	ldr	r0, [r4, #32]
 810351c:	4623      	mov	r3, r4
 810351e:	463a      	mov	r2, r7
 8103520:	9000      	str	r0, [sp, #0]
 8103522:	4651      	mov	r1, sl
 8103524:	4638      	mov	r0, r7
 8103526:	f7fd faf9 	bl	8100b1c <cmox_ModularBN_Mul>
 810352a:	69a0      	ldr	r0, [r4, #24]
 810352c:	9b02      	ldr	r3, [sp, #8]
 810352e:	6801      	ldr	r1, [r0, #0]
 8103530:	4638      	mov	r0, r7
 8103532:	680a      	ldr	r2, [r1, #0]
 8103534:	4649      	mov	r1, r9
 8103536:	b003      	add	sp, #12
 8103538:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810353c:	f7fd b8fa 	b.w	8100734 <cmox_ModSubBN>

08103540 <cmox_ECC_SW_DblPoint_Jacobian>:
 8103540:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103544:	4604      	mov	r4, r0
 8103546:	6960      	ldr	r0, [r4, #20]
 8103548:	6807      	ldr	r7, [r0, #0]
 810354a:	f8d0 8004 	ldr.w	r8, [r0, #4]
 810354e:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8103552:	68c0      	ldr	r0, [r0, #12]
 8103554:	460d      	mov	r5, r1
 8103556:	4616      	mov	r6, r2
 8103558:	9001      	str	r0, [sp, #4]
 810355a:	6831      	ldr	r1, [r6, #0]
 810355c:	9802      	ldr	r0, [sp, #8]
 810355e:	463a      	mov	r2, r7
 8103560:	f7fe fdb6 	bl	81020d0 <cmox_bn_mux>
 8103564:	4682      	mov	sl, r0
 8103566:	6871      	ldr	r1, [r6, #4]
 8103568:	9802      	ldr	r0, [sp, #8]
 810356a:	463a      	mov	r2, r7
 810356c:	f7fe fdb0 	bl	81020d0 <cmox_bn_mux>
 8103570:	4683      	mov	fp, r0
 8103572:	68b1      	ldr	r1, [r6, #8]
 8103574:	9802      	ldr	r0, [sp, #8]
 8103576:	463a      	mov	r2, r7
 8103578:	f7fe fdaa 	bl	81020d0 <cmox_bn_mux>
 810357c:	4606      	mov	r6, r0
 810357e:	69a0      	ldr	r0, [r4, #24]
 8103580:	463b      	mov	r3, r7
 8103582:	6801      	ldr	r1, [r0, #0]
 8103584:	6868      	ldr	r0, [r5, #4]
 8103586:	680a      	ldr	r2, [r1, #0]
 8103588:	68a9      	ldr	r1, [r5, #8]
 810358a:	f7fd f842 	bl	8100612 <cmox_ModAddBN>
 810358e:	6a23      	ldr	r3, [r4, #32]
 8103590:	6828      	ldr	r0, [r5, #0]
 8103592:	4622      	mov	r2, r4
 8103594:	4641      	mov	r1, r8
 8103596:	f7fd fae4 	bl	8100b62 <cmox_ModularBN_Sqr>
 810359a:	6a23      	ldr	r3, [r4, #32]
 810359c:	6868      	ldr	r0, [r5, #4]
 810359e:	4622      	mov	r2, r4
 81035a0:	4649      	mov	r1, r9
 81035a2:	f7fd fade 	bl	8100b62 <cmox_ModularBN_Sqr>
 81035a6:	69a0      	ldr	r0, [r4, #24]
 81035a8:	4653      	mov	r3, sl
 81035aa:	6801      	ldr	r1, [r0, #0]
 81035ac:	6828      	ldr	r0, [r5, #0]
 81035ae:	680a      	ldr	r2, [r1, #0]
 81035b0:	4649      	mov	r1, r9
 81035b2:	f7fd f82e 	bl	8100612 <cmox_ModAddBN>
 81035b6:	6a23      	ldr	r3, [r4, #32]
 81035b8:	9901      	ldr	r1, [sp, #4]
 81035ba:	68a8      	ldr	r0, [r5, #8]
 81035bc:	4622      	mov	r2, r4
 81035be:	f7fd fad0 	bl	8100b62 <cmox_ModularBN_Sqr>
 81035c2:	6a23      	ldr	r3, [r4, #32]
 81035c4:	4622      	mov	r2, r4
 81035c6:	4651      	mov	r1, sl
 81035c8:	4650      	mov	r0, sl
 81035ca:	f7fd faca 	bl	8100b62 <cmox_ModularBN_Sqr>
 81035ce:	69a0      	ldr	r0, [r4, #24]
 81035d0:	4653      	mov	r3, sl
 81035d2:	6801      	ldr	r1, [r0, #0]
 81035d4:	4650      	mov	r0, sl
 81035d6:	680a      	ldr	r2, [r1, #0]
 81035d8:	4641      	mov	r1, r8
 81035da:	f7fd f8ab 	bl	8100734 <cmox_ModSubBN>
 81035de:	69a0      	ldr	r0, [r4, #24]
 81035e0:	465a      	mov	r2, fp
 81035e2:	6801      	ldr	r1, [r0, #0]
 81035e4:	4640      	mov	r0, r8
 81035e6:	6809      	ldr	r1, [r1, #0]
 81035e8:	f7fd f9c8 	bl	810097c <cmox_FieldBN_Mul2>
 81035ec:	69a0      	ldr	r0, [r4, #24]
 81035ee:	4643      	mov	r3, r8
 81035f0:	6801      	ldr	r1, [r0, #0]
 81035f2:	4640      	mov	r0, r8
 81035f4:	680a      	ldr	r2, [r1, #0]
 81035f6:	4659      	mov	r1, fp
 81035f8:	f7fd f80b 	bl	8100612 <cmox_ModAddBN>
 81035fc:	6a23      	ldr	r3, [r4, #32]
 81035fe:	4622      	mov	r2, r4
 8103600:	4659      	mov	r1, fp
 8103602:	4648      	mov	r0, r9
 8103604:	f7fd faad 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103608:	6a23      	ldr	r3, [r4, #32]
 810360a:	4622      	mov	r2, r4
 810360c:	4639      	mov	r1, r7
 810360e:	4638      	mov	r0, r7
 8103610:	f7fd faa7 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103614:	69a0      	ldr	r0, [r4, #24]
 8103616:	463b      	mov	r3, r7
 8103618:	6801      	ldr	r1, [r0, #0]
 810361a:	4638      	mov	r0, r7
 810361c:	680a      	ldr	r2, [r1, #0]
 810361e:	4649      	mov	r1, r9
 8103620:	f7fd f888 	bl	8100734 <cmox_ModSubBN>
 8103624:	69a0      	ldr	r0, [r4, #24]
 8103626:	4633      	mov	r3, r6
 8103628:	6801      	ldr	r1, [r0, #0]
 810362a:	4638      	mov	r0, r7
 810362c:	680a      	ldr	r2, [r1, #0]
 810362e:	9901      	ldr	r1, [sp, #4]
 8103630:	f7fd f880 	bl	8100734 <cmox_ModSubBN>
 8103634:	9901      	ldr	r1, [sp, #4]
 8103636:	6a23      	ldr	r3, [r4, #32]
 8103638:	4622      	mov	r2, r4
 810363a:	4608      	mov	r0, r1
 810363c:	f7fd fa91 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103640:	6a20      	ldr	r0, [r4, #32]
 8103642:	9a01      	ldr	r2, [sp, #4]
 8103644:	4623      	mov	r3, r4
 8103646:	9000      	str	r0, [sp, #0]
 8103648:	69a0      	ldr	r0, [r4, #24]
 810364a:	4611      	mov	r1, r2
 810364c:	6805      	ldr	r5, [r0, #0]
 810364e:	6928      	ldr	r0, [r5, #16]
 8103650:	f7fd fa64 	bl	8100b1c <cmox_ModularBN_Mul>
 8103654:	69a0      	ldr	r0, [r4, #24]
 8103656:	463b      	mov	r3, r7
 8103658:	6801      	ldr	r1, [r0, #0]
 810365a:	4640      	mov	r0, r8
 810365c:	680a      	ldr	r2, [r1, #0]
 810365e:	9901      	ldr	r1, [sp, #4]
 8103660:	f7fc ffd7 	bl	8100612 <cmox_ModAddBN>
 8103664:	69a0      	ldr	r0, [r4, #24]
 8103666:	4643      	mov	r3, r8
 8103668:	6801      	ldr	r1, [r0, #0]
 810366a:	680a      	ldr	r2, [r1, #0]
 810366c:	4659      	mov	r1, fp
 810366e:	4650      	mov	r0, sl
 8103670:	f7fd f860 	bl	8100734 <cmox_ModSubBN>
 8103674:	69a0      	ldr	r0, [r4, #24]
 8103676:	4642      	mov	r2, r8
 8103678:	6801      	ldr	r1, [r0, #0]
 810367a:	4640      	mov	r0, r8
 810367c:	6809      	ldr	r1, [r1, #0]
 810367e:	f7fd f97d 	bl	810097c <cmox_FieldBN_Mul2>
 8103682:	6a23      	ldr	r3, [r4, #32]
 8103684:	4622      	mov	r2, r4
 8103686:	4649      	mov	r1, r9
 8103688:	4638      	mov	r0, r7
 810368a:	f7fd fa6a 	bl	8100b62 <cmox_ModularBN_Sqr>
 810368e:	69a0      	ldr	r0, [r4, #24]
 8103690:	9a01      	ldr	r2, [sp, #4]
 8103692:	6801      	ldr	r1, [r0, #0]
 8103694:	4640      	mov	r0, r8
 8103696:	6809      	ldr	r1, [r1, #0]
 8103698:	f7fd f970 	bl	810097c <cmox_FieldBN_Mul2>
 810369c:	69a0      	ldr	r0, [r4, #24]
 810369e:	4653      	mov	r3, sl
 81036a0:	6801      	ldr	r1, [r0, #0]
 81036a2:	4648      	mov	r0, r9
 81036a4:	680a      	ldr	r2, [r1, #0]
 81036a6:	9901      	ldr	r1, [sp, #4]
 81036a8:	f7fd f844 	bl	8100734 <cmox_ModSubBN>
 81036ac:	69a0      	ldr	r0, [r4, #24]
 81036ae:	4643      	mov	r3, r8
 81036b0:	6801      	ldr	r1, [r0, #0]
 81036b2:	4640      	mov	r0, r8
 81036b4:	680a      	ldr	r2, [r1, #0]
 81036b6:	4651      	mov	r1, sl
 81036b8:	f7fd f83c 	bl	8100734 <cmox_ModSubBN>
 81036bc:	69a0      	ldr	r0, [r4, #24]
 81036be:	464a      	mov	r2, r9
 81036c0:	6801      	ldr	r1, [r0, #0]
 81036c2:	4658      	mov	r0, fp
 81036c4:	6809      	ldr	r1, [r1, #0]
 81036c6:	f7fd f959 	bl	810097c <cmox_FieldBN_Mul2>
 81036ca:	69a0      	ldr	r0, [r4, #24]
 81036cc:	464a      	mov	r2, r9
 81036ce:	6801      	ldr	r1, [r0, #0]
 81036d0:	4648      	mov	r0, r9
 81036d2:	6809      	ldr	r1, [r1, #0]
 81036d4:	f7fd f952 	bl	810097c <cmox_FieldBN_Mul2>
 81036d8:	69a0      	ldr	r0, [r4, #24]
 81036da:	464a      	mov	r2, r9
 81036dc:	6801      	ldr	r1, [r0, #0]
 81036de:	4648      	mov	r0, r9
 81036e0:	6809      	ldr	r1, [r1, #0]
 81036e2:	f7fd f94b 	bl	810097c <cmox_FieldBN_Mul2>
 81036e6:	6a20      	ldr	r0, [r4, #32]
 81036e8:	4623      	mov	r3, r4
 81036ea:	463a      	mov	r2, r7
 81036ec:	9000      	str	r0, [sp, #0]
 81036ee:	4641      	mov	r1, r8
 81036f0:	4638      	mov	r0, r7
 81036f2:	f7fd fa13 	bl	8100b1c <cmox_ModularBN_Mul>
 81036f6:	69a0      	ldr	r0, [r4, #24]
 81036f8:	465b      	mov	r3, fp
 81036fa:	6801      	ldr	r1, [r0, #0]
 81036fc:	4638      	mov	r0, r7
 81036fe:	680a      	ldr	r2, [r1, #0]
 8103700:	4649      	mov	r1, r9
 8103702:	b003      	add	sp, #12
 8103704:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103708:	f7fd b814 	b.w	8100734 <cmox_ModSubBN>

0810370c <cmox_ECC_EDW_AddPoints_ProjAff>:
 810370c:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8103710:	4604      	mov	r4, r0
 8103712:	6965      	ldr	r5, [r4, #20]
 8103714:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8103716:	f8d5 8000 	ldr.w	r8, [r5]
 810371a:	f8d5 9004 	ldr.w	r9, [r5, #4]
 810371e:	f8d5 a008 	ldr.w	sl, [r5, #8]
 8103722:	b108      	cbz	r0, 8103728 <cmox_ECC_EDW_AddPoints_ProjAff+0x1c>
 8103724:	2500      	movs	r5, #0
 8103726:	6005      	str	r5, [r0, #0]
 8103728:	4616      	mov	r6, r2
 810372a:	6a22      	ldr	r2, [r4, #32]
 810372c:	460f      	mov	r7, r1
 810372e:	461d      	mov	r5, r3
 8103730:	9200      	str	r2, [sp, #0]
 8103732:	6831      	ldr	r1, [r6, #0]
 8103734:	6838      	ldr	r0, [r7, #0]
 8103736:	4623      	mov	r3, r4
 8103738:	4642      	mov	r2, r8
 810373a:	f7fd f9ef 	bl	8100b1c <cmox_ModularBN_Mul>
 810373e:	69a0      	ldr	r0, [r4, #24]
 8103740:	464b      	mov	r3, r9
 8103742:	6801      	ldr	r1, [r0, #0]
 8103744:	6838      	ldr	r0, [r7, #0]
 8103746:	680a      	ldr	r2, [r1, #0]
 8103748:	6879      	ldr	r1, [r7, #4]
 810374a:	f7fc ff62 	bl	8100612 <cmox_ModAddBN>
 810374e:	69a0      	ldr	r0, [r4, #24]
 8103750:	682b      	ldr	r3, [r5, #0]
 8103752:	6801      	ldr	r1, [r0, #0]
 8103754:	6830      	ldr	r0, [r6, #0]
 8103756:	680a      	ldr	r2, [r1, #0]
 8103758:	6871      	ldr	r1, [r6, #4]
 810375a:	f7fc ff5a 	bl	8100612 <cmox_ModAddBN>
 810375e:	6a20      	ldr	r0, [r4, #32]
 8103760:	4623      	mov	r3, r4
 8103762:	9000      	str	r0, [sp, #0]
 8103764:	686a      	ldr	r2, [r5, #4]
 8103766:	6871      	ldr	r1, [r6, #4]
 8103768:	6878      	ldr	r0, [r7, #4]
 810376a:	f7fd f9d7 	bl	8100b1c <cmox_ModularBN_Mul>
 810376e:	6a20      	ldr	r0, [r4, #32]
 8103770:	4623      	mov	r3, r4
 8103772:	4652      	mov	r2, sl
 8103774:	9000      	str	r0, [sp, #0]
 8103776:	6869      	ldr	r1, [r5, #4]
 8103778:	4640      	mov	r0, r8
 810377a:	f7fd f9cf 	bl	8100b1c <cmox_ModularBN_Mul>
 810377e:	6a20      	ldr	r0, [r4, #32]
 8103780:	4623      	mov	r3, r4
 8103782:	4652      	mov	r2, sl
 8103784:	9000      	str	r0, [sp, #0]
 8103786:	69a0      	ldr	r0, [r4, #24]
 8103788:	4651      	mov	r1, sl
 810378a:	6806      	ldr	r6, [r0, #0]
 810378c:	6970      	ldr	r0, [r6, #20]
 810378e:	f7fd f9c5 	bl	8100b1c <cmox_ModularBN_Mul>
 8103792:	6a20      	ldr	r0, [r4, #32]
 8103794:	4623      	mov	r3, r4
 8103796:	464a      	mov	r2, r9
 8103798:	9000      	str	r0, [sp, #0]
 810379a:	6829      	ldr	r1, [r5, #0]
 810379c:	4648      	mov	r0, r9
 810379e:	f7fd f9bd 	bl	8100b1c <cmox_ModularBN_Mul>
 81037a2:	69a0      	ldr	r0, [r4, #24]
 81037a4:	464b      	mov	r3, r9
 81037a6:	6801      	ldr	r1, [r0, #0]
 81037a8:	4648      	mov	r0, r9
 81037aa:	680a      	ldr	r2, [r1, #0]
 81037ac:	4641      	mov	r1, r8
 81037ae:	f7fc ffc1 	bl	8100734 <cmox_ModSubBN>
 81037b2:	69a0      	ldr	r0, [r4, #24]
 81037b4:	464b      	mov	r3, r9
 81037b6:	6801      	ldr	r1, [r0, #0]
 81037b8:	4648      	mov	r0, r9
 81037ba:	680a      	ldr	r2, [r1, #0]
 81037bc:	6869      	ldr	r1, [r5, #4]
 81037be:	f7fc ffb9 	bl	8100734 <cmox_ModSubBN>
 81037c2:	6a20      	ldr	r0, [r4, #32]
 81037c4:	4623      	mov	r3, r4
 81037c6:	4642      	mov	r2, r8
 81037c8:	9000      	str	r0, [sp, #0]
 81037ca:	69a0      	ldr	r0, [r4, #24]
 81037cc:	4641      	mov	r1, r8
 81037ce:	6806      	ldr	r6, [r0, #0]
 81037d0:	6930      	ldr	r0, [r6, #16]
 81037d2:	f7fd f9a3 	bl	8100b1c <cmox_ModularBN_Mul>
 81037d6:	69a1      	ldr	r1, [r4, #24]
 81037d8:	6868      	ldr	r0, [r5, #4]
 81037da:	680a      	ldr	r2, [r1, #0]
 81037dc:	4641      	mov	r1, r8
 81037de:	4603      	mov	r3, r0
 81037e0:	6812      	ldr	r2, [r2, #0]
 81037e2:	f7fc ffa7 	bl	8100734 <cmox_ModSubBN>
 81037e6:	6a23      	ldr	r3, [r4, #32]
 81037e8:	6829      	ldr	r1, [r5, #0]
 81037ea:	68b8      	ldr	r0, [r7, #8]
 81037ec:	4622      	mov	r2, r4
 81037ee:	f7fd f9b8 	bl	8100b62 <cmox_ModularBN_Sqr>
 81037f2:	69a0      	ldr	r0, [r4, #24]
 81037f4:	4643      	mov	r3, r8
 81037f6:	6801      	ldr	r1, [r0, #0]
 81037f8:	6828      	ldr	r0, [r5, #0]
 81037fa:	680a      	ldr	r2, [r1, #0]
 81037fc:	4651      	mov	r1, sl
 81037fe:	f7fc ff99 	bl	8100734 <cmox_ModSubBN>
 8103802:	69a0      	ldr	r0, [r4, #24]
 8103804:	4653      	mov	r3, sl
 8103806:	6801      	ldr	r1, [r0, #0]
 8103808:	6828      	ldr	r0, [r5, #0]
 810380a:	680a      	ldr	r2, [r1, #0]
 810380c:	4651      	mov	r1, sl
 810380e:	f7fc ff00 	bl	8100612 <cmox_ModAddBN>
 8103812:	6a20      	ldr	r0, [r4, #32]
 8103814:	4623      	mov	r3, r4
 8103816:	464a      	mov	r2, r9
 8103818:	9000      	str	r0, [sp, #0]
 810381a:	4649      	mov	r1, r9
 810381c:	4640      	mov	r0, r8
 810381e:	f7fd f97d 	bl	8100b1c <cmox_ModularBN_Mul>
 8103822:	6a20      	ldr	r0, [r4, #32]
 8103824:	4623      	mov	r3, r4
 8103826:	4649      	mov	r1, r9
 8103828:	9000      	str	r0, [sp, #0]
 810382a:	682a      	ldr	r2, [r5, #0]
 810382c:	68b8      	ldr	r0, [r7, #8]
 810382e:	f7fd f975 	bl	8100b1c <cmox_ModularBN_Mul>
 8103832:	6a20      	ldr	r0, [r4, #32]
 8103834:	4623      	mov	r3, r4
 8103836:	464a      	mov	r2, r9
 8103838:	9000      	str	r0, [sp, #0]
 810383a:	6869      	ldr	r1, [r5, #4]
 810383c:	4650      	mov	r0, sl
 810383e:	f7fd f96d 	bl	8100b1c <cmox_ModularBN_Mul>
 8103842:	6a20      	ldr	r0, [r4, #32]
 8103844:	4623      	mov	r3, r4
 8103846:	4649      	mov	r1, r9
 8103848:	9000      	str	r0, [sp, #0]
 810384a:	686a      	ldr	r2, [r5, #4]
 810384c:	68b8      	ldr	r0, [r7, #8]
 810384e:	f7fd f965 	bl	8100b1c <cmox_ModularBN_Mul>
 8103852:	6a20      	ldr	r0, [r4, #32]
 8103854:	4623      	mov	r3, r4
 8103856:	4651      	mov	r1, sl
 8103858:	9000      	str	r0, [sp, #0]
 810385a:	68aa      	ldr	r2, [r5, #8]
 810385c:	4640      	mov	r0, r8
 810385e:	f7fd f95d 	bl	8100b1c <cmox_ModularBN_Mul>
 8103862:	e8bd 87f3 	ldmia.w	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, pc}

08103866 <cmox_ECC_EDW_AddPoints_Proj>:
 8103866:	e92d 47fc 	stmdb	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 810386a:	4604      	mov	r4, r0
 810386c:	6960      	ldr	r0, [r4, #20]
 810386e:	f8d0 a000 	ldr.w	sl, [r0]
 8103872:	f8d0 8004 	ldr.w	r8, [r0, #4]
 8103876:	f8d0 9008 	ldr.w	r9, [r0, #8]
 810387a:	6a20      	ldr	r0, [r4, #32]
 810387c:	460d      	mov	r5, r1
 810387e:	4617      	mov	r7, r2
 8103880:	9000      	str	r0, [sp, #0]
 8103882:	68b9      	ldr	r1, [r7, #8]
 8103884:	68a8      	ldr	r0, [r5, #8]
 8103886:	461e      	mov	r6, r3
 8103888:	4623      	mov	r3, r4
 810388a:	4652      	mov	r2, sl
 810388c:	f7fd f946 	bl	8100b1c <cmox_ModularBN_Mul>
 8103890:	6a20      	ldr	r0, [r4, #32]
 8103892:	4623      	mov	r3, r4
 8103894:	9000      	str	r0, [sp, #0]
 8103896:	68b2      	ldr	r2, [r6, #8]
 8103898:	6839      	ldr	r1, [r7, #0]
 810389a:	6828      	ldr	r0, [r5, #0]
 810389c:	f7fd f93e 	bl	8100b1c <cmox_ModularBN_Mul>
 81038a0:	69a0      	ldr	r0, [r4, #24]
 81038a2:	4643      	mov	r3, r8
 81038a4:	6801      	ldr	r1, [r0, #0]
 81038a6:	6828      	ldr	r0, [r5, #0]
 81038a8:	680a      	ldr	r2, [r1, #0]
 81038aa:	6869      	ldr	r1, [r5, #4]
 81038ac:	f7fc feb1 	bl	8100612 <cmox_ModAddBN>
 81038b0:	69a0      	ldr	r0, [r4, #24]
 81038b2:	6833      	ldr	r3, [r6, #0]
 81038b4:	6801      	ldr	r1, [r0, #0]
 81038b6:	6838      	ldr	r0, [r7, #0]
 81038b8:	680a      	ldr	r2, [r1, #0]
 81038ba:	6879      	ldr	r1, [r7, #4]
 81038bc:	f7fc fea9 	bl	8100612 <cmox_ModAddBN>
 81038c0:	6a20      	ldr	r0, [r4, #32]
 81038c2:	4623      	mov	r3, r4
 81038c4:	9000      	str	r0, [sp, #0]
 81038c6:	6872      	ldr	r2, [r6, #4]
 81038c8:	6879      	ldr	r1, [r7, #4]
 81038ca:	6868      	ldr	r0, [r5, #4]
 81038cc:	f7fd f926 	bl	8100b1c <cmox_ModularBN_Mul>
 81038d0:	6a20      	ldr	r0, [r4, #32]
 81038d2:	4623      	mov	r3, r4
 81038d4:	464a      	mov	r2, r9
 81038d6:	9000      	str	r0, [sp, #0]
 81038d8:	6871      	ldr	r1, [r6, #4]
 81038da:	68b0      	ldr	r0, [r6, #8]
 81038dc:	f7fd f91e 	bl	8100b1c <cmox_ModularBN_Mul>
 81038e0:	6a20      	ldr	r0, [r4, #32]
 81038e2:	4623      	mov	r3, r4
 81038e4:	464a      	mov	r2, r9
 81038e6:	9000      	str	r0, [sp, #0]
 81038e8:	69a0      	ldr	r0, [r4, #24]
 81038ea:	4649      	mov	r1, r9
 81038ec:	6805      	ldr	r5, [r0, #0]
 81038ee:	6968      	ldr	r0, [r5, #20]
 81038f0:	f7fd f914 	bl	8100b1c <cmox_ModularBN_Mul>
 81038f4:	6a20      	ldr	r0, [r4, #32]
 81038f6:	4623      	mov	r3, r4
 81038f8:	4642      	mov	r2, r8
 81038fa:	9000      	str	r0, [sp, #0]
 81038fc:	6831      	ldr	r1, [r6, #0]
 81038fe:	4640      	mov	r0, r8
 8103900:	f7fd f90c 	bl	8100b1c <cmox_ModularBN_Mul>
 8103904:	69a0      	ldr	r0, [r4, #24]
 8103906:	4643      	mov	r3, r8
 8103908:	6801      	ldr	r1, [r0, #0]
 810390a:	4640      	mov	r0, r8
 810390c:	680a      	ldr	r2, [r1, #0]
 810390e:	68b1      	ldr	r1, [r6, #8]
 8103910:	f7fc ff10 	bl	8100734 <cmox_ModSubBN>
 8103914:	69a0      	ldr	r0, [r4, #24]
 8103916:	4643      	mov	r3, r8
 8103918:	6801      	ldr	r1, [r0, #0]
 810391a:	4640      	mov	r0, r8
 810391c:	680a      	ldr	r2, [r1, #0]
 810391e:	6871      	ldr	r1, [r6, #4]
 8103920:	f7fc ff08 	bl	8100734 <cmox_ModSubBN>
 8103924:	6a20      	ldr	r0, [r4, #32]
 8103926:	68b1      	ldr	r1, [r6, #8]
 8103928:	4623      	mov	r3, r4
 810392a:	9000      	str	r0, [sp, #0]
 810392c:	69a0      	ldr	r0, [r4, #24]
 810392e:	460a      	mov	r2, r1
 8103930:	6805      	ldr	r5, [r0, #0]
 8103932:	6928      	ldr	r0, [r5, #16]
 8103934:	f7fd f8f2 	bl	8100b1c <cmox_ModularBN_Mul>
 8103938:	69a1      	ldr	r1, [r4, #24]
 810393a:	6870      	ldr	r0, [r6, #4]
 810393c:	680a      	ldr	r2, [r1, #0]
 810393e:	68b1      	ldr	r1, [r6, #8]
 8103940:	4603      	mov	r3, r0
 8103942:	6812      	ldr	r2, [r2, #0]
 8103944:	f7fc fef6 	bl	8100734 <cmox_ModSubBN>
 8103948:	6a23      	ldr	r3, [r4, #32]
 810394a:	6831      	ldr	r1, [r6, #0]
 810394c:	4622      	mov	r2, r4
 810394e:	4650      	mov	r0, sl
 8103950:	f7fd f907 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103954:	69a0      	ldr	r0, [r4, #24]
 8103956:	68b3      	ldr	r3, [r6, #8]
 8103958:	6801      	ldr	r1, [r0, #0]
 810395a:	6830      	ldr	r0, [r6, #0]
 810395c:	680a      	ldr	r2, [r1, #0]
 810395e:	4649      	mov	r1, r9
 8103960:	f7fc fee8 	bl	8100734 <cmox_ModSubBN>
 8103964:	69a0      	ldr	r0, [r4, #24]
 8103966:	464b      	mov	r3, r9
 8103968:	6801      	ldr	r1, [r0, #0]
 810396a:	6830      	ldr	r0, [r6, #0]
 810396c:	680a      	ldr	r2, [r1, #0]
 810396e:	4649      	mov	r1, r9
 8103970:	f7fc fe4f 	bl	8100612 <cmox_ModAddBN>
 8103974:	6a20      	ldr	r0, [r4, #32]
 8103976:	4623      	mov	r3, r4
 8103978:	4642      	mov	r2, r8
 810397a:	9000      	str	r0, [sp, #0]
 810397c:	68b0      	ldr	r0, [r6, #8]
 810397e:	4641      	mov	r1, r8
 8103980:	f7fd f8cc 	bl	8100b1c <cmox_ModularBN_Mul>
 8103984:	6a20      	ldr	r0, [r4, #32]
 8103986:	4623      	mov	r3, r4
 8103988:	4641      	mov	r1, r8
 810398a:	9000      	str	r0, [sp, #0]
 810398c:	6832      	ldr	r2, [r6, #0]
 810398e:	4650      	mov	r0, sl
 8103990:	f7fd f8c4 	bl	8100b1c <cmox_ModularBN_Mul>
 8103994:	6a20      	ldr	r0, [r4, #32]
 8103996:	4623      	mov	r3, r4
 8103998:	4642      	mov	r2, r8
 810399a:	9000      	str	r0, [sp, #0]
 810399c:	6871      	ldr	r1, [r6, #4]
 810399e:	4648      	mov	r0, r9
 81039a0:	f7fd f8bc 	bl	8100b1c <cmox_ModularBN_Mul>
 81039a4:	6a20      	ldr	r0, [r4, #32]
 81039a6:	4623      	mov	r3, r4
 81039a8:	4641      	mov	r1, r8
 81039aa:	9000      	str	r0, [sp, #0]
 81039ac:	6872      	ldr	r2, [r6, #4]
 81039ae:	4650      	mov	r0, sl
 81039b0:	f7fd f8b4 	bl	8100b1c <cmox_ModularBN_Mul>
 81039b4:	6a21      	ldr	r1, [r4, #32]
 81039b6:	68b0      	ldr	r0, [r6, #8]
 81039b8:	4623      	mov	r3, r4
 81039ba:	9100      	str	r1, [sp, #0]
 81039bc:	4602      	mov	r2, r0
 81039be:	4649      	mov	r1, r9
 81039c0:	f7fd f8ac 	bl	8100b1c <cmox_ModularBN_Mul>
 81039c4:	e8bd 87f3 	ldmia.w	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, pc}

081039c8 <cmox_ECC_EDW_DblPoint_Proj>:
 81039c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81039cc:	4604      	mov	r4, r0
 81039ce:	6960      	ldr	r0, [r4, #20]
 81039d0:	460d      	mov	r5, r1
 81039d2:	4617      	mov	r7, r2
 81039d4:	6806      	ldr	r6, [r0, #0]
 81039d6:	6839      	ldr	r1, [r7, #0]
 81039d8:	469b      	mov	fp, r3
 81039da:	f8d0 a004 	ldr.w	sl, [r0, #4]
 81039de:	4632      	mov	r2, r6
 81039e0:	4658      	mov	r0, fp
 81039e2:	f7fe fb75 	bl	81020d0 <cmox_bn_mux>
 81039e6:	6879      	ldr	r1, [r7, #4]
 81039e8:	4680      	mov	r8, r0
 81039ea:	4632      	mov	r2, r6
 81039ec:	4658      	mov	r0, fp
 81039ee:	f7fe fb6f 	bl	81020d0 <cmox_bn_mux>
 81039f2:	68b9      	ldr	r1, [r7, #8]
 81039f4:	4681      	mov	r9, r0
 81039f6:	4632      	mov	r2, r6
 81039f8:	4658      	mov	r0, fp
 81039fa:	f7fe fb69 	bl	81020d0 <cmox_bn_mux>
 81039fe:	4607      	mov	r7, r0
 8103a00:	69a0      	ldr	r0, [r4, #24]
 8103a02:	4633      	mov	r3, r6
 8103a04:	6801      	ldr	r1, [r0, #0]
 8103a06:	6828      	ldr	r0, [r5, #0]
 8103a08:	680a      	ldr	r2, [r1, #0]
 8103a0a:	6869      	ldr	r1, [r5, #4]
 8103a0c:	f7fc fe01 	bl	8100612 <cmox_ModAddBN>
 8103a10:	6a23      	ldr	r3, [r4, #32]
 8103a12:	6828      	ldr	r0, [r5, #0]
 8103a14:	4622      	mov	r2, r4
 8103a16:	4651      	mov	r1, sl
 8103a18:	f7fd f8a3 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103a1c:	6a20      	ldr	r0, [r4, #32]
 8103a1e:	4623      	mov	r3, r4
 8103a20:	4642      	mov	r2, r8
 8103a22:	9000      	str	r0, [sp, #0]
 8103a24:	69a0      	ldr	r0, [r4, #24]
 8103a26:	4651      	mov	r1, sl
 8103a28:	f8d0 e000 	ldr.w	lr, [r0]
 8103a2c:	f8de 0010 	ldr.w	r0, [lr, #16]
 8103a30:	f7fd f874 	bl	8100b1c <cmox_ModularBN_Mul>
 8103a34:	6a23      	ldr	r3, [r4, #32]
 8103a36:	4622      	mov	r2, r4
 8103a38:	4631      	mov	r1, r6
 8103a3a:	4630      	mov	r0, r6
 8103a3c:	f7fd f891 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103a40:	69a0      	ldr	r0, [r4, #24]
 8103a42:	4633      	mov	r3, r6
 8103a44:	6801      	ldr	r1, [r0, #0]
 8103a46:	4630      	mov	r0, r6
 8103a48:	680a      	ldr	r2, [r1, #0]
 8103a4a:	4651      	mov	r1, sl
 8103a4c:	f7fc fe72 	bl	8100734 <cmox_ModSubBN>
 8103a50:	6a23      	ldr	r3, [r4, #32]
 8103a52:	6868      	ldr	r0, [r5, #4]
 8103a54:	4622      	mov	r2, r4
 8103a56:	4649      	mov	r1, r9
 8103a58:	f7fd f883 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103a5c:	69a0      	ldr	r0, [r4, #24]
 8103a5e:	4653      	mov	r3, sl
 8103a60:	6801      	ldr	r1, [r0, #0]
 8103a62:	4640      	mov	r0, r8
 8103a64:	680a      	ldr	r2, [r1, #0]
 8103a66:	4649      	mov	r1, r9
 8103a68:	f7fc fdd3 	bl	8100612 <cmox_ModAddBN>
 8103a6c:	69a0      	ldr	r0, [r4, #24]
 8103a6e:	4643      	mov	r3, r8
 8103a70:	6801      	ldr	r1, [r0, #0]
 8103a72:	4640      	mov	r0, r8
 8103a74:	680a      	ldr	r2, [r1, #0]
 8103a76:	4649      	mov	r1, r9
 8103a78:	f7fc fe5c 	bl	8100734 <cmox_ModSubBN>
 8103a7c:	69a0      	ldr	r0, [r4, #24]
 8103a7e:	4633      	mov	r3, r6
 8103a80:	6801      	ldr	r1, [r0, #0]
 8103a82:	4630      	mov	r0, r6
 8103a84:	680a      	ldr	r2, [r1, #0]
 8103a86:	4649      	mov	r1, r9
 8103a88:	f7fc fe54 	bl	8100734 <cmox_ModSubBN>
 8103a8c:	6a23      	ldr	r3, [r4, #32]
 8103a8e:	68a8      	ldr	r0, [r5, #8]
 8103a90:	4622      	mov	r2, r4
 8103a92:	4639      	mov	r1, r7
 8103a94:	f7fd f865 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103a98:	69a0      	ldr	r0, [r4, #24]
 8103a9a:	463a      	mov	r2, r7
 8103a9c:	6801      	ldr	r1, [r0, #0]
 8103a9e:	4638      	mov	r0, r7
 8103aa0:	6809      	ldr	r1, [r1, #0]
 8103aa2:	f7fc ff6b 	bl	810097c <cmox_FieldBN_Mul2>
 8103aa6:	6a20      	ldr	r0, [r4, #32]
 8103aa8:	4623      	mov	r3, r4
 8103aaa:	464a      	mov	r2, r9
 8103aac:	9000      	str	r0, [sp, #0]
 8103aae:	4641      	mov	r1, r8
 8103ab0:	4650      	mov	r0, sl
 8103ab2:	f7fd f833 	bl	8100b1c <cmox_ModularBN_Mul>
 8103ab6:	69a0      	ldr	r0, [r4, #24]
 8103ab8:	463b      	mov	r3, r7
 8103aba:	6801      	ldr	r1, [r0, #0]
 8103abc:	4650      	mov	r0, sl
 8103abe:	680a      	ldr	r2, [r1, #0]
 8103ac0:	4639      	mov	r1, r7
 8103ac2:	f7fc fe37 	bl	8100734 <cmox_ModSubBN>
 8103ac6:	6a20      	ldr	r0, [r4, #32]
 8103ac8:	4623      	mov	r3, r4
 8103aca:	4642      	mov	r2, r8
 8103acc:	9000      	str	r0, [sp, #0]
 8103ace:	4639      	mov	r1, r7
 8103ad0:	4630      	mov	r0, r6
 8103ad2:	f7fd f823 	bl	8100b1c <cmox_ModularBN_Mul>
 8103ad6:	6a20      	ldr	r0, [r4, #32]
 8103ad8:	4623      	mov	r3, r4
 8103ada:	463a      	mov	r2, r7
 8103adc:	9000      	str	r0, [sp, #0]
 8103ade:	4639      	mov	r1, r7
 8103ae0:	4650      	mov	r0, sl
 8103ae2:	f7fd f81b 	bl	8100b1c <cmox_ModularBN_Mul>
 8103ae6:	e8bd 8ff1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08103aea <cmox_ECC_EDW_AddPnts_ExtAff_a_1>:
 8103aea:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8103aee:	460d      	mov	r5, r1
 8103af0:	4604      	mov	r4, r0
 8103af2:	6961      	ldr	r1, [r4, #20]
 8103af4:	9808      	ldr	r0, [sp, #32]
 8103af6:	4617      	mov	r7, r2
 8103af8:	461e      	mov	r6, r3
 8103afa:	f8d1 8000 	ldr.w	r8, [r1]
 8103afe:	f8d1 9004 	ldr.w	r9, [r1, #4]
 8103b02:	b108      	cbz	r0, 8103b08 <cmox_ECC_EDW_AddPnts_ExtAff_a_1+0x1e>
 8103b04:	2100      	movs	r1, #0
 8103b06:	6001      	str	r1, [r0, #0]
 8103b08:	69a0      	ldr	r0, [r4, #24]
 8103b0a:	6829      	ldr	r1, [r5, #0]
 8103b0c:	4643      	mov	r3, r8
 8103b0e:	6800      	ldr	r0, [r0, #0]
 8103b10:	6802      	ldr	r2, [r0, #0]
 8103b12:	6868      	ldr	r0, [r5, #4]
 8103b14:	f7fc fe0e 	bl	8100734 <cmox_ModSubBN>
 8103b18:	69a0      	ldr	r0, [r4, #24]
 8103b1a:	464b      	mov	r3, r9
 8103b1c:	6801      	ldr	r1, [r0, #0]
 8103b1e:	6878      	ldr	r0, [r7, #4]
 8103b20:	680a      	ldr	r2, [r1, #0]
 8103b22:	6839      	ldr	r1, [r7, #0]
 8103b24:	f7fc fd75 	bl	8100612 <cmox_ModAddBN>
 8103b28:	6a20      	ldr	r0, [r4, #32]
 8103b2a:	4623      	mov	r3, r4
 8103b2c:	4642      	mov	r2, r8
 8103b2e:	9000      	str	r0, [sp, #0]
 8103b30:	4649      	mov	r1, r9
 8103b32:	4640      	mov	r0, r8
 8103b34:	f7fc fff2 	bl	8100b1c <cmox_ModularBN_Mul>
 8103b38:	69a0      	ldr	r0, [r4, #24]
 8103b3a:	464b      	mov	r3, r9
 8103b3c:	6801      	ldr	r1, [r0, #0]
 8103b3e:	6868      	ldr	r0, [r5, #4]
 8103b40:	680a      	ldr	r2, [r1, #0]
 8103b42:	6829      	ldr	r1, [r5, #0]
 8103b44:	f7fc fd65 	bl	8100612 <cmox_ModAddBN>
 8103b48:	69a0      	ldr	r0, [r4, #24]
 8103b4a:	6833      	ldr	r3, [r6, #0]
 8103b4c:	6801      	ldr	r1, [r0, #0]
 8103b4e:	6878      	ldr	r0, [r7, #4]
 8103b50:	680a      	ldr	r2, [r1, #0]
 8103b52:	6839      	ldr	r1, [r7, #0]
 8103b54:	f7fc fdee 	bl	8100734 <cmox_ModSubBN>
 8103b58:	6a20      	ldr	r0, [r4, #32]
 8103b5a:	4623      	mov	r3, r4
 8103b5c:	464a      	mov	r2, r9
 8103b5e:	9000      	str	r0, [sp, #0]
 8103b60:	6831      	ldr	r1, [r6, #0]
 8103b62:	4648      	mov	r0, r9
 8103b64:	f7fc ffda 	bl	8100b1c <cmox_ModularBN_Mul>
 8103b68:	69a0      	ldr	r0, [r4, #24]
 8103b6a:	6833      	ldr	r3, [r6, #0]
 8103b6c:	6801      	ldr	r1, [r0, #0]
 8103b6e:	4648      	mov	r0, r9
 8103b70:	680a      	ldr	r2, [r1, #0]
 8103b72:	4641      	mov	r1, r8
 8103b74:	f7fc fdde 	bl	8100734 <cmox_ModSubBN>
 8103b78:	69a0      	ldr	r0, [r4, #24]
 8103b7a:	464b      	mov	r3, r9
 8103b7c:	6801      	ldr	r1, [r0, #0]
 8103b7e:	4648      	mov	r0, r9
 8103b80:	680a      	ldr	r2, [r1, #0]
 8103b82:	4641      	mov	r1, r8
 8103b84:	f7fc fd45 	bl	8100612 <cmox_ModAddBN>
 8103b88:	69a0      	ldr	r0, [r4, #24]
 8103b8a:	6872      	ldr	r2, [r6, #4]
 8103b8c:	6801      	ldr	r1, [r0, #0]
 8103b8e:	68f8      	ldr	r0, [r7, #12]
 8103b90:	6809      	ldr	r1, [r1, #0]
 8103b92:	f7fc fef3 	bl	810097c <cmox_FieldBN_Mul2>
 8103b96:	6a20      	ldr	r0, [r4, #32]
 8103b98:	6871      	ldr	r1, [r6, #4]
 8103b9a:	4623      	mov	r3, r4
 8103b9c:	9000      	str	r0, [sp, #0]
 8103b9e:	68a8      	ldr	r0, [r5, #8]
 8103ba0:	460a      	mov	r2, r1
 8103ba2:	f7fc ffbb 	bl	8100b1c <cmox_ModularBN_Mul>
 8103ba6:	69a0      	ldr	r0, [r4, #24]
 8103ba8:	68f2      	ldr	r2, [r6, #12]
 8103baa:	6801      	ldr	r1, [r0, #0]
 8103bac:	68e8      	ldr	r0, [r5, #12]
 8103bae:	6809      	ldr	r1, [r1, #0]
 8103bb0:	f7fc fee4 	bl	810097c <cmox_FieldBN_Mul2>
 8103bb4:	69a0      	ldr	r0, [r4, #24]
 8103bb6:	4643      	mov	r3, r8
 8103bb8:	6801      	ldr	r1, [r0, #0]
 8103bba:	68f0      	ldr	r0, [r6, #12]
 8103bbc:	680a      	ldr	r2, [r1, #0]
 8103bbe:	6871      	ldr	r1, [r6, #4]
 8103bc0:	f7fc fd27 	bl	8100612 <cmox_ModAddBN>
 8103bc4:	69a1      	ldr	r1, [r4, #24]
 8103bc6:	68f0      	ldr	r0, [r6, #12]
 8103bc8:	680a      	ldr	r2, [r1, #0]
 8103bca:	6871      	ldr	r1, [r6, #4]
 8103bcc:	4603      	mov	r3, r0
 8103bce:	6812      	ldr	r2, [r2, #0]
 8103bd0:	f7fc fdb0 	bl	8100734 <cmox_ModSubBN>
 8103bd4:	6a20      	ldr	r0, [r4, #32]
 8103bd6:	4623      	mov	r3, r4
 8103bd8:	4649      	mov	r1, r9
 8103bda:	9000      	str	r0, [sp, #0]
 8103bdc:	68b2      	ldr	r2, [r6, #8]
 8103bde:	6830      	ldr	r0, [r6, #0]
 8103be0:	f7fc ff9c 	bl	8100b1c <cmox_ModularBN_Mul>
 8103be4:	6a20      	ldr	r0, [r4, #32]
 8103be6:	6831      	ldr	r1, [r6, #0]
 8103be8:	4623      	mov	r3, r4
 8103bea:	9000      	str	r0, [sp, #0]
 8103bec:	460a      	mov	r2, r1
 8103bee:	4640      	mov	r0, r8
 8103bf0:	f7fc ff94 	bl	8100b1c <cmox_ModularBN_Mul>
 8103bf4:	6a20      	ldr	r0, [r4, #32]
 8103bf6:	4623      	mov	r3, r4
 8103bf8:	9000      	str	r0, [sp, #0]
 8103bfa:	6872      	ldr	r2, [r6, #4]
 8103bfc:	68f1      	ldr	r1, [r6, #12]
 8103bfe:	4648      	mov	r0, r9
 8103c00:	f7fc ff8c 	bl	8100b1c <cmox_ModularBN_Mul>
 8103c04:	6a20      	ldr	r0, [r4, #32]
 8103c06:	68f1      	ldr	r1, [r6, #12]
 8103c08:	4623      	mov	r3, r4
 8103c0a:	9000      	str	r0, [sp, #0]
 8103c0c:	460a      	mov	r2, r1
 8103c0e:	4640      	mov	r0, r8
 8103c10:	f7fc ff84 	bl	8100b1c <cmox_ModularBN_Mul>
 8103c14:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

08103c18 <cmox_ECC_EDW_AddPoints_Ext_a_1>:
 8103c18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8103c1c:	4604      	mov	r4, r0
 8103c1e:	6960      	ldr	r0, [r4, #20]
 8103c20:	4617      	mov	r7, r2
 8103c22:	460d      	mov	r5, r1
 8103c24:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8103c28:	f8d0 8000 	ldr.w	r8, [r0]
 8103c2c:	69a0      	ldr	r0, [r4, #24]
 8103c2e:	6829      	ldr	r1, [r5, #0]
 8103c30:	461e      	mov	r6, r3
 8103c32:	6800      	ldr	r0, [r0, #0]
 8103c34:	4643      	mov	r3, r8
 8103c36:	6802      	ldr	r2, [r0, #0]
 8103c38:	6868      	ldr	r0, [r5, #4]
 8103c3a:	f7fc fd7b 	bl	8100734 <cmox_ModSubBN>
 8103c3e:	69a0      	ldr	r0, [r4, #24]
 8103c40:	464b      	mov	r3, r9
 8103c42:	6801      	ldr	r1, [r0, #0]
 8103c44:	6878      	ldr	r0, [r7, #4]
 8103c46:	680a      	ldr	r2, [r1, #0]
 8103c48:	6839      	ldr	r1, [r7, #0]
 8103c4a:	f7fc fce2 	bl	8100612 <cmox_ModAddBN>
 8103c4e:	6a20      	ldr	r0, [r4, #32]
 8103c50:	4623      	mov	r3, r4
 8103c52:	4642      	mov	r2, r8
 8103c54:	9000      	str	r0, [sp, #0]
 8103c56:	4649      	mov	r1, r9
 8103c58:	4640      	mov	r0, r8
 8103c5a:	f7fc ff5f 	bl	8100b1c <cmox_ModularBN_Mul>
 8103c5e:	69a0      	ldr	r0, [r4, #24]
 8103c60:	464b      	mov	r3, r9
 8103c62:	6801      	ldr	r1, [r0, #0]
 8103c64:	6868      	ldr	r0, [r5, #4]
 8103c66:	680a      	ldr	r2, [r1, #0]
 8103c68:	6829      	ldr	r1, [r5, #0]
 8103c6a:	f7fc fcd2 	bl	8100612 <cmox_ModAddBN>
 8103c6e:	69a0      	ldr	r0, [r4, #24]
 8103c70:	6833      	ldr	r3, [r6, #0]
 8103c72:	6801      	ldr	r1, [r0, #0]
 8103c74:	6878      	ldr	r0, [r7, #4]
 8103c76:	680a      	ldr	r2, [r1, #0]
 8103c78:	6839      	ldr	r1, [r7, #0]
 8103c7a:	f7fc fd5b 	bl	8100734 <cmox_ModSubBN>
 8103c7e:	6a20      	ldr	r0, [r4, #32]
 8103c80:	4623      	mov	r3, r4
 8103c82:	464a      	mov	r2, r9
 8103c84:	9000      	str	r0, [sp, #0]
 8103c86:	6831      	ldr	r1, [r6, #0]
 8103c88:	4648      	mov	r0, r9
 8103c8a:	f7fc ff47 	bl	8100b1c <cmox_ModularBN_Mul>
 8103c8e:	69a0      	ldr	r0, [r4, #24]
 8103c90:	6833      	ldr	r3, [r6, #0]
 8103c92:	6801      	ldr	r1, [r0, #0]
 8103c94:	4648      	mov	r0, r9
 8103c96:	680a      	ldr	r2, [r1, #0]
 8103c98:	4641      	mov	r1, r8
 8103c9a:	f7fc fd4b 	bl	8100734 <cmox_ModSubBN>
 8103c9e:	69a0      	ldr	r0, [r4, #24]
 8103ca0:	464b      	mov	r3, r9
 8103ca2:	6801      	ldr	r1, [r0, #0]
 8103ca4:	4648      	mov	r0, r9
 8103ca6:	680a      	ldr	r2, [r1, #0]
 8103ca8:	4641      	mov	r1, r8
 8103caa:	f7fc fcb2 	bl	8100612 <cmox_ModAddBN>
 8103cae:	69a0      	ldr	r0, [r4, #24]
 8103cb0:	6872      	ldr	r2, [r6, #4]
 8103cb2:	6801      	ldr	r1, [r0, #0]
 8103cb4:	68f8      	ldr	r0, [r7, #12]
 8103cb6:	6809      	ldr	r1, [r1, #0]
 8103cb8:	f7fc fe60 	bl	810097c <cmox_FieldBN_Mul2>
 8103cbc:	6a20      	ldr	r0, [r4, #32]
 8103cbe:	6871      	ldr	r1, [r6, #4]
 8103cc0:	4623      	mov	r3, r4
 8103cc2:	9000      	str	r0, [sp, #0]
 8103cc4:	68a8      	ldr	r0, [r5, #8]
 8103cc6:	460a      	mov	r2, r1
 8103cc8:	f7fc ff28 	bl	8100b1c <cmox_ModularBN_Mul>
 8103ccc:	69a0      	ldr	r0, [r4, #24]
 8103cce:	68b2      	ldr	r2, [r6, #8]
 8103cd0:	6801      	ldr	r1, [r0, #0]
 8103cd2:	68b8      	ldr	r0, [r7, #8]
 8103cd4:	6809      	ldr	r1, [r1, #0]
 8103cd6:	f7fc fe51 	bl	810097c <cmox_FieldBN_Mul2>
 8103cda:	6a20      	ldr	r0, [r4, #32]
 8103cdc:	4623      	mov	r3, r4
 8103cde:	9000      	str	r0, [sp, #0]
 8103ce0:	68f2      	ldr	r2, [r6, #12]
 8103ce2:	68b1      	ldr	r1, [r6, #8]
 8103ce4:	68e8      	ldr	r0, [r5, #12]
 8103ce6:	f7fc ff19 	bl	8100b1c <cmox_ModularBN_Mul>
 8103cea:	69a0      	ldr	r0, [r4, #24]
 8103cec:	4643      	mov	r3, r8
 8103cee:	6801      	ldr	r1, [r0, #0]
 8103cf0:	68f0      	ldr	r0, [r6, #12]
 8103cf2:	680a      	ldr	r2, [r1, #0]
 8103cf4:	6871      	ldr	r1, [r6, #4]
 8103cf6:	f7fc fc8c 	bl	8100612 <cmox_ModAddBN>
 8103cfa:	69a1      	ldr	r1, [r4, #24]
 8103cfc:	68f0      	ldr	r0, [r6, #12]
 8103cfe:	680a      	ldr	r2, [r1, #0]
 8103d00:	6871      	ldr	r1, [r6, #4]
 8103d02:	4603      	mov	r3, r0
 8103d04:	6812      	ldr	r2, [r2, #0]
 8103d06:	f7fc fd15 	bl	8100734 <cmox_ModSubBN>
 8103d0a:	6a20      	ldr	r0, [r4, #32]
 8103d0c:	4623      	mov	r3, r4
 8103d0e:	4649      	mov	r1, r9
 8103d10:	9000      	str	r0, [sp, #0]
 8103d12:	68b2      	ldr	r2, [r6, #8]
 8103d14:	6830      	ldr	r0, [r6, #0]
 8103d16:	f7fc ff01 	bl	8100b1c <cmox_ModularBN_Mul>
 8103d1a:	6a20      	ldr	r0, [r4, #32]
 8103d1c:	6831      	ldr	r1, [r6, #0]
 8103d1e:	4623      	mov	r3, r4
 8103d20:	9000      	str	r0, [sp, #0]
 8103d22:	460a      	mov	r2, r1
 8103d24:	4640      	mov	r0, r8
 8103d26:	f7fc fef9 	bl	8100b1c <cmox_ModularBN_Mul>
 8103d2a:	6a20      	ldr	r0, [r4, #32]
 8103d2c:	4623      	mov	r3, r4
 8103d2e:	9000      	str	r0, [sp, #0]
 8103d30:	6872      	ldr	r2, [r6, #4]
 8103d32:	68f1      	ldr	r1, [r6, #12]
 8103d34:	4648      	mov	r0, r9
 8103d36:	f7fc fef1 	bl	8100b1c <cmox_ModularBN_Mul>
 8103d3a:	6a20      	ldr	r0, [r4, #32]
 8103d3c:	68f1      	ldr	r1, [r6, #12]
 8103d3e:	4623      	mov	r3, r4
 8103d40:	9000      	str	r0, [sp, #0]
 8103d42:	460a      	mov	r2, r1
 8103d44:	4640      	mov	r0, r8
 8103d46:	f7fc fee9 	bl	8100b1c <cmox_ModularBN_Mul>
 8103d4a:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

08103d4e <cmox_ECC_EDW_DblPoint_Ext_a_1>:
 8103d4e:	e92d 4ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103d52:	4604      	mov	r4, r0
 8103d54:	4698      	mov	r8, r3
 8103d56:	6960      	ldr	r0, [r4, #20]
 8103d58:	460d      	mov	r5, r1
 8103d5a:	4616      	mov	r6, r2
 8103d5c:	6843      	ldr	r3, [r0, #4]
 8103d5e:	6807      	ldr	r7, [r0, #0]
 8103d60:	4640      	mov	r0, r8
 8103d62:	9301      	str	r3, [sp, #4]
 8103d64:	6831      	ldr	r1, [r6, #0]
 8103d66:	463a      	mov	r2, r7
 8103d68:	f7fe f9b2 	bl	81020d0 <cmox_bn_mux>
 8103d6c:	6871      	ldr	r1, [r6, #4]
 8103d6e:	4681      	mov	r9, r0
 8103d70:	463a      	mov	r2, r7
 8103d72:	4640      	mov	r0, r8
 8103d74:	f7fe f9ac 	bl	81020d0 <cmox_bn_mux>
 8103d78:	68b1      	ldr	r1, [r6, #8]
 8103d7a:	4682      	mov	sl, r0
 8103d7c:	463a      	mov	r2, r7
 8103d7e:	4640      	mov	r0, r8
 8103d80:	f7fe f9a6 	bl	81020d0 <cmox_bn_mux>
 8103d84:	68f1      	ldr	r1, [r6, #12]
 8103d86:	4683      	mov	fp, r0
 8103d88:	463a      	mov	r2, r7
 8103d8a:	4640      	mov	r0, r8
 8103d8c:	f7fe f9a0 	bl	81020d0 <cmox_bn_mux>
 8103d90:	4606      	mov	r6, r0
 8103d92:	6a23      	ldr	r3, [r4, #32]
 8103d94:	6828      	ldr	r0, [r5, #0]
 8103d96:	4622      	mov	r2, r4
 8103d98:	4639      	mov	r1, r7
 8103d9a:	f7fc fee2 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103d9e:	6a23      	ldr	r3, [r4, #32]
 8103da0:	6868      	ldr	r0, [r5, #4]
 8103da2:	4622      	mov	r2, r4
 8103da4:	4631      	mov	r1, r6
 8103da6:	f7fc fedc 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103daa:	6a23      	ldr	r3, [r4, #32]
 8103dac:	68a8      	ldr	r0, [r5, #8]
 8103dae:	4622      	mov	r2, r4
 8103db0:	4659      	mov	r1, fp
 8103db2:	f7fc fed6 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103db6:	69a0      	ldr	r0, [r4, #24]
 8103db8:	465a      	mov	r2, fp
 8103dba:	6801      	ldr	r1, [r0, #0]
 8103dbc:	4658      	mov	r0, fp
 8103dbe:	6809      	ldr	r1, [r1, #0]
 8103dc0:	f7fc fddc 	bl	810097c <cmox_FieldBN_Mul2>
 8103dc4:	69a0      	ldr	r0, [r4, #24]
 8103dc6:	464b      	mov	r3, r9
 8103dc8:	6801      	ldr	r1, [r0, #0]
 8103dca:	6828      	ldr	r0, [r5, #0]
 8103dcc:	680a      	ldr	r2, [r1, #0]
 8103dce:	6869      	ldr	r1, [r5, #4]
 8103dd0:	f7fc fc1f 	bl	8100612 <cmox_ModAddBN>
 8103dd4:	6a23      	ldr	r3, [r4, #32]
 8103dd6:	4622      	mov	r2, r4
 8103dd8:	4649      	mov	r1, r9
 8103dda:	4648      	mov	r0, r9
 8103ddc:	f7fc fec1 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103de0:	69a0      	ldr	r0, [r4, #24]
 8103de2:	464b      	mov	r3, r9
 8103de4:	6801      	ldr	r1, [r0, #0]
 8103de6:	4648      	mov	r0, r9
 8103de8:	680a      	ldr	r2, [r1, #0]
 8103dea:	4639      	mov	r1, r7
 8103dec:	f7fc fca2 	bl	8100734 <cmox_ModSubBN>
 8103df0:	69a0      	ldr	r0, [r4, #24]
 8103df2:	4652      	mov	r2, sl
 8103df4:	4639      	mov	r1, r7
 8103df6:	6803      	ldr	r3, [r0, #0]
 8103df8:	6818      	ldr	r0, [r3, #0]
 8103dfa:	f7fc fd1a 	bl	8100832 <cmox_SubBN>
 8103dfe:	69a0      	ldr	r0, [r4, #24]
 8103e00:	463b      	mov	r3, r7
 8103e02:	6801      	ldr	r1, [r0, #0]
 8103e04:	4648      	mov	r0, r9
 8103e06:	680a      	ldr	r2, [r1, #0]
 8103e08:	4631      	mov	r1, r6
 8103e0a:	f7fc fc93 	bl	8100734 <cmox_ModSubBN>
 8103e0e:	69a0      	ldr	r0, [r4, #24]
 8103e10:	9b01      	ldr	r3, [sp, #4]
 8103e12:	6801      	ldr	r1, [r0, #0]
 8103e14:	4650      	mov	r0, sl
 8103e16:	680a      	ldr	r2, [r1, #0]
 8103e18:	4631      	mov	r1, r6
 8103e1a:	f7fc fbfa 	bl	8100612 <cmox_ModAddBN>
 8103e1e:	69a0      	ldr	r0, [r4, #24]
 8103e20:	4633      	mov	r3, r6
 8103e22:	6801      	ldr	r1, [r0, #0]
 8103e24:	4650      	mov	r0, sl
 8103e26:	680a      	ldr	r2, [r1, #0]
 8103e28:	4631      	mov	r1, r6
 8103e2a:	f7fc fc83 	bl	8100734 <cmox_ModSubBN>
 8103e2e:	69a0      	ldr	r0, [r4, #24]
 8103e30:	4653      	mov	r3, sl
 8103e32:	6801      	ldr	r1, [r0, #0]
 8103e34:	9801      	ldr	r0, [sp, #4]
 8103e36:	680a      	ldr	r2, [r1, #0]
 8103e38:	4659      	mov	r1, fp
 8103e3a:	f7fc fc7b 	bl	8100734 <cmox_ModSubBN>
 8103e3e:	6a20      	ldr	r0, [r4, #32]
 8103e40:	9901      	ldr	r1, [sp, #4]
 8103e42:	4623      	mov	r3, r4
 8103e44:	9000      	str	r0, [sp, #0]
 8103e46:	465a      	mov	r2, fp
 8103e48:	4650      	mov	r0, sl
 8103e4a:	f7fc fe67 	bl	8100b1c <cmox_ModularBN_Mul>
 8103e4e:	6a20      	ldr	r0, [r4, #32]
 8103e50:	4623      	mov	r3, r4
 8103e52:	464a      	mov	r2, r9
 8103e54:	9000      	str	r0, [sp, #0]
 8103e56:	4651      	mov	r1, sl
 8103e58:	4638      	mov	r0, r7
 8103e5a:	f7fc fe5f 	bl	8100b1c <cmox_ModularBN_Mul>
 8103e5e:	6a20      	ldr	r0, [r4, #32]
 8103e60:	4623      	mov	r3, r4
 8103e62:	4652      	mov	r2, sl
 8103e64:	9000      	str	r0, [sp, #0]
 8103e66:	9801      	ldr	r0, [sp, #4]
 8103e68:	4631      	mov	r1, r6
 8103e6a:	f7fc fe57 	bl	8100b1c <cmox_ModularBN_Mul>
 8103e6e:	6a20      	ldr	r0, [r4, #32]
 8103e70:	4623      	mov	r3, r4
 8103e72:	4632      	mov	r2, r6
 8103e74:	9000      	str	r0, [sp, #0]
 8103e76:	4631      	mov	r1, r6
 8103e78:	4638      	mov	r0, r7
 8103e7a:	f7fc fe4f 	bl	8100b1c <cmox_ModularBN_Mul>
 8103e7e:	e8bd 8ff7 	ldmia.w	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08103e82 <cmox_ECC_MONTY_Ladder_XzAff>:
 8103e82:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8103e86:	4604      	mov	r4, r0
 8103e88:	6960      	ldr	r0, [r4, #20]
 8103e8a:	4616      	mov	r6, r2
 8103e8c:	460d      	mov	r5, r1
 8103e8e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8103e92:	f8d0 8000 	ldr.w	r8, [r0]
 8103e96:	69a0      	ldr	r0, [r4, #24]
 8103e98:	461f      	mov	r7, r3
 8103e9a:	68b9      	ldr	r1, [r7, #8]
 8103e9c:	6800      	ldr	r0, [r0, #0]
 8103e9e:	4643      	mov	r3, r8
 8103ea0:	6802      	ldr	r2, [r0, #0]
 8103ea2:	6838      	ldr	r0, [r7, #0]
 8103ea4:	f7fc fbb5 	bl	8100612 <cmox_ModAddBN>
 8103ea8:	69a0      	ldr	r0, [r4, #24]
 8103eaa:	464b      	mov	r3, r9
 8103eac:	6801      	ldr	r1, [r0, #0]
 8103eae:	6838      	ldr	r0, [r7, #0]
 8103eb0:	680a      	ldr	r2, [r1, #0]
 8103eb2:	68b9      	ldr	r1, [r7, #8]
 8103eb4:	f7fc fc3e 	bl	8100734 <cmox_ModSubBN>
 8103eb8:	69a0      	ldr	r0, [r4, #24]
 8103eba:	683b      	ldr	r3, [r7, #0]
 8103ebc:	6801      	ldr	r1, [r0, #0]
 8103ebe:	6830      	ldr	r0, [r6, #0]
 8103ec0:	680a      	ldr	r2, [r1, #0]
 8103ec2:	68b1      	ldr	r1, [r6, #8]
 8103ec4:	f7fc fba5 	bl	8100612 <cmox_ModAddBN>
 8103ec8:	69a0      	ldr	r0, [r4, #24]
 8103eca:	68bb      	ldr	r3, [r7, #8]
 8103ecc:	6801      	ldr	r1, [r0, #0]
 8103ece:	6830      	ldr	r0, [r6, #0]
 8103ed0:	680a      	ldr	r2, [r1, #0]
 8103ed2:	68b1      	ldr	r1, [r6, #8]
 8103ed4:	f7fc fc2e 	bl	8100734 <cmox_ModSubBN>
 8103ed8:	6a21      	ldr	r1, [r4, #32]
 8103eda:	68b8      	ldr	r0, [r7, #8]
 8103edc:	4623      	mov	r3, r4
 8103ede:	9100      	str	r1, [sp, #0]
 8103ee0:	4602      	mov	r2, r0
 8103ee2:	4641      	mov	r1, r8
 8103ee4:	f7fc fe1a 	bl	8100b1c <cmox_ModularBN_Mul>
 8103ee8:	6a23      	ldr	r3, [r4, #32]
 8103eea:	4622      	mov	r2, r4
 8103eec:	4641      	mov	r1, r8
 8103eee:	4640      	mov	r0, r8
 8103ef0:	f7fc fe37 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103ef4:	6a21      	ldr	r1, [r4, #32]
 8103ef6:	6838      	ldr	r0, [r7, #0]
 8103ef8:	4623      	mov	r3, r4
 8103efa:	9100      	str	r1, [sp, #0]
 8103efc:	4602      	mov	r2, r0
 8103efe:	4649      	mov	r1, r9
 8103f00:	f7fc fe0c 	bl	8100b1c <cmox_ModularBN_Mul>
 8103f04:	6a23      	ldr	r3, [r4, #32]
 8103f06:	4622      	mov	r2, r4
 8103f08:	4649      	mov	r1, r9
 8103f0a:	4648      	mov	r0, r9
 8103f0c:	f7fc fe29 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103f10:	69a0      	ldr	r0, [r4, #24]
 8103f12:	6833      	ldr	r3, [r6, #0]
 8103f14:	6801      	ldr	r1, [r0, #0]
 8103f16:	68b8      	ldr	r0, [r7, #8]
 8103f18:	680a      	ldr	r2, [r1, #0]
 8103f1a:	6839      	ldr	r1, [r7, #0]
 8103f1c:	f7fc fb79 	bl	8100612 <cmox_ModAddBN>
 8103f20:	69a1      	ldr	r1, [r4, #24]
 8103f22:	68b8      	ldr	r0, [r7, #8]
 8103f24:	680a      	ldr	r2, [r1, #0]
 8103f26:	6839      	ldr	r1, [r7, #0]
 8103f28:	4603      	mov	r3, r0
 8103f2a:	6812      	ldr	r2, [r2, #0]
 8103f2c:	f7fc fc02 	bl	8100734 <cmox_ModSubBN>
 8103f30:	6830      	ldr	r0, [r6, #0]
 8103f32:	6a23      	ldr	r3, [r4, #32]
 8103f34:	4622      	mov	r2, r4
 8103f36:	4601      	mov	r1, r0
 8103f38:	f7fc fe13 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103f3c:	68b8      	ldr	r0, [r7, #8]
 8103f3e:	6a23      	ldr	r3, [r4, #32]
 8103f40:	4622      	mov	r2, r4
 8103f42:	4601      	mov	r1, r0
 8103f44:	f7fc fe0d 	bl	8100b62 <cmox_ModularBN_Sqr>
 8103f48:	6a20      	ldr	r0, [r4, #32]
 8103f4a:	4623      	mov	r3, r4
 8103f4c:	9000      	str	r0, [sp, #0]
 8103f4e:	68b2      	ldr	r2, [r6, #8]
 8103f50:	68b9      	ldr	r1, [r7, #8]
 8103f52:	6828      	ldr	r0, [r5, #0]
 8103f54:	f7fc fde2 	bl	8100b1c <cmox_ModularBN_Mul>
 8103f58:	6a20      	ldr	r0, [r4, #32]
 8103f5a:	4623      	mov	r3, r4
 8103f5c:	4649      	mov	r1, r9
 8103f5e:	9000      	str	r0, [sp, #0]
 8103f60:	683a      	ldr	r2, [r7, #0]
 8103f62:	4640      	mov	r0, r8
 8103f64:	f7fc fdda 	bl	8100b1c <cmox_ModularBN_Mul>
 8103f68:	69a0      	ldr	r0, [r4, #24]
 8103f6a:	464b      	mov	r3, r9
 8103f6c:	6801      	ldr	r1, [r0, #0]
 8103f6e:	4640      	mov	r0, r8
 8103f70:	680a      	ldr	r2, [r1, #0]
 8103f72:	4649      	mov	r1, r9
 8103f74:	f7fc fbde 	bl	8100734 <cmox_ModSubBN>
 8103f78:	6a20      	ldr	r0, [r4, #32]
 8103f7a:	4623      	mov	r3, r4
 8103f7c:	9000      	str	r0, [sp, #0]
 8103f7e:	69a0      	ldr	r0, [r4, #24]
 8103f80:	68ba      	ldr	r2, [r7, #8]
 8103f82:	6801      	ldr	r1, [r0, #0]
 8103f84:	4648      	mov	r0, r9
 8103f86:	6909      	ldr	r1, [r1, #16]
 8103f88:	f7fc fdc8 	bl	8100b1c <cmox_ModularBN_Mul>
 8103f8c:	69a0      	ldr	r0, [r4, #24]
 8103f8e:	4643      	mov	r3, r8
 8103f90:	6801      	ldr	r1, [r0, #0]
 8103f92:	4640      	mov	r0, r8
 8103f94:	680a      	ldr	r2, [r1, #0]
 8103f96:	68b9      	ldr	r1, [r7, #8]
 8103f98:	f7fc fb3b 	bl	8100612 <cmox_ModAddBN>
 8103f9c:	6a20      	ldr	r0, [r4, #32]
 8103f9e:	4623      	mov	r3, r4
 8103fa0:	4649      	mov	r1, r9
 8103fa2:	9000      	str	r0, [sp, #0]
 8103fa4:	68ba      	ldr	r2, [r7, #8]
 8103fa6:	4640      	mov	r0, r8
 8103fa8:	f7fc fdb8 	bl	8100b1c <cmox_ModularBN_Mul>
 8103fac:	e8bd 83f1 	ldmia.w	sp!, {r0, r4, r5, r6, r7, r8, r9, pc}

08103fb0 <cmox_ECC_CompleteMADD>:
 8103fb0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
 8103fb2:	4606      	mov	r6, r0
 8103fb4:	2000      	movs	r0, #0
 8103fb6:	460c      	mov	r4, r1
 8103fb8:	4617      	mov	r7, r2
 8103fba:	9001      	str	r0, [sp, #4]
 8103fbc:	6922      	ldr	r2, [r4, #16]
 8103fbe:	461d      	mov	r5, r3
 8103fc0:	2100      	movs	r1, #0
 8103fc2:	612a      	str	r2, [r5, #16]
 8103fc4:	7c20      	ldrb	r0, [r4, #16]
 8103fc6:	f000 0001 	and.w	r0, r0, #1
 8103fca:	f7fc fdff 	bl	8100bcc <cmox_mathUtils_neq>
 8103fce:	2801      	cmp	r0, #1
 8103fd0:	d107      	bne.n	8103fe2 <cmox_ECC_CompleteMADD+0x32>
 8103fd2:	7c38      	ldrb	r0, [r7, #16]
 8103fd4:	2100      	movs	r1, #0
 8103fd6:	f000 0001 	and.w	r0, r0, #1
 8103fda:	f7fc fdf7 	bl	8100bcc <cmox_mathUtils_neq>
 8103fde:	2801      	cmp	r0, #1
 8103fe0:	d036      	beq.n	8104050 <cmox_ECC_CompleteMADD+0xa0>
 8103fe2:	7c20      	ldrb	r0, [r4, #16]
 8103fe4:	2100      	movs	r1, #0
 8103fe6:	f000 0001 	and.w	r0, r0, #1
 8103fea:	f7fc fdef 	bl	8100bcc <cmox_mathUtils_neq>
 8103fee:	2801      	cmp	r0, #1
 8103ff0:	d102      	bne.n	8103ff8 <cmox_ECC_CompleteMADD+0x48>
 8103ff2:	462a      	mov	r2, r5
 8103ff4:	4639      	mov	r1, r7
 8103ff6:	e009      	b.n	810400c <cmox_ECC_CompleteMADD+0x5c>
 8103ff8:	7c38      	ldrb	r0, [r7, #16]
 8103ffa:	2100      	movs	r1, #0
 8103ffc:	f000 0001 	and.w	r0, r0, #1
 8104000:	f7fc fde4 	bl	8100bcc <cmox_mathUtils_neq>
 8104004:	2801      	cmp	r0, #1
 8104006:	d104      	bne.n	8104012 <cmox_ECC_CompleteMADD+0x62>
 8104008:	462a      	mov	r2, r5
 810400a:	4621      	mov	r1, r4
 810400c:	f7fe faae 	bl	810256c <cmox_ECC_CondCopyPoint>
 8104010:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8104012:	463a      	mov	r2, r7
 8104014:	a801      	add	r0, sp, #4
 8104016:	9000      	str	r0, [sp, #0]
 8104018:	69b7      	ldr	r7, [r6, #24]
 810401a:	462b      	mov	r3, r5
 810401c:	4621      	mov	r1, r4
 810401e:	f8d7 c004 	ldr.w	ip, [r7, #4]
 8104022:	4630      	mov	r0, r6
 8104024:	f8dc 7004 	ldr.w	r7, [ip, #4]
 8104028:	47b8      	blx	r7
 810402a:	9801      	ldr	r0, [sp, #4]
 810402c:	07c1      	lsls	r1, r0, #31
 810402e:	d513      	bpl.n	8104058 <cmox_ECC_CompleteMADD+0xa8>
 8104030:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8104034:	b160      	cbz	r0, 8104050 <cmox_ECC_CompleteMADD+0xa0>
 8104036:	4630      	mov	r0, r6
 8104038:	69b6      	ldr	r6, [r6, #24]
 810403a:	2301      	movs	r3, #1
 810403c:	462a      	mov	r2, r5
 810403e:	6877      	ldr	r7, [r6, #4]
 8104040:	4621      	mov	r1, r4
 8104042:	f8d7 c000 	ldr.w	ip, [r7]
 8104046:	47e0      	blx	ip
 8104048:	6920      	ldr	r0, [r4, #16]
 810404a:	0840      	lsrs	r0, r0, #1
 810404c:	0040      	lsls	r0, r0, #1
 810404e:	e002      	b.n	8104056 <cmox_ECC_CompleteMADD+0xa6>
 8104050:	6928      	ldr	r0, [r5, #16]
 8104052:	f040 0001 	orr.w	r0, r0, #1
 8104056:	6128      	str	r0, [r5, #16]
 8104058:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}

0810405a <cmox_ECC_CompleteADD>:
 810405a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810405c:	4606      	mov	r6, r0
 810405e:	460f      	mov	r7, r1
 8104060:	6938      	ldr	r0, [r7, #16]
 8104062:	461d      	mov	r5, r3
 8104064:	4614      	mov	r4, r2
 8104066:	6128      	str	r0, [r5, #16]
 8104068:	7c38      	ldrb	r0, [r7, #16]
 810406a:	2100      	movs	r1, #0
 810406c:	f000 0001 	and.w	r0, r0, #1
 8104070:	f7fc fdac 	bl	8100bcc <cmox_mathUtils_neq>
 8104074:	2801      	cmp	r0, #1
 8104076:	d107      	bne.n	8104088 <cmox_ECC_CompleteADD+0x2e>
 8104078:	7c20      	ldrb	r0, [r4, #16]
 810407a:	2100      	movs	r1, #0
 810407c:	f000 0001 	and.w	r0, r0, #1
 8104080:	f7fc fda4 	bl	8100bcc <cmox_mathUtils_neq>
 8104084:	2801      	cmp	r0, #1
 8104086:	d03b      	beq.n	8104100 <cmox_ECC_CompleteADD+0xa6>
 8104088:	7c38      	ldrb	r0, [r7, #16]
 810408a:	2100      	movs	r1, #0
 810408c:	f000 0001 	and.w	r0, r0, #1
 8104090:	f7fc fd9c 	bl	8100bcc <cmox_mathUtils_neq>
 8104094:	2801      	cmp	r0, #1
 8104096:	d102      	bne.n	810409e <cmox_ECC_CompleteADD+0x44>
 8104098:	462a      	mov	r2, r5
 810409a:	4621      	mov	r1, r4
 810409c:	e009      	b.n	81040b2 <cmox_ECC_CompleteADD+0x58>
 810409e:	7c20      	ldrb	r0, [r4, #16]
 81040a0:	2100      	movs	r1, #0
 81040a2:	f000 0001 	and.w	r0, r0, #1
 81040a6:	f7fc fd91 	bl	8100bcc <cmox_mathUtils_neq>
 81040aa:	2801      	cmp	r0, #1
 81040ac:	d105      	bne.n	81040ba <cmox_ECC_CompleteADD+0x60>
 81040ae:	462a      	mov	r2, r5
 81040b0:	4639      	mov	r1, r7
 81040b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 81040b6:	f7fe ba59 	b.w	810256c <cmox_ECC_CondCopyPoint>
 81040ba:	4639      	mov	r1, r7
 81040bc:	69b7      	ldr	r7, [r6, #24]
 81040be:	462b      	mov	r3, r5
 81040c0:	4622      	mov	r2, r4
 81040c2:	f8d7 c004 	ldr.w	ip, [r7, #4]
 81040c6:	4630      	mov	r0, r6
 81040c8:	f8dc 7008 	ldr.w	r7, [ip, #8]
 81040cc:	47b8      	blx	r7
 81040ce:	68a8      	ldr	r0, [r5, #8]
 81040d0:	2100      	movs	r1, #0
 81040d2:	f7fe f843 	bl	810215c <cmox_bn_cmpUint>
 81040d6:	2801      	cmp	r0, #1
 81040d8:	d116      	bne.n	8104108 <cmox_ECC_CompleteADD+0xae>
 81040da:	6828      	ldr	r0, [r5, #0]
 81040dc:	2100      	movs	r1, #0
 81040de:	f7fe f83d 	bl	810215c <cmox_bn_cmpUint>
 81040e2:	2801      	cmp	r0, #1
 81040e4:	d10c      	bne.n	8104100 <cmox_ECC_CompleteADD+0xa6>
 81040e6:	4630      	mov	r0, r6
 81040e8:	69b6      	ldr	r6, [r6, #24]
 81040ea:	2301      	movs	r3, #1
 81040ec:	462a      	mov	r2, r5
 81040ee:	6877      	ldr	r7, [r6, #4]
 81040f0:	4621      	mov	r1, r4
 81040f2:	f8d7 c000 	ldr.w	ip, [r7]
 81040f6:	47e0      	blx	ip
 81040f8:	6920      	ldr	r0, [r4, #16]
 81040fa:	0840      	lsrs	r0, r0, #1
 81040fc:	0040      	lsls	r0, r0, #1
 81040fe:	e002      	b.n	8104106 <cmox_ECC_CompleteADD+0xac>
 8104100:	6928      	ldr	r0, [r5, #16]
 8104102:	f040 0001 	orr.w	r0, r0, #1
 8104106:	6128      	str	r0, [r5, #16]
 8104108:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}

0810410a <cmox_ECC_CompleteDBL>:
 810410a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810410c:	4605      	mov	r5, r0
 810410e:	460e      	mov	r6, r1
 8104110:	6930      	ldr	r0, [r6, #16]
 8104112:	4614      	mov	r4, r2
 8104114:	2100      	movs	r1, #0
 8104116:	6120      	str	r0, [r4, #16]
 8104118:	7c30      	ldrb	r0, [r6, #16]
 810411a:	f000 0001 	and.w	r0, r0, #1
 810411e:	f7fc fd55 	bl	8100bcc <cmox_mathUtils_neq>
 8104122:	2801      	cmp	r0, #1
 8104124:	d103      	bne.n	810412e <cmox_ECC_CompleteDBL+0x24>
 8104126:	6920      	ldr	r0, [r4, #16]
 8104128:	f040 0001 	orr.w	r0, r0, #1
 810412c:	e00a      	b.n	8104144 <cmox_ECC_CompleteDBL+0x3a>
 810412e:	4628      	mov	r0, r5
 8104130:	69ad      	ldr	r5, [r5, #24]
 8104132:	4631      	mov	r1, r6
 8104134:	2301      	movs	r3, #1
 8104136:	686e      	ldr	r6, [r5, #4]
 8104138:	4622      	mov	r2, r4
 810413a:	6837      	ldr	r7, [r6, #0]
 810413c:	47b8      	blx	r7
 810413e:	6920      	ldr	r0, [r4, #16]
 8104140:	0840      	lsrs	r0, r0, #1
 8104142:	0040      	lsls	r0, r0, #1
 8104144:	6120      	str	r0, [r4, #16]
 8104146:	bdf1      	pop	{r0, r4, r5, r6, r7, pc}
 8104148:	0101b004 	.word	0x0101b004
 810414c:	45011700 	.word	0x45011700

08104150 <cmox_membuf_alloc>:
 8104150:	b520      	push	{r5, lr}
 8104152:	b111      	cbz	r1, 810415a <cmox_membuf_alloc+0xa>
 8104154:	b91a      	cbnz	r2, 810415e <cmox_membuf_alloc+0xe>
 8104156:	2000      	movs	r0, #0
 8104158:	6008      	str	r0, [r1, #0]
 810415a:	2001      	movs	r0, #1
 810415c:	bd20      	pop	{r5, pc}
 810415e:	6883      	ldr	r3, [r0, #8]
 8104160:	1cd2      	adds	r2, r2, #3
 8104162:	6845      	ldr	r5, [r0, #4]
 8104164:	0892      	lsrs	r2, r2, #2
 8104166:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 810416a:	4295      	cmp	r5, r2
 810416c:	d203      	bcs.n	8104176 <cmox_membuf_alloc+0x26>
 810416e:	2000      	movs	r0, #0
 8104170:	6008      	str	r0, [r1, #0]
 8104172:	2002      	movs	r0, #2
 8104174:	bd20      	pop	{r5, pc}
 8104176:	6805      	ldr	r5, [r0, #0]
 8104178:	442b      	add	r3, r5
 810417a:	600b      	str	r3, [r1, #0]
 810417c:	6082      	str	r2, [r0, #8]
 810417e:	4611      	mov	r1, r2
 8104180:	68c2      	ldr	r2, [r0, #12]
 8104182:	4291      	cmp	r1, r2
 8104184:	bf38      	it	cc
 8104186:	4611      	movcc	r1, r2
 8104188:	60c1      	str	r1, [r0, #12]
 810418a:	2000      	movs	r0, #0
 810418c:	bd20      	pop	{r5, pc}

0810418e <cmox_membuf_free>:
 810418e:	b510      	push	{r4, lr}
 8104190:	4604      	mov	r4, r0
 8104192:	2000      	movs	r0, #0
 8104194:	2900      	cmp	r1, #0
 8104196:	bf1c      	itt	ne
 8104198:	680b      	ldrne	r3, [r1, #0]
 810419a:	2b00      	cmpne	r3, #0
 810419c:	d003      	beq.n	81041a6 <cmox_membuf_free+0x18>
 810419e:	b112      	cbz	r2, 81041a6 <cmox_membuf_free+0x18>
 81041a0:	68a3      	ldr	r3, [r4, #8]
 81041a2:	4293      	cmp	r3, r2
 81041a4:	d201      	bcs.n	81041aa <cmox_membuf_free+0x1c>
 81041a6:	2001      	movs	r0, #1
 81041a8:	bd10      	pop	{r4, pc}
 81041aa:	1cd2      	adds	r2, r2, #3
 81041ac:	0892      	lsrs	r2, r2, #2
 81041ae:	6008      	str	r0, [r1, #0]
 81041b0:	eba3 0282 	sub.w	r2, r3, r2, lsl #2
 81041b4:	60a2      	str	r2, [r4, #8]
 81041b6:	bd10      	pop	{r4, pc}

081041b8 <cmox_ll_init>:
  * @brief          CMOX library low level initialization
  * @param          pArg User defined parameter that is transmitted from initialize service
  * @retval         Initialization status: @ref CMOX_INIT_SUCCESS / @ref CMOX_INIT_FAIL
  */
cmox_init_retval_t cmox_ll_init(void *pArg)
{
 81041b8:	b480      	push	{r7}
 81041ba:	b085      	sub	sp, #20
 81041bc:	af00      	add	r7, sp, #0
 81041be:	6078      	str	r0, [r7, #4]
  (void)pArg;
  /* Ensure CRC is enabled for cryptographic processing */
  __HAL_RCC_CRC_RELEASE_RESET();
 81041c0:	4b0d      	ldr	r3, [pc, #52]	@ (81041f8 <cmox_ll_init+0x40>)
 81041c2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 81041c4:	4a0c      	ldr	r2, [pc, #48]	@ (81041f8 <cmox_ll_init+0x40>)
 81041c6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 81041ca:	6613      	str	r3, [r2, #96]	@ 0x60
  __HAL_RCC_CRC_CLK_ENABLE();
 81041cc:	4b0a      	ldr	r3, [pc, #40]	@ (81041f8 <cmox_ll_init+0x40>)
 81041ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 81041d2:	4a09      	ldr	r2, [pc, #36]	@ (81041f8 <cmox_ll_init+0x40>)
 81041d4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 81041d8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 81041dc:	4b06      	ldr	r3, [pc, #24]	@ (81041f8 <cmox_ll_init+0x40>)
 81041de:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 81041e2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 81041e6:	60fb      	str	r3, [r7, #12]
 81041e8:	68fb      	ldr	r3, [r7, #12]
  return CMOX_INIT_SUCCESS;
 81041ea:	2300      	movs	r3, #0
}
 81041ec:	4618      	mov	r0, r3
 81041ee:	3714      	adds	r7, #20
 81041f0:	46bd      	mov	sp, r7
 81041f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 81041f6:	4770      	bx	lr
 81041f8:	46020c00 	.word	0x46020c00

081041fc <cmox_ll_deInit>:
  * @brief          CMOX library low level de-initialization
  * @param          pArg User defined parameter that is transmitted from finalize service
  * @retval         De-initialization status: @ref CMOX_INIT_SUCCESS / @ref CMOX_INIT_FAIL
  */
cmox_init_retval_t cmox_ll_deInit(void *pArg)
{
 81041fc:	b480      	push	{r7}
 81041fe:	b083      	sub	sp, #12
 8104200:	af00      	add	r7, sp, #0
 8104202:	6078      	str	r0, [r7, #4]
  (void)pArg;
  /* Do not turn off CRC to avoid side effect on other SW parts using it */
  return CMOX_INIT_SUCCESS;
 8104204:	2300      	movs	r3, #0
}
 8104206:	4618      	mov	r0, r3
 8104208:	370c      	adds	r7, #12
 810420a:	46bd      	mov	sp, r7
 810420c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104210:	4770      	bx	lr
	...

08104214 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8104214:	b580      	push	{r7, lr}
 8104216:	b088      	sub	sp, #32
 8104218:	af06      	add	r7, sp, #24
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 810421a:	f000 f8c1 	bl	81043a0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* GTZC initialisation */
  MX_GTZC_NS_Init();
 810421e:	f000 f84f 	bl	81042c0 <MX_GTZC_NS_Init>

  /* Initialize all configured peripherals */
  /* USER CODE BEGIN 2 */

  // Call Secure world to sign
  	if (SECURE_ECC_Sign_NSC(msg, sizeof(msg)-1, signature, &sig_len) != 0) {
 8104222:	4b1d      	ldr	r3, [pc, #116]	@ (8104298 <main+0x84>)
 8104224:	4a1d      	ldr	r2, [pc, #116]	@ (810429c <main+0x88>)
 8104226:	210a      	movs	r1, #10
 8104228:	481d      	ldr	r0, [pc, #116]	@ (81042a0 <main+0x8c>)
 810422a:	f000 fc35 	bl	8104a98 <__SECURE_ECC_Sign_NSC_veneer>
 810422e:	4603      	mov	r3, r0
 8104230:	2b00      	cmp	r3, #0
 8104232:	d005      	beq.n	8104240 <main+0x2c>
  	 HAL_GPIO_WritePin(GPIOH, GPIO_PIN_6, GPIO_PIN_SET); // red LED signing failed
 8104234:	2201      	movs	r2, #1
 8104236:	2140      	movs	r1, #64	@ 0x40
 8104238:	481a      	ldr	r0, [pc, #104]	@ (81042a4 <main+0x90>)
 810423a:	f000 fad3 	bl	81047e4 <HAL_GPIO_WritePin>
 810423e:	e028      	b.n	8104292 <main+0x7e>
  	} else {
  	 // Verify signature
  	 cmox_initialize(NULL);
 8104240:	2000      	movs	r0, #0
 8104242:	f7fc f98d 	bl	8100560 <cmox_initialize>
     cmox_ecc_retval_t ret = cmox_ecdsa_verify(&Ecc_Ctx_NS,
 8104246:	4b18      	ldr	r3, [pc, #96]	@ (81042a8 <main+0x94>)
 8104248:	6819      	ldr	r1, [r3, #0]
 810424a:	4b13      	ldr	r3, [pc, #76]	@ (8104298 <main+0x84>)
 810424c:	681b      	ldr	r3, [r3, #0]
 810424e:	4a17      	ldr	r2, [pc, #92]	@ (81042ac <main+0x98>)
 8104250:	9204      	str	r2, [sp, #16]
 8104252:	9303      	str	r3, [sp, #12]
 8104254:	4b11      	ldr	r3, [pc, #68]	@ (810429c <main+0x88>)
 8104256:	9302      	str	r3, [sp, #8]
 8104258:	230a      	movs	r3, #10
 810425a:	9301      	str	r3, [sp, #4]
 810425c:	4b10      	ldr	r3, [pc, #64]	@ (81042a0 <main+0x8c>)
 810425e:	9300      	str	r3, [sp, #0]
 8104260:	2360      	movs	r3, #96	@ 0x60
 8104262:	4a13      	ldr	r2, [pc, #76]	@ (81042b0 <main+0x9c>)
 8104264:	4813      	ldr	r0, [pc, #76]	@ (81042b4 <main+0xa0>)
 8104266:	f7fc f807 	bl	8100278 <cmox_ecdsa_verify>
 810426a:	6078      	str	r0, [r7, #4]
                                               CMOX_ECC_SECP384R1_LOWMEM,
											   Public_Key, sizeof(Public_Key),
                                               msg, sizeof(msg)-1,
                                               signature, sig_len,
                                               &fault_check);
  	 cmox_finalize(NULL);
 810426c:	2000      	movs	r0, #0
 810426e:	f7fc f987 	bl	8100580 <cmox_finalize>

  	 if (ret == CMOX_ECC_AUTH_SUCCESS)
 8104272:	687b      	ldr	r3, [r7, #4]
 8104274:	4a10      	ldr	r2, [pc, #64]	@ (81042b8 <main+0xa4>)
 8104276:	4293      	cmp	r3, r2
 8104278:	d105      	bne.n	8104286 <main+0x72>
  		 HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET); // green LED
 810427a:	2201      	movs	r2, #1
 810427c:	2180      	movs	r1, #128	@ 0x80
 810427e:	4809      	ldr	r0, [pc, #36]	@ (81042a4 <main+0x90>)
 8104280:	f000 fab0 	bl	81047e4 <HAL_GPIO_WritePin>
 8104284:	e005      	b.n	8104292 <main+0x7e>
  	 else
  		 HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET); // red LED
 8104286:	2201      	movs	r2, #1
 8104288:	2140      	movs	r1, #64	@ 0x40
 810428a:	480c      	ldr	r0, [pc, #48]	@ (81042bc <main+0xa8>)
 810428c:	f000 faaa 	bl	81047e4 <HAL_GPIO_WritePin>
  	}
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8104290:	bf00      	nop
 8104292:	bf00      	nop
 8104294:	e7fd      	b.n	8104292 <main+0x7e>
 8104296:	bf00      	nop
 8104298:	20040098 	.word	0x20040098
 810429c:	20040038 	.word	0x20040038
 81042a0:	20040000 	.word	0x20040000
 81042a4:	42021c00 	.word	0x42021c00
 81042a8:	08104d18 	.word	0x08104d18
 81042ac:	2004009c 	.word	0x2004009c
 81042b0:	08104d70 	.word	0x08104d70
 81042b4:	200400a0 	.word	0x200400a0
 81042b8:	0006c726 	.word	0x0006c726
 81042bc:	42020400 	.word	0x42020400

081042c0 <MX_GTZC_NS_Init>:
  * @brief GTZC_NS Initialization Function
  * @param None
  * @retval None
  */
static void MX_GTZC_NS_Init(void)
{
 81042c0:	b480      	push	{r7}
 81042c2:	af00      	add	r7, sp, #0
  /* USER CODE END GTZC_NS_Init 1 */
  /* USER CODE BEGIN GTZC_NS_Init 2 */

  /* USER CODE END GTZC_NS_Init 2 */

}
 81042c4:	bf00      	nop
 81042c6:	46bd      	mov	sp, r7
 81042c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81042cc:	4770      	bx	lr
	...

081042d0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 81042d0:	b580      	push	{r7, lr}
 81042d2:	b082      	sub	sp, #8
 81042d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 81042d6:	4b0a      	ldr	r3, [pc, #40]	@ (8104300 <HAL_MspInit+0x30>)
 81042d8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 81042dc:	4a08      	ldr	r2, [pc, #32]	@ (8104300 <HAL_MspInit+0x30>)
 81042de:	f043 0304 	orr.w	r3, r3, #4
 81042e2:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 81042e6:	4b06      	ldr	r3, [pc, #24]	@ (8104300 <HAL_MspInit+0x30>)
 81042e8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 81042ec:	f003 0304 	and.w	r3, r3, #4
 81042f0:	607b      	str	r3, [r7, #4]
 81042f2:	687b      	ldr	r3, [r7, #4]
  HAL_PWREx_EnableVddIO2();
 81042f4:	f000 fa8e 	bl	8104814 <HAL_PWREx_EnableVddIO2>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 81042f8:	bf00      	nop
 81042fa:	3708      	adds	r7, #8
 81042fc:	46bd      	mov	sp, r7
 81042fe:	bd80      	pop	{r7, pc}
 8104300:	46020c00 	.word	0x46020c00

08104304 <MemManage_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8104304:	b480      	push	{r7}
 8104306:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8104308:	bf00      	nop
 810430a:	e7fd      	b.n	8104308 <MemManage_Handler+0x4>

0810430c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 810430c:	b480      	push	{r7}
 810430e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8104310:	bf00      	nop
 8104312:	e7fd      	b.n	8104310 <UsageFault_Handler+0x4>

08104314 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8104314:	b480      	push	{r7}
 8104316:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8104318:	bf00      	nop
 810431a:	46bd      	mov	sp, r7
 810431c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104320:	4770      	bx	lr

08104322 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8104322:	b480      	push	{r7}
 8104324:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8104326:	bf00      	nop
 8104328:	46bd      	mov	sp, r7
 810432a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810432e:	4770      	bx	lr

08104330 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8104330:	b580      	push	{r7, lr}
 8104332:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8104334:	f000 f8da 	bl	81044ec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8104338:	bf00      	nop
 810433a:	bd80      	pop	{r7, pc}

0810433c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 810433c:	b480      	push	{r7}
 810433e:	af00      	add	r7, sp, #0
  /* Nothing done in non-secure */

  /* Non-secure main application shall call SystemCoreClockUpdate() to update */
  /* the SystemCoreClock variable to insure non-secure application relies on  */
  /* the initial clock reference set by secure application.                   */
}
 8104340:	bf00      	nop
 8104342:	46bd      	mov	sp, r7
 8104344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104348:	4770      	bx	lr
	...

0810434c <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* set stack pointer */
 810434c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8104384 <LoopForever+0x2>
/* Call the clock system initialization function.*/
  bl  SystemInit
 8104350:	f7ff fff4 	bl	810433c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs	r1, #0
 8104354:	2100      	movs	r1, #0
  b	LoopCopyDataInit
 8104356:	e003      	b.n	8104360 <LoopCopyDataInit>

08104358 <CopyDataInit>:

CopyDataInit:
	ldr	r3, =_sidata
 8104358:	4b0b      	ldr	r3, [pc, #44]	@ (8104388 <LoopForever+0x6>)
	ldr	r3, [r3, r1]
 810435a:	585b      	ldr	r3, [r3, r1]
	str	r3, [r0, r1]
 810435c:	5043      	str	r3, [r0, r1]
	adds	r1, r1, #4
 810435e:	3104      	adds	r1, #4

08104360 <LoopCopyDataInit>:

LoopCopyDataInit:
	ldr	r0, =_sdata
 8104360:	480a      	ldr	r0, [pc, #40]	@ (810438c <LoopForever+0xa>)
	ldr	r3, =_edata
 8104362:	4b0b      	ldr	r3, [pc, #44]	@ (8104390 <LoopForever+0xe>)
	adds	r2, r0, r1
 8104364:	1842      	adds	r2, r0, r1
	cmp	r2, r3
 8104366:	429a      	cmp	r2, r3
	bcc	CopyDataInit
 8104368:	d3f6      	bcc.n	8104358 <CopyDataInit>
	ldr	r2, =_sbss
 810436a:	4a0a      	ldr	r2, [pc, #40]	@ (8104394 <LoopForever+0x12>)
	b	LoopFillZerobss
 810436c:	e002      	b.n	8104374 <LoopFillZerobss>

0810436e <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
	movs	r3, #0
 810436e:	2300      	movs	r3, #0
	str	r3, [r2], #4
 8104370:	f842 3b04 	str.w	r3, [r2], #4

08104374 <LoopFillZerobss>:

LoopFillZerobss:
	ldr	r3, = _ebss
 8104374:	4b08      	ldr	r3, [pc, #32]	@ (8104398 <LoopForever+0x16>)
	cmp	r2, r3
 8104376:	429a      	cmp	r2, r3
	bcc	FillZerobss
 8104378:	d3f9      	bcc.n	810436e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 810437a:	f000 fb5d 	bl	8104a38 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 810437e:	f7ff ff49 	bl	8104214 <main>

08104382 <LoopForever>:

LoopForever:
    b LoopForever
 8104382:	e7fe      	b.n	8104382 <LoopForever>
  ldr   sp, =_estack    /* set stack pointer */
 8104384:	200c0000 	.word	0x200c0000
	ldr	r3, =_sidata
 8104388:	081051bc 	.word	0x081051bc
	ldr	r0, =_sdata
 810438c:	20040000 	.word	0x20040000
	ldr	r3, =_edata
 8104390:	20040015 	.word	0x20040015
	ldr	r2, =_sbss
 8104394:	20040018 	.word	0x20040018
	ldr	r3, = _ebss
 8104398:	200400bc 	.word	0x200400bc

0810439c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 810439c:	e7fe      	b.n	810439c <ADC1_IRQHandler>
	...

081043a0 <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 81043a0:	b580      	push	{r7, lr}
 81043a2:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 81043a4:	4b12      	ldr	r3, [pc, #72]	@ (81043f0 <HAL_Init+0x50>)
 81043a6:	681b      	ldr	r3, [r3, #0]
 81043a8:	4a11      	ldr	r2, [pc, #68]	@ (81043f0 <HAL_Init+0x50>)
 81043aa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 81043ae:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 81043b0:	2003      	movs	r0, #3
 81043b2:	f000 f93e 	bl	8104632 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 81043b6:	f000 fa3d 	bl	8104834 <HAL_RCC_GetSysClockFreq>
 81043ba:	4602      	mov	r2, r0
 81043bc:	4b0d      	ldr	r3, [pc, #52]	@ (81043f4 <HAL_Init+0x54>)
 81043be:	6a1b      	ldr	r3, [r3, #32]
 81043c0:	f003 030f 	and.w	r3, r3, #15
 81043c4:	490c      	ldr	r1, [pc, #48]	@ (81043f8 <HAL_Init+0x58>)
 81043c6:	5ccb      	ldrb	r3, [r1, r3]
 81043c8:	fa22 f303 	lsr.w	r3, r2, r3
 81043cc:	4a0b      	ldr	r2, [pc, #44]	@ (81043fc <HAL_Init+0x5c>)
 81043ce:	6013      	str	r3, [r2, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 81043d0:	2004      	movs	r0, #4
 81043d2:	f000 f975 	bl	81046c0 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 81043d6:	2000      	movs	r0, #0
 81043d8:	f000 f812 	bl	8104400 <HAL_InitTick>
 81043dc:	4603      	mov	r3, r0
 81043de:	2b00      	cmp	r3, #0
 81043e0:	d001      	beq.n	81043e6 <HAL_Init+0x46>
  {
    return HAL_ERROR;
 81043e2:	2301      	movs	r3, #1
 81043e4:	e002      	b.n	81043ec <HAL_Init+0x4c>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 81043e6:	f7ff ff73 	bl	81042d0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 81043ea:	2300      	movs	r3, #0
}
 81043ec:	4618      	mov	r0, r3
 81043ee:	bd80      	pop	{r7, pc}
 81043f0:	40022000 	.word	0x40022000
 81043f4:	46020c00 	.word	0x46020c00
 81043f8:	08104dd0 	.word	0x08104dd0
 81043fc:	2004000c 	.word	0x2004000c

08104400 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8104400:	b580      	push	{r7, lr}
 8104402:	b084      	sub	sp, #16
 8104404:	af00      	add	r7, sp, #0
 8104406:	6078      	str	r0, [r7, #4]
  uint32_t ticknumber = 0U;
 8104408:	2300      	movs	r3, #0
 810440a:	60fb      	str	r3, [r7, #12]
  uint32_t systicksel;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if ((uint32_t)uwTickFreq == 0UL)
 810440c:	4b33      	ldr	r3, [pc, #204]	@ (81044dc <HAL_InitTick+0xdc>)
 810440e:	781b      	ldrb	r3, [r3, #0]
 8104410:	2b00      	cmp	r3, #0
 8104412:	d101      	bne.n	8104418 <HAL_InitTick+0x18>
  {
    return HAL_ERROR;
 8104414:	2301      	movs	r3, #1
 8104416:	e05c      	b.n	81044d2 <HAL_InitTick+0xd2>
  }

  /* Check Clock source to calculate the tickNumber */
  if (READ_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk) == SysTick_CTRL_CLKSOURCE_Msk)
 8104418:	4b31      	ldr	r3, [pc, #196]	@ (81044e0 <HAL_InitTick+0xe0>)
 810441a:	681b      	ldr	r3, [r3, #0]
 810441c:	f003 0304 	and.w	r3, r3, #4
 8104420:	2b04      	cmp	r3, #4
 8104422:	d10c      	bne.n	810443e <HAL_InitTick+0x3e>
  {
    /* HCLK selected as SysTick clock source */
    ticknumber = SystemCoreClock / (1000UL / (uint32_t)uwTickFreq);
 8104424:	4b2f      	ldr	r3, [pc, #188]	@ (81044e4 <HAL_InitTick+0xe4>)
 8104426:	681a      	ldr	r2, [r3, #0]
 8104428:	4b2c      	ldr	r3, [pc, #176]	@ (81044dc <HAL_InitTick+0xdc>)
 810442a:	781b      	ldrb	r3, [r3, #0]
 810442c:	4619      	mov	r1, r3
 810442e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8104432:	fbb3 f3f1 	udiv	r3, r3, r1
 8104436:	fbb2 f3f3 	udiv	r3, r2, r3
 810443a:	60fb      	str	r3, [r7, #12]
 810443c:	e037      	b.n	81044ae <HAL_InitTick+0xae>
  }
  else
  {
    systicksel = HAL_SYSTICK_GetCLKSourceConfig();
 810443e:	f000 f997 	bl	8104770 <HAL_SYSTICK_GetCLKSourceConfig>
 8104442:	60b8      	str	r0, [r7, #8]
    switch (systicksel)
 8104444:	68bb      	ldr	r3, [r7, #8]
 8104446:	2b02      	cmp	r3, #2
 8104448:	d023      	beq.n	8104492 <HAL_InitTick+0x92>
 810444a:	68bb      	ldr	r3, [r7, #8]
 810444c:	2b02      	cmp	r3, #2
 810444e:	d82d      	bhi.n	81044ac <HAL_InitTick+0xac>
 8104450:	68bb      	ldr	r3, [r7, #8]
 8104452:	2b00      	cmp	r3, #0
 8104454:	d003      	beq.n	810445e <HAL_InitTick+0x5e>
 8104456:	68bb      	ldr	r3, [r7, #8]
 8104458:	2b01      	cmp	r3, #1
 810445a:	d00d      	beq.n	8104478 <HAL_InitTick+0x78>
        /* Calculate tick value */
        ticknumber = (LSE_VALUE / (1000UL / (uint32_t)uwTickFreq));
        break;
      default:
        /* Nothing to do */
        break;
 810445c:	e026      	b.n	81044ac <HAL_InitTick+0xac>
        ticknumber = (SystemCoreClock / (8000UL / (uint32_t)uwTickFreq));
 810445e:	4b21      	ldr	r3, [pc, #132]	@ (81044e4 <HAL_InitTick+0xe4>)
 8104460:	681a      	ldr	r2, [r3, #0]
 8104462:	4b1e      	ldr	r3, [pc, #120]	@ (81044dc <HAL_InitTick+0xdc>)
 8104464:	781b      	ldrb	r3, [r3, #0]
 8104466:	4619      	mov	r1, r3
 8104468:	f44f 53fa 	mov.w	r3, #8000	@ 0x1f40
 810446c:	fbb3 f3f1 	udiv	r3, r3, r1
 8104470:	fbb2 f3f3 	udiv	r3, r2, r3
 8104474:	60fb      	str	r3, [r7, #12]
        break;
 8104476:	e01a      	b.n	81044ae <HAL_InitTick+0xae>
        ticknumber = (LSI_VALUE / (1000UL / (uint32_t)uwTickFreq));
 8104478:	4b18      	ldr	r3, [pc, #96]	@ (81044dc <HAL_InitTick+0xdc>)
 810447a:	781b      	ldrb	r3, [r3, #0]
 810447c:	461a      	mov	r2, r3
 810447e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8104482:	fbb3 f3f2 	udiv	r3, r3, r2
 8104486:	f44f 42fa 	mov.w	r2, #32000	@ 0x7d00
 810448a:	fbb2 f3f3 	udiv	r3, r2, r3
 810448e:	60fb      	str	r3, [r7, #12]
        break;
 8104490:	e00d      	b.n	81044ae <HAL_InitTick+0xae>
        ticknumber = (LSE_VALUE / (1000UL / (uint32_t)uwTickFreq));
 8104492:	4b12      	ldr	r3, [pc, #72]	@ (81044dc <HAL_InitTick+0xdc>)
 8104494:	781b      	ldrb	r3, [r3, #0]
 8104496:	461a      	mov	r2, r3
 8104498:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 810449c:	fbb3 f3f2 	udiv	r3, r3, r2
 81044a0:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 81044a4:	fbb2 f3f3 	udiv	r3, r2, r3
 81044a8:	60fb      	str	r3, [r7, #12]
        break;
 81044aa:	e000      	b.n	81044ae <HAL_InitTick+0xae>
        break;
 81044ac:	bf00      	nop
    }
  }

  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(ticknumber) > 0U)
 81044ae:	68f8      	ldr	r0, [r7, #12]
 81044b0:	f000 f8e4 	bl	810467c <HAL_SYSTICK_Config>
 81044b4:	4603      	mov	r3, r0
 81044b6:	2b00      	cmp	r3, #0
 81044b8:	d001      	beq.n	81044be <HAL_InitTick+0xbe>
  {
    return HAL_ERROR;
 81044ba:	2301      	movs	r3, #1
 81044bc:	e009      	b.n	81044d2 <HAL_InitTick+0xd2>
  }

  /* Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 81044be:	2200      	movs	r2, #0
 81044c0:	6879      	ldr	r1, [r7, #4]
 81044c2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 81044c6:	f000 f8bf 	bl	8104648 <HAL_NVIC_SetPriority>
  uwTickPrio = TickPriority;
 81044ca:	4a07      	ldr	r2, [pc, #28]	@ (81044e8 <HAL_InitTick+0xe8>)
 81044cc:	687b      	ldr	r3, [r7, #4]
 81044ce:	6013      	str	r3, [r2, #0]

  /* Return function status */
  return HAL_OK;
 81044d0:	2300      	movs	r3, #0
}
 81044d2:	4618      	mov	r0, r3
 81044d4:	3710      	adds	r7, #16
 81044d6:	46bd      	mov	sp, r7
 81044d8:	bd80      	pop	{r7, pc}
 81044da:	bf00      	nop
 81044dc:	20040014 	.word	0x20040014
 81044e0:	e000e010 	.word	0xe000e010
 81044e4:	2004000c 	.word	0x2004000c
 81044e8:	20040010 	.word	0x20040010

081044ec <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 81044ec:	b480      	push	{r7}
 81044ee:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 81044f0:	4b06      	ldr	r3, [pc, #24]	@ (810450c <HAL_IncTick+0x20>)
 81044f2:	781b      	ldrb	r3, [r3, #0]
 81044f4:	461a      	mov	r2, r3
 81044f6:	4b06      	ldr	r3, [pc, #24]	@ (8104510 <HAL_IncTick+0x24>)
 81044f8:	681b      	ldr	r3, [r3, #0]
 81044fa:	4413      	add	r3, r2
 81044fc:	4a04      	ldr	r2, [pc, #16]	@ (8104510 <HAL_IncTick+0x24>)
 81044fe:	6013      	str	r3, [r2, #0]
}
 8104500:	bf00      	nop
 8104502:	46bd      	mov	sp, r7
 8104504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104508:	4770      	bx	lr
 810450a:	bf00      	nop
 810450c:	20040014 	.word	0x20040014
 8104510:	200400b8 	.word	0x200400b8

08104514 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8104514:	b480      	push	{r7}
 8104516:	b085      	sub	sp, #20
 8104518:	af00      	add	r7, sp, #0
 810451a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 810451c:	687b      	ldr	r3, [r7, #4]
 810451e:	f003 0307 	and.w	r3, r3, #7
 8104522:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8104524:	4b0c      	ldr	r3, [pc, #48]	@ (8104558 <__NVIC_SetPriorityGrouping+0x44>)
 8104526:	68db      	ldr	r3, [r3, #12]
 8104528:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 810452a:	68ba      	ldr	r2, [r7, #8]
 810452c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8104530:	4013      	ands	r3, r2
 8104532:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8104534:	68fb      	ldr	r3, [r7, #12]
 8104536:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8104538:	68bb      	ldr	r3, [r7, #8]
 810453a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 810453c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8104540:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8104544:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8104546:	4a04      	ldr	r2, [pc, #16]	@ (8104558 <__NVIC_SetPriorityGrouping+0x44>)
 8104548:	68bb      	ldr	r3, [r7, #8]
 810454a:	60d3      	str	r3, [r2, #12]
}
 810454c:	bf00      	nop
 810454e:	3714      	adds	r7, #20
 8104550:	46bd      	mov	sp, r7
 8104552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104556:	4770      	bx	lr
 8104558:	e000ed00 	.word	0xe000ed00

0810455c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 810455c:	b480      	push	{r7}
 810455e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8104560:	4b04      	ldr	r3, [pc, #16]	@ (8104574 <__NVIC_GetPriorityGrouping+0x18>)
 8104562:	68db      	ldr	r3, [r3, #12]
 8104564:	0a1b      	lsrs	r3, r3, #8
 8104566:	f003 0307 	and.w	r3, r3, #7
}
 810456a:	4618      	mov	r0, r3
 810456c:	46bd      	mov	sp, r7
 810456e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104572:	4770      	bx	lr
 8104574:	e000ed00 	.word	0xe000ed00

08104578 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8104578:	b480      	push	{r7}
 810457a:	b083      	sub	sp, #12
 810457c:	af00      	add	r7, sp, #0
 810457e:	4603      	mov	r3, r0
 8104580:	6039      	str	r1, [r7, #0]
 8104582:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8104584:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8104588:	2b00      	cmp	r3, #0
 810458a:	db0a      	blt.n	81045a2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 810458c:	683b      	ldr	r3, [r7, #0]
 810458e:	b2da      	uxtb	r2, r3
 8104590:	490c      	ldr	r1, [pc, #48]	@ (81045c4 <__NVIC_SetPriority+0x4c>)
 8104592:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8104596:	0112      	lsls	r2, r2, #4
 8104598:	b2d2      	uxtb	r2, r2
 810459a:	440b      	add	r3, r1
 810459c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 81045a0:	e00a      	b.n	81045b8 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 81045a2:	683b      	ldr	r3, [r7, #0]
 81045a4:	b2da      	uxtb	r2, r3
 81045a6:	4908      	ldr	r1, [pc, #32]	@ (81045c8 <__NVIC_SetPriority+0x50>)
 81045a8:	79fb      	ldrb	r3, [r7, #7]
 81045aa:	f003 030f 	and.w	r3, r3, #15
 81045ae:	3b04      	subs	r3, #4
 81045b0:	0112      	lsls	r2, r2, #4
 81045b2:	b2d2      	uxtb	r2, r2
 81045b4:	440b      	add	r3, r1
 81045b6:	761a      	strb	r2, [r3, #24]
}
 81045b8:	bf00      	nop
 81045ba:	370c      	adds	r7, #12
 81045bc:	46bd      	mov	sp, r7
 81045be:	f85d 7b04 	ldr.w	r7, [sp], #4
 81045c2:	4770      	bx	lr
 81045c4:	e000e100 	.word	0xe000e100
 81045c8:	e000ed00 	.word	0xe000ed00

081045cc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 81045cc:	b480      	push	{r7}
 81045ce:	b089      	sub	sp, #36	@ 0x24
 81045d0:	af00      	add	r7, sp, #0
 81045d2:	60f8      	str	r0, [r7, #12]
 81045d4:	60b9      	str	r1, [r7, #8]
 81045d6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 81045d8:	68fb      	ldr	r3, [r7, #12]
 81045da:	f003 0307 	and.w	r3, r3, #7
 81045de:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 81045e0:	69fb      	ldr	r3, [r7, #28]
 81045e2:	f1c3 0307 	rsb	r3, r3, #7
 81045e6:	2b04      	cmp	r3, #4
 81045e8:	bf28      	it	cs
 81045ea:	2304      	movcs	r3, #4
 81045ec:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 81045ee:	69fb      	ldr	r3, [r7, #28]
 81045f0:	3304      	adds	r3, #4
 81045f2:	2b06      	cmp	r3, #6
 81045f4:	d902      	bls.n	81045fc <NVIC_EncodePriority+0x30>
 81045f6:	69fb      	ldr	r3, [r7, #28]
 81045f8:	3b03      	subs	r3, #3
 81045fa:	e000      	b.n	81045fe <NVIC_EncodePriority+0x32>
 81045fc:	2300      	movs	r3, #0
 81045fe:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8104600:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8104604:	69bb      	ldr	r3, [r7, #24]
 8104606:	fa02 f303 	lsl.w	r3, r2, r3
 810460a:	43da      	mvns	r2, r3
 810460c:	68bb      	ldr	r3, [r7, #8]
 810460e:	401a      	ands	r2, r3
 8104610:	697b      	ldr	r3, [r7, #20]
 8104612:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8104614:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8104618:	697b      	ldr	r3, [r7, #20]
 810461a:	fa01 f303 	lsl.w	r3, r1, r3
 810461e:	43d9      	mvns	r1, r3
 8104620:	687b      	ldr	r3, [r7, #4]
 8104622:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8104624:	4313      	orrs	r3, r2
         );
}
 8104626:	4618      	mov	r0, r3
 8104628:	3724      	adds	r7, #36	@ 0x24
 810462a:	46bd      	mov	sp, r7
 810462c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104630:	4770      	bx	lr

08104632 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8104632:	b580      	push	{r7, lr}
 8104634:	b082      	sub	sp, #8
 8104636:	af00      	add	r7, sp, #0
 8104638:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 810463a:	6878      	ldr	r0, [r7, #4]
 810463c:	f7ff ff6a 	bl	8104514 <__NVIC_SetPriorityGrouping>
}
 8104640:	bf00      	nop
 8104642:	3708      	adds	r7, #8
 8104644:	46bd      	mov	sp, r7
 8104646:	bd80      	pop	{r7, pc}

08104648 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8104648:	b580      	push	{r7, lr}
 810464a:	b086      	sub	sp, #24
 810464c:	af00      	add	r7, sp, #0
 810464e:	4603      	mov	r3, r0
 8104650:	60b9      	str	r1, [r7, #8]
 8104652:	607a      	str	r2, [r7, #4]
 8104654:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8104656:	f7ff ff81 	bl	810455c <__NVIC_GetPriorityGrouping>
 810465a:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 810465c:	687a      	ldr	r2, [r7, #4]
 810465e:	68b9      	ldr	r1, [r7, #8]
 8104660:	6978      	ldr	r0, [r7, #20]
 8104662:	f7ff ffb3 	bl	81045cc <NVIC_EncodePriority>
 8104666:	4602      	mov	r2, r0
 8104668:	f997 300f 	ldrsb.w	r3, [r7, #15]
 810466c:	4611      	mov	r1, r2
 810466e:	4618      	mov	r0, r3
 8104670:	f7ff ff82 	bl	8104578 <__NVIC_SetPriority>
}
 8104674:	bf00      	nop
 8104676:	3718      	adds	r7, #24
 8104678:	46bd      	mov	sp, r7
 810467a:	bd80      	pop	{r7, pc}

0810467c <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 810467c:	b480      	push	{r7}
 810467e:	b083      	sub	sp, #12
 8104680:	af00      	add	r7, sp, #0
 8104682:	6078      	str	r0, [r7, #4]
  if ((TicksNumb - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8104684:	687b      	ldr	r3, [r7, #4]
 8104686:	3b01      	subs	r3, #1
 8104688:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 810468c:	d301      	bcc.n	8104692 <HAL_SYSTICK_Config+0x16>
  {
    /* Reload value impossible */
    return (1UL);
 810468e:	2301      	movs	r3, #1
 8104690:	e00d      	b.n	81046ae <HAL_SYSTICK_Config+0x32>
  }

  /* Set reload register */
  WRITE_REG(SysTick->LOAD, (uint32_t)(TicksNumb - 1UL));
 8104692:	4a0a      	ldr	r2, [pc, #40]	@ (81046bc <HAL_SYSTICK_Config+0x40>)
 8104694:	687b      	ldr	r3, [r7, #4]
 8104696:	3b01      	subs	r3, #1
 8104698:	6053      	str	r3, [r2, #4]

  /* Load the SysTick Counter Value */
  WRITE_REG(SysTick->VAL, 0UL);
 810469a:	4b08      	ldr	r3, [pc, #32]	@ (81046bc <HAL_SYSTICK_Config+0x40>)
 810469c:	2200      	movs	r2, #0
 810469e:	609a      	str	r2, [r3, #8]

  /* Enable SysTick IRQ and SysTick Timer */
  SET_BIT(SysTick->CTRL, (SysTick_CTRL_TICKINT_Msk | SysTick_CTRL_ENABLE_Msk));
 81046a0:	4b06      	ldr	r3, [pc, #24]	@ (81046bc <HAL_SYSTICK_Config+0x40>)
 81046a2:	681b      	ldr	r3, [r3, #0]
 81046a4:	4a05      	ldr	r2, [pc, #20]	@ (81046bc <HAL_SYSTICK_Config+0x40>)
 81046a6:	f043 0303 	orr.w	r3, r3, #3
 81046aa:	6013      	str	r3, [r2, #0]

  /* Function successful */
  return (0UL);
 81046ac:	2300      	movs	r3, #0
}
 81046ae:	4618      	mov	r0, r3
 81046b0:	370c      	adds	r7, #12
 81046b2:	46bd      	mov	sp, r7
 81046b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81046b8:	4770      	bx	lr
 81046ba:	bf00      	nop
 81046bc:	e000e010 	.word	0xe000e010

081046c0 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 81046c0:	b480      	push	{r7}
 81046c2:	b083      	sub	sp, #12
 81046c4:	af00      	add	r7, sp, #0
 81046c6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 81046c8:	687b      	ldr	r3, [r7, #4]
 81046ca:	2b04      	cmp	r3, #4
 81046cc:	d844      	bhi.n	8104758 <HAL_SYSTICK_CLKSourceConfig+0x98>
 81046ce:	a201      	add	r2, pc, #4	@ (adr r2, 81046d4 <HAL_SYSTICK_CLKSourceConfig+0x14>)
 81046d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 81046d4:	081046f7 	.word	0x081046f7
 81046d8:	08104715 	.word	0x08104715
 81046dc:	08104737 	.word	0x08104737
 81046e0:	08104759 	.word	0x08104759
 81046e4:	081046e9 	.word	0x081046e9
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 81046e8:	4b1f      	ldr	r3, [pc, #124]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 81046ea:	681b      	ldr	r3, [r3, #0]
 81046ec:	4a1e      	ldr	r2, [pc, #120]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 81046ee:	f043 0304 	orr.w	r3, r3, #4
 81046f2:	6013      	str	r3, [r2, #0]
      break;
 81046f4:	e031      	b.n	810475a <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 81046f6:	4b1c      	ldr	r3, [pc, #112]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 81046f8:	681b      	ldr	r3, [r3, #0]
 81046fa:	4a1b      	ldr	r2, [pc, #108]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 81046fc:	f023 0304 	bic.w	r3, r3, #4
 8104700:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, (0x00000000U));
 8104702:	4b1a      	ldr	r3, [pc, #104]	@ (810476c <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8104704:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104708:	4a18      	ldr	r2, [pc, #96]	@ (810476c <HAL_SYSTICK_CLKSourceConfig+0xac>)
 810470a:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 810470e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
 8104712:	e022      	b.n	810475a <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSI as Systick clock source */
    case SYSTICK_CLKSOURCE_LSI:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8104714:	4b14      	ldr	r3, [pc, #80]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8104716:	681b      	ldr	r3, [r3, #0]
 8104718:	4a13      	ldr	r2, [pc, #76]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 810471a:	f023 0304 	bic.w	r3, r3, #4
 810471e:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_0);
 8104720:	4b12      	ldr	r3, [pc, #72]	@ (810476c <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8104722:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104726:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 810472a:	4a10      	ldr	r2, [pc, #64]	@ (810476c <HAL_SYSTICK_CLKSourceConfig+0xac>)
 810472c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8104730:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
 8104734:	e011      	b.n	810475a <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk);
 8104736:	4b0c      	ldr	r3, [pc, #48]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8104738:	681b      	ldr	r3, [r3, #0]
 810473a:	4a0b      	ldr	r2, [pc, #44]	@ (8104768 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 810473c:	f023 0304 	bic.w	r3, r3, #4
 8104740:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL, RCC_CCIPR1_SYSTICKSEL_1);
 8104742:	4b0a      	ldr	r3, [pc, #40]	@ (810476c <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8104744:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8104748:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
 810474c:	4a07      	ldr	r2, [pc, #28]	@ (810476c <HAL_SYSTICK_CLKSourceConfig+0xac>)
 810474e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8104752:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
      break;
 8104756:	e000      	b.n	810475a <HAL_SYSTICK_CLKSourceConfig+0x9a>
    default:
      /* Nothing to do */
      break;
 8104758:	bf00      	nop
  }
}
 810475a:	bf00      	nop
 810475c:	370c      	adds	r7, #12
 810475e:	46bd      	mov	sp, r7
 8104760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104764:	4770      	bx	lr
 8104766:	bf00      	nop
 8104768:	e000e010 	.word	0xe000e010
 810476c:	46020c00 	.word	0x46020c00

08104770 <HAL_SYSTICK_GetCLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_LSE: LSE clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  */
uint32_t HAL_SYSTICK_GetCLKSourceConfig(void)
{
 8104770:	b480      	push	{r7}
 8104772:	b083      	sub	sp, #12
 8104774:	af00      	add	r7, sp, #0
  uint32_t systick_source;
  uint32_t systick_rcc_source;

  /* Read SysTick->CTRL register for internal or external clock source */
  if (READ_BIT(SysTick->CTRL, SysTick_CTRL_CLKSOURCE_Msk) != 0U)
 8104776:	4b19      	ldr	r3, [pc, #100]	@ (81047dc <HAL_SYSTICK_GetCLKSourceConfig+0x6c>)
 8104778:	681b      	ldr	r3, [r3, #0]
 810477a:	f003 0304 	and.w	r3, r3, #4
 810477e:	2b00      	cmp	r3, #0
 8104780:	d002      	beq.n	8104788 <HAL_SYSTICK_GetCLKSourceConfig+0x18>
  {
    /* Internal clock source */
    systick_source = SYSTICK_CLKSOURCE_HCLK;
 8104782:	2304      	movs	r3, #4
 8104784:	607b      	str	r3, [r7, #4]
 8104786:	e021      	b.n	81047cc <HAL_SYSTICK_GetCLKSourceConfig+0x5c>
  }
  else
  {
    /* External clock source, check the selected one in RCC */
    systick_rcc_source = READ_BIT(RCC->CCIPR1, RCC_CCIPR1_SYSTICKSEL);
 8104788:	4b15      	ldr	r3, [pc, #84]	@ (81047e0 <HAL_SYSTICK_GetCLKSourceConfig+0x70>)
 810478a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 810478e:	f403 0340 	and.w	r3, r3, #12582912	@ 0xc00000
 8104792:	603b      	str	r3, [r7, #0]

    switch (systick_rcc_source)
 8104794:	683b      	ldr	r3, [r7, #0]
 8104796:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 810479a:	d011      	beq.n	81047c0 <HAL_SYSTICK_GetCLKSourceConfig+0x50>
 810479c:	683b      	ldr	r3, [r7, #0]
 810479e:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 81047a2:	d810      	bhi.n	81047c6 <HAL_SYSTICK_GetCLKSourceConfig+0x56>
 81047a4:	683b      	ldr	r3, [r7, #0]
 81047a6:	2b00      	cmp	r3, #0
 81047a8:	d004      	beq.n	81047b4 <HAL_SYSTICK_GetCLKSourceConfig+0x44>
 81047aa:	683b      	ldr	r3, [r7, #0]
 81047ac:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 81047b0:	d003      	beq.n	81047ba <HAL_SYSTICK_GetCLKSourceConfig+0x4a>
 81047b2:	e008      	b.n	81047c6 <HAL_SYSTICK_GetCLKSourceConfig+0x56>
    {
      case (0x00000000U):
        systick_source = SYSTICK_CLKSOURCE_HCLK_DIV8;
 81047b4:	2300      	movs	r3, #0
 81047b6:	607b      	str	r3, [r7, #4]
        break;
 81047b8:	e008      	b.n	81047cc <HAL_SYSTICK_GetCLKSourceConfig+0x5c>

      case (RCC_CCIPR1_SYSTICKSEL_0):
        systick_source = SYSTICK_CLKSOURCE_LSI;
 81047ba:	2301      	movs	r3, #1
 81047bc:	607b      	str	r3, [r7, #4]
        break;
 81047be:	e005      	b.n	81047cc <HAL_SYSTICK_GetCLKSourceConfig+0x5c>

      case (RCC_CCIPR1_SYSTICKSEL_1):
        systick_source = SYSTICK_CLKSOURCE_LSE;
 81047c0:	2302      	movs	r3, #2
 81047c2:	607b      	str	r3, [r7, #4]
        break;
 81047c4:	e002      	b.n	81047cc <HAL_SYSTICK_GetCLKSourceConfig+0x5c>

      default:
        systick_source = SYSTICK_CLKSOURCE_HCLK_DIV8;
 81047c6:	2300      	movs	r3, #0
 81047c8:	607b      	str	r3, [r7, #4]
        break;
 81047ca:	bf00      	nop
    }
  }
  return systick_source;
 81047cc:	687b      	ldr	r3, [r7, #4]
}
 81047ce:	4618      	mov	r0, r3
 81047d0:	370c      	adds	r7, #12
 81047d2:	46bd      	mov	sp, r7
 81047d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81047d8:	4770      	bx	lr
 81047da:	bf00      	nop
 81047dc:	e000e010 	.word	0xe000e010
 81047e0:	46020c00 	.word	0x46020c00

081047e4 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 81047e4:	b480      	push	{r7}
 81047e6:	b083      	sub	sp, #12
 81047e8:	af00      	add	r7, sp, #0
 81047ea:	6078      	str	r0, [r7, #4]
 81047ec:	460b      	mov	r3, r1
 81047ee:	807b      	strh	r3, [r7, #2]
 81047f0:	4613      	mov	r3, r2
 81047f2:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 81047f4:	787b      	ldrb	r3, [r7, #1]
 81047f6:	2b00      	cmp	r3, #0
 81047f8:	d003      	beq.n	8104802 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 81047fa:	887a      	ldrh	r2, [r7, #2]
 81047fc:	687b      	ldr	r3, [r7, #4]
 81047fe:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
  }
}
 8104800:	e002      	b.n	8104808 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR  = (uint32_t)GPIO_Pin;
 8104802:	887a      	ldrh	r2, [r7, #2]
 8104804:	687b      	ldr	r3, [r7, #4]
 8104806:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8104808:	bf00      	nop
 810480a:	370c      	adds	r7, #12
 810480c:	46bd      	mov	sp, r7
 810480e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104812:	4770      	bx	lr

08104814 <HAL_PWREx_EnableVddIO2>:
  * @note   Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply
  *         is present for consumption saving.
  * @retval None.
  */
void HAL_PWREx_EnableVddIO2(void)
{
 8104814:	b480      	push	{r7}
 8104816:	af00      	add	r7, sp, #0
  SET_BIT(PWR->SVMCR, PWR_SVMCR_IO2SV);
 8104818:	4b05      	ldr	r3, [pc, #20]	@ (8104830 <HAL_PWREx_EnableVddIO2+0x1c>)
 810481a:	691b      	ldr	r3, [r3, #16]
 810481c:	4a04      	ldr	r2, [pc, #16]	@ (8104830 <HAL_PWREx_EnableVddIO2+0x1c>)
 810481e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8104822:	6113      	str	r3, [r2, #16]
}
 8104824:	bf00      	nop
 8104826:	46bd      	mov	sp, r7
 8104828:	f85d 7b04 	ldr.w	r7, [sp], #4
 810482c:	4770      	bx	lr
 810482e:	bf00      	nop
 8104830:	46020800 	.word	0x46020800

08104834 <HAL_RCC_GetSysClockFreq>:
  * @note   Each time SYSCLK changes, this function must be called to update the
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8104834:	b480      	push	{r7}
 8104836:	b08b      	sub	sp, #44	@ 0x2c
 8104838:	af00      	add	r7, sp, #0
  uint32_t msirange = 0U;
 810483a:	2300      	movs	r3, #0
 810483c:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t pllsource;
  uint32_t pllr;
  uint32_t pllm;
  uint32_t pllfracen;
  uint32_t sysclockfreq = 0U;
 810483e:	2300      	movs	r3, #0
 8104840:	623b      	str	r3, [r7, #32]
  uint32_t sysclk_source;
  uint32_t pll_oscsource;
  float_t fracn1;
  float_t pllvco;

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8104842:	4b78      	ldr	r3, [pc, #480]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8104844:	69db      	ldr	r3, [r3, #28]
 8104846:	f003 030c 	and.w	r3, r3, #12
 810484a:	61bb      	str	r3, [r7, #24]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 810484c:	4b75      	ldr	r3, [pc, #468]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 810484e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8104850:	f003 0303 	and.w	r3, r3, #3
 8104854:	617b      	str	r3, [r7, #20]

  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8104856:	69bb      	ldr	r3, [r7, #24]
 8104858:	2b00      	cmp	r3, #0
 810485a:	d005      	beq.n	8104868 <HAL_RCC_GetSysClockFreq+0x34>
 810485c:	69bb      	ldr	r3, [r7, #24]
 810485e:	2b0c      	cmp	r3, #12
 8104860:	d121      	bne.n	81048a6 <HAL_RCC_GetSysClockFreq+0x72>
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 8104862:	697b      	ldr	r3, [r7, #20]
 8104864:	2b01      	cmp	r3, #1
 8104866:	d11e      	bne.n	81048a6 <HAL_RCC_GetSysClockFreq+0x72>
  {
    /* MSI or PLL with MSI source used as system clock source */

    /* Get SYSCLK source */
    if (READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 8104868:	4b6e      	ldr	r3, [pc, #440]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 810486a:	689b      	ldr	r3, [r3, #8]
 810486c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8104870:	2b00      	cmp	r3, #0
 8104872:	d107      	bne.n	8104884 <HAL_RCC_GetSysClockFreq+0x50>
    {
      /* MSISRANGE from RCC_CSR applies */
      msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 8104874:	4b6b      	ldr	r3, [pc, #428]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8104876:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 810487a:	0b1b      	lsrs	r3, r3, #12
 810487c:	f003 030f 	and.w	r3, r3, #15
 8104880:	627b      	str	r3, [r7, #36]	@ 0x24
 8104882:	e005      	b.n	8104890 <HAL_RCC_GetSysClockFreq+0x5c>
    }
    else
    {
      /* MSIRANGE from RCC_CR applies */
      msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 8104884:	4b67      	ldr	r3, [pc, #412]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8104886:	689b      	ldr	r3, [r3, #8]
 8104888:	0f1b      	lsrs	r3, r3, #28
 810488a:	f003 030f 	and.w	r3, r3, #15
 810488e:	627b      	str	r3, [r7, #36]	@ 0x24
    }
    /*MSI frequency range in HZ*/
    msirange = MSIRangeTable[msirange];
 8104890:	4a65      	ldr	r2, [pc, #404]	@ (8104a28 <HAL_RCC_GetSysClockFreq+0x1f4>)
 8104892:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8104894:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8104898:	627b      	str	r3, [r7, #36]	@ 0x24

    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 810489a:	69bb      	ldr	r3, [r7, #24]
 810489c:	2b00      	cmp	r3, #0
 810489e:	d110      	bne.n	81048c2 <HAL_RCC_GetSysClockFreq+0x8e>
    {
      /* MSI used as system clock source */
      sysclockfreq = msirange;
 81048a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 81048a2:	623b      	str	r3, [r7, #32]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 81048a4:	e00d      	b.n	81048c2 <HAL_RCC_GetSysClockFreq+0x8e>
    }
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 81048a6:	4b5f      	ldr	r3, [pc, #380]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81048a8:	69db      	ldr	r3, [r3, #28]
 81048aa:	f003 030c 	and.w	r3, r3, #12
 81048ae:	2b04      	cmp	r3, #4
 81048b0:	d102      	bne.n	81048b8 <HAL_RCC_GetSysClockFreq+0x84>
  {
    /* HSI used as system clock source */
    sysclockfreq = HSI_VALUE;
 81048b2:	4b5e      	ldr	r3, [pc, #376]	@ (8104a2c <HAL_RCC_GetSysClockFreq+0x1f8>)
 81048b4:	623b      	str	r3, [r7, #32]
 81048b6:	e004      	b.n	81048c2 <HAL_RCC_GetSysClockFreq+0x8e>
  }
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 81048b8:	69bb      	ldr	r3, [r7, #24]
 81048ba:	2b08      	cmp	r3, #8
 81048bc:	d101      	bne.n	81048c2 <HAL_RCC_GetSysClockFreq+0x8e>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 81048be:	4b5b      	ldr	r3, [pc, #364]	@ (8104a2c <HAL_RCC_GetSysClockFreq+0x1f8>)
 81048c0:	623b      	str	r3, [r7, #32]
  else
  {
    /* Nothing to do */
  }

  if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 81048c2:	69bb      	ldr	r3, [r7, #24]
 81048c4:	2b0c      	cmp	r3, #12
 81048c6:	f040 80a5 	bne.w	8104a14 <HAL_RCC_GetSysClockFreq+0x1e0>
  {
    /* PLL used as system clock  source
       PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
       SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 81048ca:	4b56      	ldr	r3, [pc, #344]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81048cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81048ce:	f003 0303 	and.w	r3, r3, #3
 81048d2:	613b      	str	r3, [r7, #16]
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 81048d4:	4b53      	ldr	r3, [pc, #332]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81048d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81048d8:	0a1b      	lsrs	r3, r3, #8
 81048da:	f003 030f 	and.w	r3, r3, #15
 81048de:	3301      	adds	r3, #1
 81048e0:	60fb      	str	r3, [r7, #12]
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 81048e2:	4b50      	ldr	r3, [pc, #320]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81048e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81048e6:	091b      	lsrs	r3, r3, #4
 81048e8:	f003 0301 	and.w	r3, r3, #1
 81048ec:	60bb      	str	r3, [r7, #8]
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN) >> \
 81048ee:	4b4d      	ldr	r3, [pc, #308]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81048f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 81048f2:	08db      	lsrs	r3, r3, #3
 81048f4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 81048f8:	68ba      	ldr	r2, [r7, #8]
 81048fa:	fb02 f303 	mul.w	r3, r2, r3
 81048fe:	ee07 3a90 	vmov	s15, r3
 8104902:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8104906:	edc7 7a01 	vstr	s15, [r7, #4]
                                              RCC_PLL1FRACR_PLL1FRACN_Pos));

    switch (pllsource)
 810490a:	693b      	ldr	r3, [r7, #16]
 810490c:	2b02      	cmp	r3, #2
 810490e:	d003      	beq.n	8104918 <HAL_RCC_GetSysClockFreq+0xe4>
 8104910:	693b      	ldr	r3, [r7, #16]
 8104912:	2b03      	cmp	r3, #3
 8104914:	d022      	beq.n	810495c <HAL_RCC_GetSysClockFreq+0x128>
 8104916:	e043      	b.n	81049a0 <HAL_RCC_GetSysClockFreq+0x16c>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
        pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8104918:	68fb      	ldr	r3, [r7, #12]
 810491a:	ee07 3a90 	vmov	s15, r3
 810491e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8104922:	eddf 6a43 	vldr	s13, [pc, #268]	@ 8104a30 <HAL_RCC_GetSysClockFreq+0x1fc>
 8104926:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810492a:	4b3e      	ldr	r3, [pc, #248]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 810492c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 810492e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8104932:	ee07 3a90 	vmov	s15, r3
 8104936:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 810493a:	ed97 6a01 	vldr	s12, [r7, #4]
 810493e:	eddf 5a3d 	vldr	s11, [pc, #244]	@ 8104a34 <HAL_RCC_GetSysClockFreq+0x200>
 8104942:	eec6 7a25 	vdiv.f32	s15, s12, s11
        pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8104946:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 810494a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 810494e:	ee77 7aa6 	vadd.f32	s15, s15, s13
        pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8104952:	ee67 7a27 	vmul.f32	s15, s14, s15
 8104956:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 810495a:	e046      	b.n	81049ea <HAL_RCC_GetSysClockFreq+0x1b6>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 810495c:	68fb      	ldr	r3, [r7, #12]
 810495e:	ee07 3a90 	vmov	s15, r3
 8104962:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8104966:	eddf 6a32 	vldr	s13, [pc, #200]	@ 8104a30 <HAL_RCC_GetSysClockFreq+0x1fc>
 810496a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810496e:	4b2d      	ldr	r3, [pc, #180]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 8104970:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8104972:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8104976:	ee07 3a90 	vmov	s15, r3
 810497a:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 810497e:	ed97 6a01 	vldr	s12, [r7, #4]
 8104982:	eddf 5a2c 	vldr	s11, [pc, #176]	@ 8104a34 <HAL_RCC_GetSysClockFreq+0x200>
 8104986:	eec6 7a25 	vdiv.f32	s15, s12, s11
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 810498a:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 810498e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8104992:	ee77 7aa6 	vadd.f32	s15, s15, s13
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8104996:	ee67 7a27 	vmul.f32	s15, s14, s15
 810499a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 810499e:	e024      	b.n	81049ea <HAL_RCC_GetSysClockFreq+0x1b6>

      case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      default:
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 81049a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 81049a2:	ee07 3a90 	vmov	s15, r3
 81049a6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81049aa:	68fb      	ldr	r3, [r7, #12]
 81049ac:	ee07 3a90 	vmov	s15, r3
 81049b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81049b4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81049b8:	4b1a      	ldr	r3, [pc, #104]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81049ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 81049bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81049c0:	ee07 3a90 	vmov	s15, r3
 81049c4:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 81049c8:	ed97 6a01 	vldr	s12, [r7, #4]
 81049cc:	eddf 5a19 	vldr	s11, [pc, #100]	@ 8104a34 <HAL_RCC_GetSysClockFreq+0x200>
 81049d0:	eec6 7a25 	vdiv.f32	s15, s12, s11
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 81049d4:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                         (fracn1 / (float_t)0x2000) + (float_t)1U);
 81049d8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 81049dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
        pllvco = ((float_t) msirange / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 81049e0:	ee67 7a27 	vmul.f32	s15, s14, s15
 81049e4:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 81049e8:	bf00      	nop
    }

    pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U);
 81049ea:	4b0e      	ldr	r3, [pc, #56]	@ (8104a24 <HAL_RCC_GetSysClockFreq+0x1f0>)
 81049ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 81049ee:	0e1b      	lsrs	r3, r3, #24
 81049f0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 81049f4:	3301      	adds	r3, #1
 81049f6:	603b      	str	r3, [r7, #0]
    sysclockfreq = (uint32_t)(float_t)((float_t)pllvco / (float_t)pllr);
 81049f8:	683b      	ldr	r3, [r7, #0]
 81049fa:	ee07 3a90 	vmov	s15, r3
 81049fe:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8104a02:	edd7 6a07 	vldr	s13, [r7, #28]
 8104a06:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8104a0a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8104a0e:	ee17 3a90 	vmov	r3, s15
 8104a12:	623b      	str	r3, [r7, #32]
  }

  return sysclockfreq;
 8104a14:	6a3b      	ldr	r3, [r7, #32]
}
 8104a16:	4618      	mov	r0, r3
 8104a18:	372c      	adds	r7, #44	@ 0x2c
 8104a1a:	46bd      	mov	sp, r7
 8104a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104a20:	4770      	bx	lr
 8104a22:	bf00      	nop
 8104a24:	46020c00 	.word	0x46020c00
 8104a28:	08104de0 	.word	0x08104de0
 8104a2c:	00f42400 	.word	0x00f42400
 8104a30:	4b742400 	.word	0x4b742400
 8104a34:	46000000 	.word	0x46000000

08104a38 <__libc_init_array>:
 8104a38:	b570      	push	{r4, r5, r6, lr}
 8104a3a:	4d0d      	ldr	r5, [pc, #52]	@ (8104a70 <__libc_init_array+0x38>)
 8104a3c:	2600      	movs	r6, #0
 8104a3e:	4c0d      	ldr	r4, [pc, #52]	@ (8104a74 <__libc_init_array+0x3c>)
 8104a40:	1b64      	subs	r4, r4, r5
 8104a42:	10a4      	asrs	r4, r4, #2
 8104a44:	42a6      	cmp	r6, r4
 8104a46:	d109      	bne.n	8104a5c <__libc_init_array+0x24>
 8104a48:	4d0b      	ldr	r5, [pc, #44]	@ (8104a78 <__libc_init_array+0x40>)
 8104a4a:	2600      	movs	r6, #0
 8104a4c:	4c0b      	ldr	r4, [pc, #44]	@ (8104a7c <__libc_init_array+0x44>)
 8104a4e:	f000 f817 	bl	8104a80 <_init>
 8104a52:	1b64      	subs	r4, r4, r5
 8104a54:	10a4      	asrs	r4, r4, #2
 8104a56:	42a6      	cmp	r6, r4
 8104a58:	d105      	bne.n	8104a66 <__libc_init_array+0x2e>
 8104a5a:	bd70      	pop	{r4, r5, r6, pc}
 8104a5c:	f855 3b04 	ldr.w	r3, [r5], #4
 8104a60:	3601      	adds	r6, #1
 8104a62:	4798      	blx	r3
 8104a64:	e7ee      	b.n	8104a44 <__libc_init_array+0xc>
 8104a66:	f855 3b04 	ldr.w	r3, [r5], #4
 8104a6a:	3601      	adds	r6, #1
 8104a6c:	4798      	blx	r3
 8104a6e:	e7f2      	b.n	8104a56 <__libc_init_array+0x1e>
 8104a70:	081051b4 	.word	0x081051b4
 8104a74:	081051b4 	.word	0x081051b4
 8104a78:	081051b4 	.word	0x081051b4
 8104a7c:	081051b8 	.word	0x081051b8

08104a80 <_init>:
 8104a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8104a82:	bf00      	nop
 8104a84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8104a86:	bc08      	pop	{r3}
 8104a88:	469e      	mov	lr, r3
 8104a8a:	4770      	bx	lr

08104a8c <_fini>:
 8104a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8104a8e:	bf00      	nop
 8104a90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8104a92:	bc08      	pop	{r3}
 8104a94:	469e      	mov	lr, r3
 8104a96:	4770      	bx	lr

08104a98 <__SECURE_ECC_Sign_NSC_veneer>:
 8104a98:	f85f f000 	ldr.w	pc, [pc]	@ 8104a9c <__SECURE_ECC_Sign_NSC_veneer+0x4>
 8104a9c:	0c0fe009 	.word	0x0c0fe009
